Error ------------------------------------------------------------------------------------------- buffer/buffer.js:57:22

Cannot call `Buffer.from` with array literal bound to `value` because array literal [1] is incompatible with
`ArrayBuffer` [2].

   buffer/buffer.js:57:22
    57| buffer = Buffer.from([0x62, 0x75, 0x66, 0x66, 0x65, 0x72], (a:number) => a + 1, {}); // error
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   <BUILTINS>/node.js:110:22
   110|   static from(value: ArrayBuffer, byteOffset?: number, length?: number): Buffer;
                             ^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------- child_process/execSync.js:8:17

Cannot call `execSync` with object literal bound to `options` because string [1] is incompatible with number [2] in
property `timeout`.

   child_process/execSync.js:8:17
     8| (execSync('ls', {timeout: '250'})); // error, no signatures match
                        ^^^^^^^^^^^^^^^^

References:
   child_process/execSync.js:8:27
     8| (execSync('ls', {timeout: '250'})); // error, no signatures match
                                  ^^^^^ [1]
   <BUILTINS>/node.js:149:13
   149|   timeout?: number;
                    ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- crypto/crypto.js:12:8

Cannot cast `hmac.read()` to number because:
 - null or undefined [1] is incompatible with number [2].
 - string [3] is incompatible with number [2].
 - `Buffer` [4] is incompatible with number [2].

   crypto/crypto.js:12:8
     12|       (hmac.read(): number); // 4 errors: null, void, string, Buffer
                ^^^^^^^^^^^

References:
   <BUILTINS>/node.js:1428:24
   1428|   read(size?: number): ?(string | Buffer);
                                ^^^^^^^^^^^^^^^^^^ [1]
   crypto/crypto.js:12:21
     12|       (hmac.read(): number); // 4 errors: null, void, string, Buffer
                             ^^^^^^ [2]
   <BUILTINS>/node.js:1428:26
   1428|   read(size?: number): ?(string | Buffer);
                                  ^^^^^^ [3]
   <BUILTINS>/node.js:1428:35
   1428|   read(size?: number): ?(string | Buffer);
                                           ^^^^^^ [4]


Error ------------------------------------------------------------------------------------------- crypto/crypto.js:16:16

Cannot call `hmac.write` with `123` bound to `chunk` because number [1] is incompatible with string [2].

   crypto/crypto.js:16:16
     16|     hmac.write(123); // 2 errors: not a string or a Buffer
                        ^^^ [1]

References:
   <BUILTINS>/node.js:1479:21
   1479|     chunk: Buffer | string,
                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- crypto/crypto.js:26:24

Cannot call `hmac.update` with `'bogus'` bound to `input_encoding` because string [1] is incompatible with string
enum [2].

   crypto/crypto.js:26:24
    26|     hmac.update('foo', 'bogus'); // 1 error
                               ^^^^^^^ [1]

References:
   <BUILTINS>/node.js:441:50
                                                         v----------------------------
   441|   update(data: string | Buffer, input_encoding?: 'utf8' | 'ascii' | 'latin1' |
   442|   'binary'): crypto$Hmac;
          -------^ [2]


Error ------------------------------------------------------------------------------------------- crypto/crypto.js:29:22

Cannot call `hmac.update` with `'bogus'` bound to `input_encoding` because string [1] is incompatible with string
enum [2].

   crypto/crypto.js:29:22
    29|     hmac.update(buf, 'bogus'); // 1 error
                             ^^^^^^^ [1]

References:
   <BUILTINS>/node.js:441:50
                                                         v----------------------------
   441|   update(data: string | Buffer, input_encoding?: 'utf8' | 'ascii' | 'latin1' |
   442|   'binary'): crypto$Hmac;
          -------^ [2]


Error -------------------------------------------------------------------------------------------- crypto/crypto.js:36:6

Cannot cast `hmac.digest(...)` to undefined because string [1] is incompatible with undefined [2].

   crypto/crypto.js:36:6
    36|     (hmac.digest('hex'): void); // 1 error
             ^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/node.js:438:61
   438|   digest(encoding: 'hex' | 'latin1' | 'binary' | 'base64'): string;
                                                                    ^^^^^^ [1]
   crypto/crypto.js:36:26
    36|     (hmac.digest('hex'): void); // 1 error
                                 ^^^^ [2]


Error -------------------------------------------------------------------------------------------- crypto/crypto.js:37:6

Cannot cast `hmac.digest()` to undefined because `Buffer` [1] is incompatible with undefined [2].

   crypto/crypto.js:37:6
    37|     (hmac.digest(): void); // 1 error
             ^^^^^^^^^^^^^

References:
   <BUILTINS>/node.js:440:27
   440|   digest(encoding: void): Buffer;
                                  ^^^^^^ [1]
   crypto/crypto.js:37:21
    37|     (hmac.digest(): void); // 1 error
                            ^^^^ [2]


Error: fs/fs.js:13
     v-----------------------------------------------------------
 13: fs.readFile("file.exp", { encoding: "blah" }, (_, data) => {
 14:   (data : string);
 15: });
     -^ call of method `readFile`. Could not decide which case to select
 13: fs.readFile("file.exp", { encoding: "blah" }, (_, data) => {
     ^^^^^^^^^^^ intersection type
  Case 3 may work:
                                  v
  909:   declare function readFile(
  910:     path: string | Buffer | URL | number,
  911:     options: { encoding: string; flag?: string },
  912:     callback: (err: ?ErrnoError, data: string) => void
  913:   ): void;
         ------^ function type. See lib: <BUILTINS>/node.js:909
  But if it doesn't, case 4 looks promising too:
                                  v
  914:   declare function readFile(
  915:     path: string | Buffer | URL | number,
  916:     options: { flag?: string },
  917:     callback: (err: ?ErrnoError, data: Buffer) => void
  918:   ): void;
         ------^ function type. See lib: <BUILTINS>/node.js:914
  Please provide additional annotation(s) to determine whether case 3 works (or consider merging it with case 4):
   13: fs.readFile("file.exp", { encoding: "blah" }, (_, data) => {
                                                      ^ _
   13: fs.readFile("file.exp", { encoding: "blah" }, (_, data) => {
                                                         ^^^^ data

Error ---------------------------------------------------------------------------------------------------- fs/fs.js:28:2

Cannot cast `fs.readFileSync(...)` to string because `Buffer` [1] is incompatible with string [2].

   fs/fs.js:28:2
    28| (fs.readFileSync("file.exp") : string); // error
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/node.js:921:6
   921|   ): Buffer;
             ^^^^^^ [1]
   fs/fs.js:28:32
    28| (fs.readFileSync("file.exp") : string); // error
                                       ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- fs/fs.js:31:2

Cannot cast `fs.readFileSync(...)` to `Buffer` because string [1] is incompatible with `Buffer` [2].

   fs/fs.js:31:2
    31| (fs.readFileSync("file.exp", "blah") : Buffer); // error
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/node.js:925:6
   925|   ): string;
             ^^^^^^ [1]
   fs/fs.js:31:40
    31| (fs.readFileSync("file.exp", "blah") : Buffer); // error
                                               ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- fs/fs.js:34:2

Cannot cast `fs.readFileSync(...)` to `Buffer` because string [1] is incompatible with `Buffer` [2].

   fs/fs.js:34:2
    34| (fs.readFileSync("file.exp", { encoding: "blah" }) : Buffer); // error
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/node.js:926:118
   926|   declare function readFileSync(path: string | Buffer | URL | number, options: { encoding: string, flag?: string }): string;
                                                                                                                             ^^^^^^ [1]
   fs/fs.js:34:54
    34| (fs.readFileSync("file.exp", { encoding: "blah" }) : Buffer); // error
                                                             ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- fs/fs.js:37:2

Cannot cast `fs.readFileSync(...)` to string because `Buffer` [1] is incompatible with string [2].

   fs/fs.js:37:2
    37| (fs.readFileSync("file.exp", {}) : string); // error
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/node.js:927:117
   927|   declare function readFileSync(path: string | Buffer | URL | number, options: { encoding?: void, flag?: string }): Buffer;
                                                                                                                            ^^^^^^ [1]
   fs/fs.js:37:36
    37| (fs.readFileSync("file.exp", {}) : string); // error
                                           ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- http/server.js:67:25

Cannot call `server.listen` with object literal bound to `callback` because a callable signature is missing in object
literal [1] but exists in function type [2].

   http/server.js:67:25
     67| server.listen(() => {}, {});
                                 ^^ [1]

References:
   <BUILTINS>/node.js:1099:39
   1099|     listen(handle: Object, callback?: Function): Server;
                                               ^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- http/server.js:68:30

Cannot call `server.listen` with object literal bound to `callback` because a callable signature is missing in object
literal [1] but exists in function type [2].

   http/server.js:68:30
     68| server.listen(function() {}, {});
                                      ^^ [1]

References:
   <BUILTINS>/node.js:1099:39
   1099|     listen(handle: Object, callback?: Function): Server;
                                               ^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- http/server.js:69:15

Cannot call `server.listen` with object literal bound to `port` because object literal [1] is incompatible with
number [2].

   http/server.js:69:15
     69| server.listen({}, () => {}, 'localhost', 123);
                       ^^ [1]

References:
   <BUILTINS>/node.js:1093:19
   1093|     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                           ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- http/server.js:70:15

Cannot call `server.listen` with object literal bound to `port` because object literal [1] is incompatible with
number [2].

   http/server.js:70:15
     70| server.listen({}, function() {}, 'localhost', 123);
                       ^^ [1]

References:
   <BUILTINS>/node.js:1093:19
   1093|     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                           ^^^^^^ [2]


Error: http/server.js:71
 71: server.listen({}, () => {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 71: server.listen({}, () => {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   71: server.listen({}, () => {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   71: server.listen({}, () => {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   71: server.listen({}, () => {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1096

Error: http/server.js:72
 72: server.listen({}, function() {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 72: server.listen({}, function() {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   72: server.listen({}, function() {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   72: server.listen({}, function() {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   72: server.listen({}, function() {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1096

Error --------------------------------------------------------------------------------------------- http/server.js:73:25

Cannot call `server.listen` with `123` bound to `callback` because number [1] is incompatible with function type [2].

   http/server.js:73:25
     73| server.listen(() => {}, 123);
                                 ^^^ [1]

References:
   <BUILTINS>/node.js:1099:39
   1099|     listen(handle: Object, callback?: Function): Server;
                                               ^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- http/server.js:74:30

Cannot call `server.listen` with `123` bound to `callback` because number [1] is incompatible with function type [2].

   http/server.js:74:30
     74| server.listen(function() {}, 123);
                                      ^^^ [1]

References:
   <BUILTINS>/node.js:1099:39
   1099|     listen(handle: Object, callback?: Function): Server;
                                               ^^^^^^^^ [2]


Error: http/server.js:75
 75: server.listen(() => {}, 'localhost', 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 75: server.listen(() => {}, 'localhost', 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   75: server.listen(() => {}, 'localhost', 123);
                     ^^^^^^^^ function. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   75: server.listen(() => {}, 'localhost', 123);
                     ^^^^^^^^ function. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   75: server.listen(() => {}, 'localhost', 123);
                     ^^^^^^^^ function. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1096

Error: http/server.js:76
 76: server.listen(function() {}, 'localhost', 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 76: server.listen(function() {}, 'localhost', 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   76: server.listen(function() {}, 'localhost', 123);
                     ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   76: server.listen(function() {}, 'localhost', 123);
                     ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   76: server.listen(function() {}, 'localhost', 123);
                     ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1096

Error --------------------------------------------------------------------------------------------- http/server.js:77:25

Cannot call `server.listen` with `'localhost'` bound to `callback` because string [1] is incompatible with function
type [2].

   http/server.js:77:25
     77| server.listen(() => {}, 'localhost');
                                 ^^^^^^^^^^^ [1]

References:
   <BUILTINS>/node.js:1099:39
   1099|     listen(handle: Object, callback?: Function): Server;
                                               ^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- http/server.js:78:30

Cannot call `server.listen` with `'localhost'` bound to `callback` because string [1] is incompatible with function
type [2].

   http/server.js:78:30
     78| server.listen(function() {}, 'localhost');
                                      ^^^^^^^^^^^ [1]

References:
   <BUILTINS>/node.js:1099:39
   1099|     listen(handle: Object, callback?: Function): Server;
                                               ^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- http/server.js:79:21

Cannot call `server.listen` with function bound to `hostname` because function [1] is incompatible with string [2].

   http/server.js:79:21
     79| server.listen(8080, () => {}, 'localhost', 123);
                             ^^^^^^^^ [1]

References:
   <BUILTINS>/node.js:1093:38
   1093|     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                              ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- http/server.js:80:21

Cannot call `server.listen` with function bound to `hostname` because function [1] is incompatible with string [2].

   http/server.js:80:21
     80| server.listen(8080, function() {}, 'localhost', 123);
                             ^^^^^^^^^^^^^

References:
   http/server.js:80:21
     80| server.listen(8080, function() {}, 'localhost', 123);
                             ^^^^^^^^^^ [1]
   <BUILTINS>/node.js:1093:38
   1093|     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                              ^^^^^^ [2]


Error: http/server.js:81
 81: server.listen(8080, () => {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 81: server.listen(8080, () => {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   81: server.listen(8080, () => {}, 123);
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   81: server.listen(8080, () => {}, 123);
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   81: server.listen(8080, () => {}, 123);
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1096

Error: http/server.js:82
 82: server.listen(8080, function() {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 82: server.listen(8080, function() {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   82: server.listen(8080, function() {}, 123);
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   82: server.listen(8080, function() {}, 123);
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   82: server.listen(8080, function() {}, 123);
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1096

Error: http/server.js:83
 83: server.listen(8080, () => {}, 'localhost');
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 83: server.listen(8080, () => {}, 'localhost');
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   83: server.listen(8080, () => {}, 'localhost');
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   83: server.listen(8080, () => {}, 'localhost');
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   83: server.listen(8080, () => {}, 'localhost');
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1096

Error: http/server.js:84
 84: server.listen(8080, function() {}, 'localhost');
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 84: server.listen(8080, function() {}, 'localhost');
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   84: server.listen(8080, function() {}, 'localhost');
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   84: server.listen(8080, function() {}, 'localhost');
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   84: server.listen(8080, function() {}, 'localhost');
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1096

Error -------------------------------------------------------------------------------------------- https/server.js:67:25

Cannot call `server.listen` with object literal bound to `callback` because a callable signature is missing in object
literal [1] but exists in function type [2].

   https/server.js:67:25
     67| server.listen(() => {}, {});
                                 ^^ [1]

References:
   <BUILTINS>/node.js:1138:39
   1138|     listen(handle: Object, callback?: Function): Server;
                                               ^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- https/server.js:68:30

Cannot call `server.listen` with object literal bound to `callback` because a callable signature is missing in object
literal [1] but exists in function type [2].

   https/server.js:68:30
     68| server.listen(function() {}, {});
                                      ^^ [1]

References:
   <BUILTINS>/node.js:1138:39
   1138|     listen(handle: Object, callback?: Function): Server;
                                               ^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- https/server.js:69:15

Cannot call `server.listen` with object literal bound to `port` because object literal [1] is incompatible with
number [2].

   https/server.js:69:15
     69| server.listen({}, () => {}, 'localhost', 123);
                       ^^ [1]

References:
   <BUILTINS>/node.js:1132:19
   1132|     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                           ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- https/server.js:70:15

Cannot call `server.listen` with object literal bound to `port` because object literal [1] is incompatible with
number [2].

   https/server.js:70:15
     70| server.listen({}, function() {}, 'localhost', 123);
                       ^^ [1]

References:
   <BUILTINS>/node.js:1132:19
   1132|     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                           ^^^^^^ [2]


Error: https/server.js:71
 71: server.listen({}, () => {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 71: server.listen({}, () => {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   71: server.listen({}, () => {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   71: server.listen({}, () => {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   71: server.listen({}, () => {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1135

Error: https/server.js:72
 72: server.listen({}, function() {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 72: server.listen({}, function() {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   72: server.listen({}, function() {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   72: server.listen({}, function() {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   72: server.listen({}, function() {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1135

Error -------------------------------------------------------------------------------------------- https/server.js:73:25

Cannot call `server.listen` with `123` bound to `callback` because number [1] is incompatible with function type [2].

   https/server.js:73:25
     73| server.listen(() => {}, 123);
                                 ^^^ [1]

References:
   <BUILTINS>/node.js:1138:39
   1138|     listen(handle: Object, callback?: Function): Server;
                                               ^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- https/server.js:74:30

Cannot call `server.listen` with `123` bound to `callback` because number [1] is incompatible with function type [2].

   https/server.js:74:30
     74| server.listen(function() {}, 123);
                                      ^^^ [1]

References:
   <BUILTINS>/node.js:1138:39
   1138|     listen(handle: Object, callback?: Function): Server;
                                               ^^^^^^^^ [2]


Error: https/server.js:75
 75: server.listen(() => {}, 'localhost', 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 75: server.listen(() => {}, 'localhost', 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   75: server.listen(() => {}, 'localhost', 123);
                     ^^^^^^^^ function. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   75: server.listen(() => {}, 'localhost', 123);
                     ^^^^^^^^ function. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   75: server.listen(() => {}, 'localhost', 123);
                     ^^^^^^^^ function. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1135

Error: https/server.js:76
 76: server.listen(function() {}, 'localhost', 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 76: server.listen(function() {}, 'localhost', 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   76: server.listen(function() {}, 'localhost', 123);
                     ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   76: server.listen(function() {}, 'localhost', 123);
                     ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   76: server.listen(function() {}, 'localhost', 123);
                     ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1135

Error -------------------------------------------------------------------------------------------- https/server.js:77:25

Cannot call `server.listen` with `'localhost'` bound to `callback` because string [1] is incompatible with function
type [2].

   https/server.js:77:25
     77| server.listen(() => {}, 'localhost');
                                 ^^^^^^^^^^^ [1]

References:
   <BUILTINS>/node.js:1138:39
   1138|     listen(handle: Object, callback?: Function): Server;
                                               ^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- https/server.js:78:30

Cannot call `server.listen` with `'localhost'` bound to `callback` because string [1] is incompatible with function
type [2].

   https/server.js:78:30
     78| server.listen(function() {}, 'localhost');
                                      ^^^^^^^^^^^ [1]

References:
   <BUILTINS>/node.js:1138:39
   1138|     listen(handle: Object, callback?: Function): Server;
                                               ^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- https/server.js:79:21

Cannot call `server.listen` with function bound to `hostname` because function [1] is incompatible with string [2].

   https/server.js:79:21
     79| server.listen(8443, () => {}, 'localhost', 123);
                             ^^^^^^^^ [1]

References:
   <BUILTINS>/node.js:1132:38
   1132|     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                              ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- https/server.js:80:21

Cannot call `server.listen` with function bound to `hostname` because function [1] is incompatible with string [2].

   https/server.js:80:21
     80| server.listen(8443, function() {}, 'localhost', 123);
                             ^^^^^^^^^^^^^

References:
   https/server.js:80:21
     80| server.listen(8443, function() {}, 'localhost', 123);
                             ^^^^^^^^^^ [1]
   <BUILTINS>/node.js:1132:38
   1132|     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                              ^^^^^^ [2]


Error: https/server.js:81
 81: server.listen(8443, () => {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 81: server.listen(8443, () => {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   81: server.listen(8443, () => {}, 123);
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   81: server.listen(8443, () => {}, 123);
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   81: server.listen(8443, () => {}, 123);
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1135

Error: https/server.js:82
 82: server.listen(8443, function() {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 82: server.listen(8443, function() {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   82: server.listen(8443, function() {}, 123);
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   82: server.listen(8443, function() {}, 123);
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   82: server.listen(8443, function() {}, 123);
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1135

Error: https/server.js:83
 83: server.listen(8443, () => {}, 'localhost');
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 83: server.listen(8443, () => {}, 'localhost');
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   83: server.listen(8443, () => {}, 'localhost');
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   83: server.listen(8443, () => {}, 'localhost');
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   83: server.listen(8443, () => {}, 'localhost');
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1135

Error: https/server.js:84
 84: server.listen(8443, function() {}, 'localhost');
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 84: server.listen(8443, function() {}, 'localhost');
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   84: server.listen(8443, function() {}, 'localhost');
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   84: server.listen(8443, function() {}, 'localhost');
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   84: server.listen(8443, function() {}, 'localhost');
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1135

Error ---------------------------------------------------------------------------- invalid_package_file/package.json:1:1

Unexpected end of input

   1|
      


Error ---------------------------------------------------------------------------------- json_file/json_invalid.json:1:1

Unexpected token :

   1| :derp
      ^


Error -------------------------------------------------------------------------------------------- json_file/test.js:4:2

Cannot cast `data.foo` to undefined because object literal [1] is incompatible with undefined [2].

   json_file/test.js:4:2
   4| (data.foo: void); // error, should be object literal
       ^^^^^^^^

References:
   json_file/package/index.json:2:10
               v
   2|   "foo": {
   3|     "bar": true
   4|   },
        ^ [1]
   json_file/test.js:4:12
   4| (data.foo: void); // error, should be object literal
                 ^^^^ [2]


Error -------------------------------------------------------------------------------------------- json_file/test.js:5:2

Cannot cast `data.foo.bar` to undefined because boolean [1] is incompatible with undefined [2].

   json_file/test.js:5:2
   5| (data.foo.bar: void); // error, should be boolean
       ^^^^^^^^^^^^

References:
   json_file/package/index.json:3:12
   3|     "bar": true
                 ^^^^ [1]
   json_file/test.js:5:16
   5| (data.foo.bar: void); // error, should be boolean
                     ^^^^ [2]


Error -------------------------------------------------------------------------------------------- json_file/test.js:6:2

Cannot cast `data.abc` to boolean because:
 - null or undefined [1] is incompatible with boolean [2].
 - string [3] is incompatible with boolean [2].

   json_file/test.js:6:2
   6| (data.abc: boolean); // error, should be ?string
       ^^^^^^^^

References:
   json_file/package/index.json:6:17
   6|   "abc": (null: ?string)
                      ^^^^^^^ [1]
   json_file/test.js:6:12
   6| (data.abc: boolean); // error, should be ?string
                 ^^^^^^^ [2]
   json_file/package/index.json:6:18
   6|   "abc": (null: ?string)
                       ^^^^^^ [3]


Error -------------------------------------------------------------------------------------------- json_file/test.js:9:2

Cannot cast `data2.baz` to undefined because string [1] is incompatible with undefined [2].

   json_file/test.js:9:2
   9| (data2.baz: void); // error, should be string
       ^^^^^^^^^

References:
   json_file/package/index.json:5:10
   5|   "baz": "hello world",
               ^^^^^^^^^^^^^ [1]
   json_file/test.js:9:13
   9| (data2.baz: void); // error, should be string
                  ^^^^ [2]


Error ------------------------------------------------------------------------------------------- json_file/test.js:12:2

Cannot cast `data3.foo` to undefined because number [1] is incompatible with undefined [2].

   json_file/test.js:12:2
   12| (data3.foo: void); // error, should be number (not string! index.js wins)
        ^^^^^^^^^

References:
   json_file/package2/index.js:4:8
    4|   foo: 123
              ^^^ [1]
   json_file/test.js:12:13
   12| (data3.foo: void); // error, should be number (not string! index.js wins)
                   ^^^^ [2]


Error ------------------------------------------------------------------------------------------- json_file/test.js:16:2

Cannot cast `data4` to undefined because array literal [1] is incompatible with undefined [2].

   json_file/test.js:16:2
   16| (data4: void); // error, should be Array<number>
        ^^^^^

References:
   json_file/json_array.json:1:1
    1| [1, 2]
       ^^^^^^ [1]
   json_file/test.js:16:9
   16| (data4: void); // error, should be Array<number>
               ^^^^ [2]


Error ------------------------------------------------------------------------------------------- json_file/test.js:18:2

Cannot cast `require(...)` to undefined because string [1] is incompatible with undefined [2].

   json_file/test.js:18:2
   18| (require('./json_string'): void); // error, should be string
        ^^^^^^^^^^^^^^^^^^^^^^^^

References:
   json_file/json_string.json:1:1
    1| "foo"
       ^^^^^ [1]
   json_file/test.js:18:28
   18| (require('./json_string'): void); // error, should be string
                                  ^^^^ [2]


Error ------------------------------------------------------------------------------------------- json_file/test.js:19:2

Cannot cast `require(...)` to undefined because number [1] is incompatible with undefined [2].

   json_file/test.js:19:2
   19| (require('./json_number'): void); // error, should be number
        ^^^^^^^^^^^^^^^^^^^^^^^^

References:
   json_file/json_number.json:1:1
    1| 1
       ^ [1]
   json_file/test.js:19:28
   19| (require('./json_number'): void); // error, should be number
                                  ^^^^ [2]


Error ------------------------------------------------------------------------------------------- json_file/test.js:20:2

Cannot cast `require(...)` to undefined because boolean [1] is incompatible with undefined [2].

   json_file/test.js:20:2
   20| (require('./json_true'): void); // error, should be true
        ^^^^^^^^^^^^^^^^^^^^^^

References:
   json_file/json_true.json:1:1
    1| true
       ^^^^ [1]
   json_file/test.js:20:26
   20| (require('./json_true'): void); // error, should be true
                                ^^^^ [2]


Error ------------------------------------------------------------------------------------------- json_file/test.js:21:2

Cannot cast `require(...)` to undefined because boolean [1] is incompatible with undefined [2].

   json_file/test.js:21:2
   21| (require('./json_false'): void); // error, should be false
        ^^^^^^^^^^^^^^^^^^^^^^^

References:
   json_file/json_false.json:1:1
    1| false
       ^^^^^ [1]
   json_file/test.js:21:27
   21| (require('./json_false'): void); // error, should be false
                                 ^^^^ [2]


Error ------------------------------------------------------------------------------------------- json_file/test.js:22:2

Cannot cast `require(...)` to undefined because null [1] is incompatible with undefined [2].

   json_file/test.js:22:2
   22| (require('./json_null'): void); // error, should be null
        ^^^^^^^^^^^^^^^^^^^^^^

References:
   json_file/json_null.json:1:1
    1| null
       ^^^^ [1]
   json_file/test.js:22:26
   22| (require('./json_null'): void); // error, should be null
                                ^^^^ [2]


Error ----------------------------------------------------------------------------------------------- os/userInfo.js:7:2

Cannot cast `u1.username` to `Buffer` because string [1] is incompatible with `Buffer` [2].

   os/userInfo.js:7:2
      7| (u1.username: Buffer); // error
          ^^^^^^^^^^^

References:
   <BUILTINS>/node.js:1295:13
   1295|   username: string,
                     ^^^^^^ [1]
   os/userInfo.js:7:15
      7| (u1.username: Buffer); // error
                       ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- os/userInfo.js:11:2

Cannot cast `u2.username` to `Buffer` because string [1] is incompatible with `Buffer` [2].

   os/userInfo.js:11:2
     11| (u2.username: Buffer); // error
          ^^^^^^^^^^^

References:
   <BUILTINS>/node.js:1295:13
   1295|   username: string,
                     ^^^^^^ [1]
   os/userInfo.js:11:15
     11| (u2.username: Buffer); // error
                       ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- os/userInfo.js:14:2

Cannot cast `u3.username` to string because `Buffer` [1] is incompatible with string [2].

   os/userInfo.js:14:2
     14| (u3.username: string); // error
          ^^^^^^^^^^^

References:
   <BUILTINS>/node.js:1287:13
   1287|   username: Buffer,
                     ^^^^^^ [1]
   os/userInfo.js:14:15
     14| (u3.username: string); // error
                       ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- process/nextTick.js:12:1

Cannot call `process.nextTick` because:
 - number [1] is incompatible with string [2] in the first argument.
 - null [3] is incompatible with boolean [4] in the third argument.

   process/nextTick.js:12:1
       v----------------
   12| process.nextTick(
   13|   (a: string, b: number, c: boolean) => {},
   14|   0, // Error: number ~> string
   15|   1,
   16|   null // Error: null ~> boolean
   17| );
       ^

References:
   process/nextTick.js:14:3
   14|   0, // Error: number ~> string
         ^ [1]
   process/nextTick.js:13:7
   13|   (a: string, b: number, c: boolean) => {},
             ^^^^^^ [2]
   process/nextTick.js:16:3
   16|   null // Error: null ~> boolean
         ^^^^ [3]
   process/nextTick.js:13:29
   13|   (a: string, b: number, c: boolean) => {},
                                   ^^^^^^^ [4]


Error ----------------------------------------------------------------------------------------- process/nextTick.js:19:1

Cannot call `process.nextTick` because string [1] is incompatible with number [2] in the second argument.

   process/nextTick.js:19:1
       v----------------
   19| process.nextTick(
   20|   (a: string, b: number, c: boolean) => {},
   21|   'z',
   22|   'y', // Error: string ~> number
   23|   true
   24| );
       ^

References:
   process/nextTick.js:22:3
   22|   'y', // Error: string ~> number
         ^^^ [1]
   process/nextTick.js:20:18
   20|   (a: string, b: number, c: boolean) => {},
                        ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- process/nextTick.js:26:1

Cannot call `process.nextTick` because function [1] requires another argument from function type [2].

   process/nextTick.js:26:1
         v----------------
     26| process.nextTick(
     27|   (a: string, b: number, c: boolean) => {} // Error: too few arguments
     28| );
         ^

References:
   process/nextTick.js:27:3
     27|   (a: string, b: number, c: boolean) => {} // Error: too few arguments
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/node.js:1961:21
   1961|   nextTick: <T>(cb: (...T) => mixed, ...T) => void;
                             ^^^^^^^^^^^^^^^ [2]


Error: process/process.js:10
 10: process.emitWarning(); // error
     ^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Function cannot be called on any member of intersection type
 10: process.emitWarning(); // error
     ^^^^^^^^^^^^^^^^^^^ intersection
  Member 1:
  1933:   emitWarning(warning: string | Error): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1933
  Error:
   10: process.emitWarning(); // error
       ^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Too few arguments passed to
  1933:   emitWarning(warning: string | Error): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1933
  Member 2:
  1934:   emitWarning(warning: string, typeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1934
  Error:
   10: process.emitWarning(); // error
       ^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Too few arguments passed to
  1934:   emitWarning(warning: string, typeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1934
  Member 3:
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1935
  Error:
   10: process.emitWarning(); // error
       ^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Too few arguments passed to
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1935
  Member 4:
          v-----------
  1936:   emitWarning(
  1937:     warning: string,
  1938:     type: string,
  ...:
  1941:   ): void;
          ------^ function type. See lib: <BUILTINS>/node.js:1936
  Error:
   10: process.emitWarning(); // error
       ^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Too few arguments passed to
          v-----------
  1936:   emitWarning(
  1937:     warning: string,
  1938:     type: string,
  ...:
  1941:   ): void;
          ------^ function type. See lib: <BUILTINS>/node.js:1936

Error: process/process.js:11
 11: process.emitWarning(42); // error
     ^^^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Function cannot be called on any member of intersection type
 11: process.emitWarning(42); // error
     ^^^^^^^^^^^^^^^^^^^ intersection
  Member 1:
  1933:   emitWarning(warning: string | Error): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1933
  Error:
   11: process.emitWarning(42); // error
                           ^^ number. This type is incompatible with the expected param type of
  1933:   emitWarning(warning: string | Error): void;
                               ^^^^^^ string. See lib: <BUILTINS>/node.js:1933
  Member 2:
  1934:   emitWarning(warning: string, typeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1934
  Error:
   11: process.emitWarning(42); // error
                           ^^ number. This type is incompatible with the expected param type of
  1934:   emitWarning(warning: string, typeOrCtor: string | Function): void;
                               ^^^^^^ string. See lib: <BUILTINS>/node.js:1934
  Member 3:
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1935
  Error:
   11: process.emitWarning(42); // error
                           ^^ number. This type is incompatible with the expected param type of
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
                               ^^^^^^ string. See lib: <BUILTINS>/node.js:1935
  Member 4:
          v-----------
  1936:   emitWarning(
  1937:     warning: string,
  1938:     type: string,
  ...:
  1941:   ): void;
          ------^ function type. See lib: <BUILTINS>/node.js:1936
  Error:
   11: process.emitWarning(42); // error
                           ^^ number. This type is incompatible with the expected param type of
  1937:     warning: string,
                     ^^^^^^ string. See lib: <BUILTINS>/node.js:1937

Error: process/process.js:12
 12: process.emitWarning("blah", 42); // error
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Function cannot be called on any member of intersection type
 12: process.emitWarning("blah", 42); // error
     ^^^^^^^^^^^^^^^^^^^ intersection
  Member 2:
  1934:   emitWarning(warning: string, typeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1934
  Error:
   12: process.emitWarning("blah", 42); // error
                                   ^^ number. This type is incompatible with the expected param type of
  1934:   emitWarning(warning: string, typeOrCtor: string | Function): void;
                                                   ^^^^^^ string. See lib: <BUILTINS>/node.js:1934
  Member 3:
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1935
  Error:
   12: process.emitWarning("blah", 42); // error
                                   ^^ number. This type is incompatible with the expected param type of
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1935
  Member 4:
          v-----------
  1936:   emitWarning(
  1937:     warning: string,
  1938:     type: string,
  ...:
  1941:   ): void;
          ------^ function type. See lib: <BUILTINS>/node.js:1936
  Error:
   12: process.emitWarning("blah", 42); // error
                                   ^^ number. This type is incompatible with the expected param type of
  1938:     type: string,
                  ^^^^^^ string. See lib: <BUILTINS>/node.js:1938

Error: process/process.js:13
 13: process.emitWarning("blah", "blah", 42); // error
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Function cannot be called on any member of intersection type
 13: process.emitWarning("blah", "blah", 42); // error
     ^^^^^^^^^^^^^^^^^^^ intersection
  Member 3:
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1935
  Error:
   13: process.emitWarning("blah", "blah", 42); // error
                                           ^^ number. This type is incompatible with the expected param type of
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
                                                                 ^^^^^^ string. See lib: <BUILTINS>/node.js:1935
  Member 4:
          v-----------
  1936:   emitWarning(
  1937:     warning: string,
  1938:     type: string,
  ...:
  1941:   ): void;
          ------^ function type. See lib: <BUILTINS>/node.js:1936
  Error:
   13: process.emitWarning("blah", "blah", 42); // error
                                           ^^ number. This type is incompatible with the expected param type of
  1939:     code: string,
                  ^^^^^^ string. See lib: <BUILTINS>/node.js:1939

Error ------------------------------------------------------------------------------------------ process/process.js:14:2

Cannot cast `process.emitWarning(...)` to string because undefined [1] is incompatible with string [2].

   process/process.js:14:2
     14| (process.emitWarning("blah"): string); // error
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/node.js:1933:41
   1933|   emitWarning(warning: string | Error): void;
                                                 ^^^^ [1]
   process/process.js:14:31
     14| (process.emitWarning("blah"): string); // error
                                       ^^^^^^ [2]



Found 77 errors
