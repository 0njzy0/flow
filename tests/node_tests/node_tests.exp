Error: buffer/buffer.js:57
 57: buffer = Buffer.from([0x62, 0x75, 0x66, 0x66, 0x65, 0x72], (a:number) => a + 1, {}); // error
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ array literal. This type is incompatible with the expected param type of
110:   static from(value: ArrayBuffer, byteOffset?: number, length?: number): Buffer;
                          ^^^^^^^^^^^ ArrayBuffer. See lib: <BUILTINS>/node.js:110

Error: child_process/execSync.js:8
  8: (execSync('ls', {timeout: '250'})); // error, no signatures match
                               ^^^^^ Cannot call `execSync` with object literal bound to `options` because in property `timeout`, string [1] is incompatible with number [2].
  References:
    8: (execSync('ls', {timeout: '250'})); // error, no signatures match
                                 ^^^^^ [1]: string
  149:   timeout?: number;
                   ^^^^^^ [2]: number. See lib: <BUILTINS>/node.js:149

Error: crypto/crypto.js:12
 12:       (hmac.read(): number); // 4 errors: null, void, string, Buffer
            ^^^^^^^^^^^ Cannot cast `hmac.read()` to number because `Buffer` [1] is incompatible with number [2].
  References:
  1428:   read(size?: number): ?(string | Buffer);
                                          ^^^^^^ [1]: `Buffer`. See lib: <BUILTINS>/node.js:1428
   12:       (hmac.read(): number); // 4 errors: null, void, string, Buffer
                           ^^^^^^ [2]: number

Error: crypto/crypto.js:12
 12:       (hmac.read(): number); // 4 errors: null, void, string, Buffer
            ^^^^^^^^^^^ Cannot cast `hmac.read()` to number because null or undefined [1] is incompatible with number [2].
  References:
  1428:   read(size?: number): ?(string | Buffer);
                               ^^^^^^^^^^^^^^^^^ [1]: null or undefined. See lib: <BUILTINS>/node.js:1428
   12:       (hmac.read(): number); // 4 errors: null, void, string, Buffer
                           ^^^^^^ [2]: number

Error: crypto/crypto.js:12
 12:       (hmac.read(): number); // 4 errors: null, void, string, Buffer
            ^^^^^^^^^^^ Cannot cast `hmac.read()` to number because string [1] is incompatible with number [2].
  References:
  1428:   read(size?: number): ?(string | Buffer);
                                 ^^^^^^ [1]: string. See lib: <BUILTINS>/node.js:1428
   12:       (hmac.read(): number); // 4 errors: null, void, string, Buffer
                           ^^^^^^ [2]: number

Error: crypto/crypto.js:16
 16:     hmac.write(123); // 2 errors: not a string or a Buffer
                    ^^^ Cannot call `hmac.write` with `123` bound to `chunk` because number [1] is incompatible with string [2].
  References:
   16:     hmac.write(123); // 2 errors: not a string or a Buffer
                      ^^^ [1]: number
  1479:     chunk: Buffer | string,
                            ^^^^^^ [2]: string. See lib: <BUILTINS>/node.js:1479

Error: crypto/crypto.js:26
 26:     hmac.update('foo', 'bogus'); // 1 error
                            ^^^^^^^ string. This type is incompatible with the expected param type of
                                                      v----------------------------
441:   update(data: string | Buffer, input_encoding?: 'utf8' | 'ascii' | 'latin1' |
442:   'binary'): crypto$Hmac;
       -------^ string enum. See lib: <BUILTINS>/node.js:441

Error: crypto/crypto.js:29
 29:     hmac.update(buf, 'bogus'); // 1 error
                          ^^^^^^^ string. This type is incompatible with the expected param type of
                                                      v----------------------------
441:   update(data: string | Buffer, input_encoding?: 'utf8' | 'ascii' | 'latin1' |
442:   'binary'): crypto$Hmac;
       -------^ string enum. See lib: <BUILTINS>/node.js:441

Error: crypto/crypto.js:36
 36:     (hmac.digest('hex'): void); // 1 error
          ^^^^^^^^^^^^^^^^^^ Cannot cast `hmac.digest(...)` to undefined because string [1] is incompatible with undefined [2].
  References:
  438:   digest(encoding: 'hex' | 'latin1' | 'binary' | 'base64'): string;
                                                                   ^^^^^^ [1]: string. See lib: <BUILTINS>/node.js:438
   36:     (hmac.digest('hex'): void); // 1 error
                                ^^^^ [2]: undefined

Error: crypto/crypto.js:37
 37:     (hmac.digest(): void); // 1 error
          ^^^^^^^^^^^^^ Cannot cast `hmac.digest()` to undefined because `Buffer` [1] is incompatible with undefined [2].
  References:
  440:   digest(encoding: void): Buffer;
                                 ^^^^^^ [1]: `Buffer`. See lib: <BUILTINS>/node.js:440
   37:     (hmac.digest(): void); // 1 error
                           ^^^^ [2]: undefined

Error: fs/fs.js:13
     v-----------------------------------------------------------
 13: fs.readFile("file.exp", { encoding: "blah" }, (_, data) => {
 14:   (data : string);
 15: });
     -^ call of method `readFile`. Could not decide which case to select
 13: fs.readFile("file.exp", { encoding: "blah" }, (_, data) => {
     ^^^^^^^^^^^ intersection type
  Case 3 may work:
                                  v
  909:   declare function readFile(
  910:     path: string | Buffer | URL | number,
  911:     options: { encoding: string; flag?: string },
  912:     callback: (err: ?ErrnoError, data: string) => void
  913:   ): void;
         ------^ function type. See lib: <BUILTINS>/node.js:909
  But if it doesn't, case 4 looks promising too:
                                  v
  914:   declare function readFile(
  915:     path: string | Buffer | URL | number,
  916:     options: { flag?: string },
  917:     callback: (err: ?ErrnoError, data: Buffer) => void
  918:   ): void;
         ------^ function type. See lib: <BUILTINS>/node.js:914
  Please provide additional annotation(s) to determine whether case 3 works (or consider merging it with case 4):
   13: fs.readFile("file.exp", { encoding: "blah" }, (_, data) => {
                                                      ^ _
   13: fs.readFile("file.exp", { encoding: "blah" }, (_, data) => {
                                                         ^^^^ data

Error: fs/fs.js:28
 28: (fs.readFileSync("file.exp") : string); // error
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot cast `fs.readFileSync(...)` to string because `Buffer` [1] is incompatible with string [2].
  References:
  921:   ): Buffer;
            ^^^^^^ [1]: `Buffer`. See lib: <BUILTINS>/node.js:921
   28: (fs.readFileSync("file.exp") : string); // error
                                      ^^^^^^ [2]: string

Error: fs/fs.js:31
 31: (fs.readFileSync("file.exp", "blah") : Buffer); // error
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot cast `fs.readFileSync(...)` to `Buffer` because string [1] is incompatible with `Buffer` [2].
  References:
  925:   ): string;
            ^^^^^^ [1]: string. See lib: <BUILTINS>/node.js:925
   31: (fs.readFileSync("file.exp", "blah") : Buffer); // error
                                              ^^^^^^ [2]: `Buffer`

Error: fs/fs.js:34
 34: (fs.readFileSync("file.exp", { encoding: "blah" }) : Buffer); // error
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot cast `fs.readFileSync(...)` to `Buffer` because string [1] is incompatible with `Buffer` [2].
  References:
  926:   declare function readFileSync(path: string | Buffer | URL | number, options: { encoding: string, flag?: string }): string;
                                                                                                                            ^^^^^^ [1]: string. See lib: <BUILTINS>/node.js:926
   34: (fs.readFileSync("file.exp", { encoding: "blah" }) : Buffer); // error
                                                            ^^^^^^ [2]: `Buffer`

Error: fs/fs.js:37
 37: (fs.readFileSync("file.exp", {}) : string); // error
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot cast `fs.readFileSync(...)` to string because `Buffer` [1] is incompatible with string [2].
  References:
  927:   declare function readFileSync(path: string | Buffer | URL | number, options: { encoding?: void, flag?: string }): Buffer;
                                                                                                                           ^^^^^^ [1]: `Buffer`. See lib: <BUILTINS>/node.js:927
   37: (fs.readFileSync("file.exp", {}) : string); // error
                                          ^^^^^^ [2]: string

Error: http/server.js:67
 67: server.listen(() => {}, {});
                             ^^ object literal. This type is incompatible with the expected param type of
1099:     listen(handle: Object, callback?: Function): Server;
                                            ^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1099
  Callable property is incompatible:
    1099:     listen(handle: Object, callback?: Function): Server;
                                                ^^^^^^^^ function type. Callable signature not found in. See lib: <BUILTINS>/node.js:1099
     67: server.listen(() => {}, {});
                                 ^^ object literal

Error: http/server.js:68
 68: server.listen(function() {}, {});
                                  ^^ object literal. This type is incompatible with the expected param type of
1099:     listen(handle: Object, callback?: Function): Server;
                                            ^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1099
  Callable property is incompatible:
    1099:     listen(handle: Object, callback?: Function): Server;
                                                ^^^^^^^^ function type. Callable signature not found in. See lib: <BUILTINS>/node.js:1099
     68: server.listen(function() {}, {});
                                      ^^ object literal

Error: http/server.js:69
 69: server.listen({}, () => {}, 'localhost', 123);
                   ^^ object literal. This type is incompatible with the expected param type of
1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                        ^^^^^^ number. See lib: <BUILTINS>/node.js:1093

Error: http/server.js:70
 70: server.listen({}, function() {}, 'localhost', 123);
                   ^^ object literal. This type is incompatible with the expected param type of
1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                        ^^^^^^ number. See lib: <BUILTINS>/node.js:1093

Error: http/server.js:71
 71: server.listen({}, () => {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 71: server.listen({}, () => {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   71: server.listen({}, () => {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   71: server.listen({}, () => {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   71: server.listen({}, () => {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1096

Error: http/server.js:72
 72: server.listen({}, function() {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 72: server.listen({}, function() {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   72: server.listen({}, function() {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   72: server.listen({}, function() {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   72: server.listen({}, function() {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1096

Error: http/server.js:73
 73: server.listen(() => {}, 123);
                             ^^^ number. This type is incompatible with the expected param type of
1099:     listen(handle: Object, callback?: Function): Server;
                                            ^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1099

Error: http/server.js:74
 74: server.listen(function() {}, 123);
                                  ^^^ number. This type is incompatible with the expected param type of
1099:     listen(handle: Object, callback?: Function): Server;
                                            ^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1099

Error: http/server.js:75
 75: server.listen(() => {}, 'localhost', 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 75: server.listen(() => {}, 'localhost', 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   75: server.listen(() => {}, 'localhost', 123);
                     ^^^^^^^^ function. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   75: server.listen(() => {}, 'localhost', 123);
                     ^^^^^^^^ function. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   75: server.listen(() => {}, 'localhost', 123);
                     ^^^^^^^^ function. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1096

Error: http/server.js:76
 76: server.listen(function() {}, 'localhost', 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 76: server.listen(function() {}, 'localhost', 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   76: server.listen(function() {}, 'localhost', 123);
                     ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   76: server.listen(function() {}, 'localhost', 123);
                     ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   76: server.listen(function() {}, 'localhost', 123);
                     ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1096

Error: http/server.js:77
 77: server.listen(() => {}, 'localhost');
                             ^^^^^^^^^^^ string. This type is incompatible with the expected param type of
1099:     listen(handle: Object, callback?: Function): Server;
                                            ^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1099

Error: http/server.js:78
 78: server.listen(function() {}, 'localhost');
                                  ^^^^^^^^^^^ string. This type is incompatible with the expected param type of
1099:     listen(handle: Object, callback?: Function): Server;
                                            ^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1099

Error: http/server.js:79
 79: server.listen(8080, () => {}, 'localhost', 123);
                         ^^^^^^^^ function. This type is incompatible with the expected param type of
1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                           ^^^^^^ string. See lib: <BUILTINS>/node.js:1093

Error: http/server.js:80
 80: server.listen(8080, function() {}, 'localhost', 123);
                         ^^^^^^^^^^ function. This type is incompatible with the expected param type of
1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                           ^^^^^^ string. See lib: <BUILTINS>/node.js:1093

Error: http/server.js:81
 81: server.listen(8080, () => {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 81: server.listen(8080, () => {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   81: server.listen(8080, () => {}, 123);
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   81: server.listen(8080, () => {}, 123);
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   81: server.listen(8080, () => {}, 123);
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1096

Error: http/server.js:82
 82: server.listen(8080, function() {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 82: server.listen(8080, function() {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   82: server.listen(8080, function() {}, 123);
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   82: server.listen(8080, function() {}, 123);
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   82: server.listen(8080, function() {}, 123);
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1096

Error: http/server.js:83
 83: server.listen(8080, () => {}, 'localhost');
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 83: server.listen(8080, () => {}, 'localhost');
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   83: server.listen(8080, () => {}, 'localhost');
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   83: server.listen(8080, () => {}, 'localhost');
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   83: server.listen(8080, () => {}, 'localhost');
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1096

Error: http/server.js:84
 84: server.listen(8080, function() {}, 'localhost');
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 84: server.listen(8080, function() {}, 'localhost');
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1093
  Error:
   84: server.listen(8080, function() {}, 'localhost');
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1093:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1093
  Member 2:
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1095
  Error:
   84: server.listen(8080, function() {}, 'localhost');
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1095:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1095
  Member 3:
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1096
  Error:
   84: server.listen(8080, function() {}, 'localhost');
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1096:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1096

Error: https/server.js:67
 67: server.listen(() => {}, {});
                             ^^ object literal. This type is incompatible with the expected param type of
1138:     listen(handle: Object, callback?: Function): Server;
                                            ^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1138
  Callable property is incompatible:
    1138:     listen(handle: Object, callback?: Function): Server;
                                                ^^^^^^^^ function type. Callable signature not found in. See lib: <BUILTINS>/node.js:1138
     67: server.listen(() => {}, {});
                                 ^^ object literal

Error: https/server.js:68
 68: server.listen(function() {}, {});
                                  ^^ object literal. This type is incompatible with the expected param type of
1138:     listen(handle: Object, callback?: Function): Server;
                                            ^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1138
  Callable property is incompatible:
    1138:     listen(handle: Object, callback?: Function): Server;
                                                ^^^^^^^^ function type. Callable signature not found in. See lib: <BUILTINS>/node.js:1138
     68: server.listen(function() {}, {});
                                      ^^ object literal

Error: https/server.js:69
 69: server.listen({}, () => {}, 'localhost', 123);
                   ^^ object literal. This type is incompatible with the expected param type of
1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                        ^^^^^^ number. See lib: <BUILTINS>/node.js:1132

Error: https/server.js:70
 70: server.listen({}, function() {}, 'localhost', 123);
                   ^^ object literal. This type is incompatible with the expected param type of
1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                        ^^^^^^ number. See lib: <BUILTINS>/node.js:1132

Error: https/server.js:71
 71: server.listen({}, () => {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 71: server.listen({}, () => {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   71: server.listen({}, () => {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   71: server.listen({}, () => {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   71: server.listen({}, () => {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1135

Error: https/server.js:72
 72: server.listen({}, function() {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 72: server.listen({}, function() {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   72: server.listen({}, function() {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   72: server.listen({}, function() {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   72: server.listen({}, function() {}, 123);
                     ^^ object literal. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1135

Error: https/server.js:73
 73: server.listen(() => {}, 123);
                             ^^^ number. This type is incompatible with the expected param type of
1138:     listen(handle: Object, callback?: Function): Server;
                                            ^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1138

Error: https/server.js:74
 74: server.listen(function() {}, 123);
                                  ^^^ number. This type is incompatible with the expected param type of
1138:     listen(handle: Object, callback?: Function): Server;
                                            ^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1138

Error: https/server.js:75
 75: server.listen(() => {}, 'localhost', 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 75: server.listen(() => {}, 'localhost', 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   75: server.listen(() => {}, 'localhost', 123);
                     ^^^^^^^^ function. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   75: server.listen(() => {}, 'localhost', 123);
                     ^^^^^^^^ function. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   75: server.listen(() => {}, 'localhost', 123);
                     ^^^^^^^^ function. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1135

Error: https/server.js:76
 76: server.listen(function() {}, 'localhost', 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 76: server.listen(function() {}, 'localhost', 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   76: server.listen(function() {}, 'localhost', 123);
                     ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   76: server.listen(function() {}, 'localhost', 123);
                     ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   76: server.listen(function() {}, 'localhost', 123);
                     ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                          ^^^^^^ number. See lib: <BUILTINS>/node.js:1135

Error: https/server.js:77
 77: server.listen(() => {}, 'localhost');
                             ^^^^^^^^^^^ string. This type is incompatible with the expected param type of
1138:     listen(handle: Object, callback?: Function): Server;
                                            ^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1138

Error: https/server.js:78
 78: server.listen(function() {}, 'localhost');
                                  ^^^^^^^^^^^ string. This type is incompatible with the expected param type of
1138:     listen(handle: Object, callback?: Function): Server;
                                            ^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1138

Error: https/server.js:79
 79: server.listen(8443, () => {}, 'localhost', 123);
                         ^^^^^^^^ function. This type is incompatible with the expected param type of
1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                           ^^^^^^ string. See lib: <BUILTINS>/node.js:1132

Error: https/server.js:80
 80: server.listen(8443, function() {}, 'localhost', 123);
                         ^^^^^^^^^^ function. This type is incompatible with the expected param type of
1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                           ^^^^^^ string. See lib: <BUILTINS>/node.js:1132

Error: https/server.js:81
 81: server.listen(8443, () => {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 81: server.listen(8443, () => {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   81: server.listen(8443, () => {}, 123);
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   81: server.listen(8443, () => {}, 123);
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   81: server.listen(8443, () => {}, 123);
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1135

Error: https/server.js:82
 82: server.listen(8443, function() {}, 123);
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 82: server.listen(8443, function() {}, 123);
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   82: server.listen(8443, function() {}, 123);
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   82: server.listen(8443, function() {}, 123);
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   82: server.listen(8443, function() {}, 123);
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1135

Error: https/server.js:83
 83: server.listen(8443, () => {}, 'localhost');
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 83: server.listen(8443, () => {}, 'localhost');
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   83: server.listen(8443, () => {}, 'localhost');
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   83: server.listen(8443, () => {}, 'localhost');
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   83: server.listen(8443, () => {}, 'localhost');
                           ^^^^^^^^ function. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1135

Error: https/server.js:84
 84: server.listen(8443, function() {}, 'localhost');
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `listen`. Function cannot be called on any member of intersection type
 84: server.listen(8443, function() {}, 'localhost');
     ^^^^^^^^^^^^^ intersection
  Member 1:
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1132
  Error:
   84: server.listen(8443, function() {}, 'localhost');
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1132:     listen(port?: number, hostname?: string, backlog?: number, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1132
  Member 2:
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1134
  Error:
   84: server.listen(8443, function() {}, 'localhost');
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1134:     listen(port?: number, backlog?: number, callback?: Function): Server;
                                            ^^^^^^ number. See lib: <BUILTINS>/node.js:1134
  Member 3:
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1135
  Error:
   84: server.listen(8443, function() {}, 'localhost');
                           ^^^^^^^^^^ function. This type is incompatible with the expected param type of
  1135:     listen(port?: number, hostname?: string, callback?: Function): Server;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1135

Error: invalid_package_file/package.json:1
  1: 
     ^ Unexpected end of input

Error: json_file/json_invalid.json:1
  1: :derp
     ^ Unexpected token :

Error: json_file/test.js:4
  4: (data.foo: void); // error, should be object literal
      ^^^^^^^^ Cannot cast `data.foo` to undefined because object literal [1] is incompatible with undefined [2].
  References:
                v
    2:   "foo": {
    3:     "bar": true
    4:   },
         ^ [1]: object literal. See: json_file/package/index.json:2
    4: (data.foo: void); // error, should be object literal
                  ^^^^ [2]: undefined

Error: json_file/test.js:5
  5: (data.foo.bar: void); // error, should be boolean
      ^^^^^^^^^^^^ Cannot cast `data.foo.bar` to undefined because boolean [1] is incompatible with undefined [2].
  References:
    3:     "bar": true
                  ^^^^ [1]: boolean. See: json_file/package/index.json:3
    5: (data.foo.bar: void); // error, should be boolean
                      ^^^^ [2]: undefined

Error: json_file/test.js:6
  6: (data.abc: boolean); // error, should be ?string
      ^^^^^^^^ Cannot cast `data.abc` to boolean because null or undefined [1] is incompatible with boolean [2].
  References:
    6:   "abc": (null: ?string)
                       ^^^^^^^ [1]: null or undefined. See: json_file/package/index.json:6
    6: (data.abc: boolean); // error, should be ?string
                  ^^^^^^^ [2]: boolean

Error: json_file/test.js:6
  6: (data.abc: boolean); // error, should be ?string
      ^^^^^^^^ Cannot cast `data.abc` to boolean because string [1] is incompatible with boolean [2].
  References:
    6:   "abc": (null: ?string)
                        ^^^^^^ [1]: string. See: json_file/package/index.json:6
    6: (data.abc: boolean); // error, should be ?string
                  ^^^^^^^ [2]: boolean

Error: json_file/test.js:9
  9: (data2.baz: void); // error, should be string
      ^^^^^^^^^ Cannot cast `data2.baz` to undefined because string [1] is incompatible with undefined [2].
  References:
    5:   "baz": "hello world",
                ^^^^^^^^^^^^^ [1]: string. See: json_file/package/index.json:5
    9: (data2.baz: void); // error, should be string
                   ^^^^ [2]: undefined

Error: json_file/test.js:12
 12: (data3.foo: void); // error, should be number (not string! index.js wins)
      ^^^^^^^^^ Cannot cast `data3.foo` to undefined because number [1] is incompatible with undefined [2].
  References:
    4:   foo: 123
              ^^^ [1]: number. See: json_file/package2/index.js:4
   12: (data3.foo: void); // error, should be number (not string! index.js wins)
                   ^^^^ [2]: undefined

Error: json_file/test.js:16
 16: (data4: void); // error, should be Array<number>
      ^^^^^ Cannot cast `data4` to undefined because array literal [1] is incompatible with undefined [2].
  References:
    1: [1, 2]
       ^^^^^^ [1]: array literal. See: json_file/json_array.json:1
   16: (data4: void); // error, should be Array<number>
               ^^^^ [2]: undefined

Error: json_file/test.js:18
 18: (require('./json_string'): void); // error, should be string
      ^^^^^^^^^^^^^^^^^^^^^^^^ Cannot cast `require(...)` to undefined because string [1] is incompatible with undefined [2].
  References:
    1: "foo"
       ^^^^^ [1]: string. See: json_file/json_string.json:1
   18: (require('./json_string'): void); // error, should be string
                                  ^^^^ [2]: undefined

Error: json_file/test.js:19
 19: (require('./json_number'): void); // error, should be number
      ^^^^^^^^^^^^^^^^^^^^^^^^ Cannot cast `require(...)` to undefined because number [1] is incompatible with undefined [2].
  References:
    1: 1
       ^ [1]: number. See: json_file/json_number.json:1
   19: (require('./json_number'): void); // error, should be number
                                  ^^^^ [2]: undefined

Error: json_file/test.js:20
 20: (require('./json_true'): void); // error, should be true
      ^^^^^^^^^^^^^^^^^^^^^^ Cannot cast `require(...)` to undefined because boolean [1] is incompatible with undefined [2].
  References:
    1: true
       ^^^^ [1]: boolean. See: json_file/json_true.json:1
   20: (require('./json_true'): void); // error, should be true
                                ^^^^ [2]: undefined

Error: json_file/test.js:21
 21: (require('./json_false'): void); // error, should be false
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot cast `require(...)` to undefined because boolean [1] is incompatible with undefined [2].
  References:
    1: false
       ^^^^^ [1]: boolean. See: json_file/json_false.json:1
   21: (require('./json_false'): void); // error, should be false
                                 ^^^^ [2]: undefined

Error: json_file/test.js:22
 22: (require('./json_null'): void); // error, should be null
      ^^^^^^^^^^^^^^^^^^^^^^ Cannot cast `require(...)` to undefined because null [1] is incompatible with undefined [2].
  References:
    1: null
       ^^^^ [1]: null. See: json_file/json_null.json:1
   22: (require('./json_null'): void); // error, should be null
                                ^^^^ [2]: undefined

Error: os/userInfo.js:7
  7: (u1.username: Buffer); // error
      ^^^^^^^^^^^ Cannot cast `u1.username` to `Buffer` because string [1] is incompatible with `Buffer` [2].
  References:
  1295:   username: string,
                    ^^^^^^ [1]: string. See lib: <BUILTINS>/node.js:1295
    7: (u1.username: Buffer); // error
                     ^^^^^^ [2]: `Buffer`

Error: os/userInfo.js:11
 11: (u2.username: Buffer); // error
      ^^^^^^^^^^^ Cannot cast `u2.username` to `Buffer` because string [1] is incompatible with `Buffer` [2].
  References:
  1295:   username: string,
                    ^^^^^^ [1]: string. See lib: <BUILTINS>/node.js:1295
   11: (u2.username: Buffer); // error
                     ^^^^^^ [2]: `Buffer`

Error: os/userInfo.js:14
 14: (u3.username: string); // error
      ^^^^^^^^^^^ Cannot cast `u3.username` to string because `Buffer` [1] is incompatible with string [2].
  References:
  1287:   username: Buffer,
                    ^^^^^^ [1]: `Buffer`. See lib: <BUILTINS>/node.js:1287
   14: (u3.username: string); // error
                     ^^^^^^ [2]: string

Error: process/nextTick.js:14
 14:   0, // Error: number ~> string
       ^ Cannot call `process.nextTick` because in the rest argument and then the first argument, number [1] is incompatible with string [2].
  References:
   14:   0, // Error: number ~> string
         ^ [1]: number
   13:   (a: string, b: number, c: boolean) => {},
             ^^^^^^ [2]: string

Error: process/nextTick.js:16
 16:   null // Error: null ~> boolean
       ^^^^ Cannot call `process.nextTick` because in the rest argument and then the third argument, null [1] is incompatible with boolean [2].
  References:
   16:   null // Error: null ~> boolean
         ^^^^ [1]: null
   13:   (a: string, b: number, c: boolean) => {},
                                   ^^^^^^^ [2]: boolean

Error: process/nextTick.js:22
 22:   'y', // Error: string ~> number
       ^^^ Cannot call `process.nextTick` because in the rest argument and then the second argument, string [1] is incompatible with number [2].
  References:
   22:   'y', // Error: string ~> number
         ^^^ [1]: string
   20:   (a: string, b: number, c: boolean) => {},
                        ^^^^^^ [2]: number

Error: process/nextTick.js:26
 26: process.nextTick(
             ^^^^^^^^ Cannot call `process.nextTick` because in the rest argument, function [1] requires another argument from function type [2].
  References:
   27:   (a: string, b: number, c: boolean) => {} // Error: too few arguments
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: function
  1961:   nextTick: <T>(cb: (...T) => mixed, ...T) => void;
                            ^^^^^^^^^^^^^^^ [2]: function type. See lib: <BUILTINS>/node.js:1961

Error: process/process.js:10
 10: process.emitWarning(); // error
     ^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Function cannot be called on any member of intersection type
 10: process.emitWarning(); // error
     ^^^^^^^^^^^^^^^^^^^ intersection
  Member 1:
  1933:   emitWarning(warning: string | Error): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1933
  Error:
   10: process.emitWarning(); // error
       ^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Too few arguments passed to
  1933:   emitWarning(warning: string | Error): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1933
  Member 2:
  1934:   emitWarning(warning: string, typeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1934
  Error:
   10: process.emitWarning(); // error
       ^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Too few arguments passed to
  1934:   emitWarning(warning: string, typeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1934
  Member 3:
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1935
  Error:
   10: process.emitWarning(); // error
       ^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Too few arguments passed to
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1935
  Member 4:
          v-----------
  1936:   emitWarning(
  1937:     warning: string,
  1938:     type: string,
  ...:
  1941:   ): void;
          ------^ function type. See lib: <BUILTINS>/node.js:1936
  Error:
   10: process.emitWarning(); // error
       ^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Too few arguments passed to
          v-----------
  1936:   emitWarning(
  1937:     warning: string,
  1938:     type: string,
  ...:
  1941:   ): void;
          ------^ function type. See lib: <BUILTINS>/node.js:1936

Error: process/process.js:11
 11: process.emitWarning(42); // error
     ^^^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Function cannot be called on any member of intersection type
 11: process.emitWarning(42); // error
     ^^^^^^^^^^^^^^^^^^^ intersection
  Member 1:
  1933:   emitWarning(warning: string | Error): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1933
  Error:
   11: process.emitWarning(42); // error
                           ^^ number. This type is incompatible with the expected param type of
  1933:   emitWarning(warning: string | Error): void;
                               ^^^^^^ string. See lib: <BUILTINS>/node.js:1933
  Member 2:
  1934:   emitWarning(warning: string, typeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1934
  Error:
   11: process.emitWarning(42); // error
                           ^^ number. This type is incompatible with the expected param type of
  1934:   emitWarning(warning: string, typeOrCtor: string | Function): void;
                               ^^^^^^ string. See lib: <BUILTINS>/node.js:1934
  Member 3:
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1935
  Error:
   11: process.emitWarning(42); // error
                           ^^ number. This type is incompatible with the expected param type of
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
                               ^^^^^^ string. See lib: <BUILTINS>/node.js:1935
  Member 4:
          v-----------
  1936:   emitWarning(
  1937:     warning: string,
  1938:     type: string,
  ...:
  1941:   ): void;
          ------^ function type. See lib: <BUILTINS>/node.js:1936
  Error:
   11: process.emitWarning(42); // error
                           ^^ number. This type is incompatible with the expected param type of
  1937:     warning: string,
                     ^^^^^^ string. See lib: <BUILTINS>/node.js:1937

Error: process/process.js:12
 12: process.emitWarning("blah", 42); // error
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Function cannot be called on any member of intersection type
 12: process.emitWarning("blah", 42); // error
     ^^^^^^^^^^^^^^^^^^^ intersection
  Member 2:
  1934:   emitWarning(warning: string, typeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1934
  Error:
   12: process.emitWarning("blah", 42); // error
                                   ^^ number. This type is incompatible with the expected param type of
  1934:   emitWarning(warning: string, typeOrCtor: string | Function): void;
                                                   ^^^^^^ string. See lib: <BUILTINS>/node.js:1934
  Member 3:
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1935
  Error:
   12: process.emitWarning("blah", 42); // error
                                   ^^ number. This type is incompatible with the expected param type of
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
                                             ^^^^^^ string. See lib: <BUILTINS>/node.js:1935
  Member 4:
          v-----------
  1936:   emitWarning(
  1937:     warning: string,
  1938:     type: string,
  ...:
  1941:   ): void;
          ------^ function type. See lib: <BUILTINS>/node.js:1936
  Error:
   12: process.emitWarning("blah", 42); // error
                                   ^^ number. This type is incompatible with the expected param type of
  1938:     type: string,
                  ^^^^^^ string. See lib: <BUILTINS>/node.js:1938

Error: process/process.js:13
 13: process.emitWarning("blah", "blah", 42); // error
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `emitWarning`. Function cannot be called on any member of intersection type
 13: process.emitWarning("blah", "blah", 42); // error
     ^^^^^^^^^^^^^^^^^^^ intersection
  Member 3:
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/node.js:1935
  Error:
   13: process.emitWarning("blah", "blah", 42); // error
                                           ^^ number. This type is incompatible with the expected param type of
  1935:   emitWarning(warning: string, type: string, codeOrCtor: string | Function): void;
                                                                 ^^^^^^ string. See lib: <BUILTINS>/node.js:1935
  Member 4:
          v-----------
  1936:   emitWarning(
  1937:     warning: string,
  1938:     type: string,
  ...:
  1941:   ): void;
          ------^ function type. See lib: <BUILTINS>/node.js:1936
  Error:
   13: process.emitWarning("blah", "blah", 42); // error
                                           ^^ number. This type is incompatible with the expected param type of
  1939:     code: string,
                  ^^^^^^ string. See lib: <BUILTINS>/node.js:1939

Error: process/process.js:14
 14: (process.emitWarning("blah"): string); // error
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot cast `process.emitWarning(...)` to string because undefined [1] is incompatible with string [2].
  References:
  1933:   emitWarning(warning: string | Error): void;
                                                ^^^^ [1]: undefined. See lib: <BUILTINS>/node.js:1933
   14: (process.emitWarning("blah"): string); // error
                                     ^^^^^^ [2]: string


Found 77 errors
