Error: array_lib.js:5
  5: var b = a.map(function (x) { foo(x); return "" + x; });
                                      ^ number. This type is incompatible with the expected param type of
  2: function foo(x:string) { }
                    ^^^^^^ string

Error: array_lib.js:8
  8: var d: number = b[0];
                     ^^^^ Cannot assign `b[0]` to `d` because string [1] is incompatible with number [2].
  References:
    5: var b = a.map(function (x) { foo(x); return "" + x; });
                                                   ^^^^^^ [1]: string
    8: var d: number = b[0];
              ^^^^^^ [2]: number

Error: array_lib.js:10
 10: var e:Array<string> = a.reverse();
                           ^^^^^^^^^^^ Cannot assign `a.reverse()` to `e` because in type argument `T`, number [1] is incompatible with string [2].
  References:
    4: var a = [0];
                ^ [1]: number
   10: var e:Array<string> = a.reverse();
                   ^^^^^^ [2]: string

Error: array_lib.js:21
 21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                                     ^^^ Cannot assign `h.concat(...)` to `n` because in type argument `T`, string [1] is incompatible with number [2].
  References:
   21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                                       ^^^ [1]: string
   21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                    ^^^^^^ [2]: number

Error: array_lib.js:21
 21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                                          ^^^ Cannot assign `h.concat(...)` to `n` because in type argument `T`, string [1] is incompatible with number [2].
  References:
   21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                                            ^^^ [1]: string
   21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                    ^^^^^^ [2]: number

Error: array_lib.js:21
 21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                                               ^^^ Cannot assign `h.concat(...)` to `n` because in type argument `T`, string [1] is incompatible with number [2].
  References:
   21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                                                 ^^^ [1]: string
   21: var n: Array<number> = h.concat('a', 'b', 'c'); // Error
                    ^^^^^^ [2]: number

Error: array_lib.js:46
 46:   [""].reduce((acc, str) => acc * str.length); // error, string ~> number
                                 ^^^ string. The operand of an arithmetic operation must be a number.

Error: array_lib.js:46
 46:   [""].reduce((acc, str) => acc * str.length); // error, string ~> number
                                           ^^^^^^ property `length`. Property not found in
 46:   [""].reduce((acc, str) => acc * str.length); // error, string ~> number
                                       ^^^ Number

Error: array_lib.js:47
 47:   [""].reduceRight((acc, str) => acc * str.length); // error, string ~> number
                                      ^^^ string. The operand of an arithmetic operation must be a number.

Error: array_lib.js:47
 47:   [""].reduceRight((acc, str) => acc * str.length); // error, string ~> number
                                                ^^^^^^ property `length`. Property not found in
 47:   [""].reduceRight((acc, str) => acc * str.length); // error, string ~> number
                                            ^^^ Number

Error: length.js:7
  7: r.length = 6; //ng
       ^^^^^^ property `length`. Covariant property `length` incompatible with contravariant use in
  7: r.length = 6; //ng
     ^^^^^^^^ assignment of property `length`

Error: length.js:10
 10: t.length = 7; //ng
       ^^^^^^ property `length`. Covariant property `length` incompatible with contravariant use in
 10: t.length = 7; //ng
     ^^^^^^^^ assignment of property `length`


Found 12 errors
