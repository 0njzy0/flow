Error: annot.js:6
  6: f(x); // error should point to `x` here, not at type alias
     ^^^^ call of `f`. Function cannot be called on any member of intersection type
  6: f(x); // error should point to `x` here, not at type alias
     ^ intersection
  Member 1:
    1: declare function f(x: string): void;
                         ^^^^^^^^^^^^^^^^^ function type
  Error:
    6: f(x); // error should point to `x` here, not at type alias
         ^ null. This type is incompatible with the expected param type of
    1: declare function f(x: string): void;
                             ^^^^^^ string
  Member 2:
    2: declare function f(x: number): void;
                         ^^^^^^^^^^^^^^^^^ function type
  Error:
    6: f(x); // error should point to `x` here, not at type alias
         ^ null. This type is incompatible with the expected param type of
    2: declare function f(x: number): void;
                             ^^^^^^ number

Error --------------------------------------------------------- overload.js:7:18

Error: overload.js:7
  7: var x1: number = "".match(0)[0];
                      ^^^^^^^^^^^^^^ Cannot assign `"".match(...)[0]` to `x1` because string [1] is incompatible with number [2].
  References:
  301:     match(regexp: string | RegExp): ?Array<string>;
                                                  ^^^^^^ [1]: string. See lib: <BUILTINS>/core.js:301
    7: var x1: number = "".match(0)[0];
               ^^^^^^ [2]: number

Error --------------------------------------------------------- overload.js:7:30

Error: overload.js:7
  7: var x1: number = "".match(0)[0];
                                  ^ Cannot get `"".match(...)[0]` because an indexer property is missing in null or undefined [1].
  References:
  301:     match(regexp: string | RegExp): ?Array<string>;
                                           ^^^^^^^^^^^^^^ [1]: null or undefined. See lib: <BUILTINS>/core.js:301

Error --------------------------------------------------------- overload.js:7:27

Error: overload.js:7
  7: var x1: number = "".match(0)[0];
                               ^ Cannot call `"".match` with `0` bound to `regexp` because number [1] is incompatible with string [2].
  References:
    7: var x1: number = "".match(0)[0];
                                 ^ [1]: number
  301:     match(regexp: string | RegExp): ?Array<string>;
                         ^^^^^^ [2]: string. See lib: <BUILTINS>/core.js:301

Error --------------------------------------------------------- overload.js:8:18

Error: overload.js:8
  8: var x2: number = "".match(/pattern/)[0];
                      ^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `"".match(...)[0]` to `x2` because string [1] is incompatible with number [2].
  References:
  301:     match(regexp: string | RegExp): ?Array<string>;
                                                  ^^^^^^ [1]: string. See lib: <BUILTINS>/core.js:301
    8: var x2: number = "".match(/pattern/)[0];
               ^^^^^^ [2]: number

Error --------------------------------------------------------- overload.js:8:38

Error: overload.js:8
  8: var x2: number = "".match(/pattern/)[0];
                                          ^ Cannot get `"".match(...)[0]` because an indexer property is missing in null or undefined [1].
  References:
  301:     match(regexp: string | RegExp): ?Array<string>;
                                           ^^^^^^^^^^^^^^ [1]: null or undefined. See lib: <BUILTINS>/core.js:301

Error -------------------------------------------------------- overload.js:10:18

Error: overload.js:10
 10: var x4: number = "".split(/pattern/)[0];
                      ^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `"".split(...)[0]` to `x4` because string [1] is incompatible with number [2].
  References:
  309:     split(separator?: string | RegExp, limit?: number): Array<string>;
                                                                     ^^^^^^ [1]: string. See lib: <BUILTINS>/core.js:309
   10: var x4: number = "".split(/pattern/)[0];
               ^^^^^^ [2]: number

Error: overload.js:24
 24: a.foo(true); // error, function cannot be called on intersection type
     ^^^^^^^^^^^ call of method `foo`. Function cannot be called on any member of intersection type
 24: a.foo(true); // error, function cannot be called on intersection type
     ^^^^^ intersection
  Member 1:
   13:     foo(x:number): number;
           ^^^^^^^^^^^^^^^^^^^^^ function type
  Error:
   24: a.foo(true); // error, function cannot be called on intersection type
             ^^^^ boolean. This type is incompatible with the expected param type of
   13:     foo(x:number): number;
                 ^^^^^^ number
  Member 2:
   14:     foo(x:string): string;
           ^^^^^^^^^^^^^^^^^^^^^ function type
  Error:
   24: a.foo(true); // error, function cannot be called on intersection type
             ^^^^ boolean. This type is incompatible with the expected param type of
   14:     foo(x:string): string;
                 ^^^^^^ string

Error: overload.js:28
 28: a.bar({ a: true }); // error, function cannot be called on intersection type
     ^^^^^^^^^^^^^^^^^^ call of method `bar`. Function cannot be called on any member of intersection type
 28: a.bar({ a: true }); // error, function cannot be called on intersection type
     ^^^^^ intersection
  Member 1:
   16:     bar(x: { a: number }): number;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type
  Error:
   28: a.bar({ a: true }); // error, function cannot be called on intersection type
             ^^^^^^^^^^^ object literal. This type is incompatible with the expected param type of
   16:     bar(x: { a: number }): number;
                  ^^^^^^^^^^^^^ object type
    Property `a` is incompatible:
       28: a.bar({ a: true }); // error, function cannot be called on intersection type
                      ^^^^ boolean. This type is incompatible with
       16:     bar(x: { a: number }): number;
                           ^^^^^^ number
  Member 2:
   17:     bar(x: { a: string }): string;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type
  Error:
   28: a.bar({ a: true }); // error, function cannot be called on intersection type
             ^^^^^^^^^^^ object literal. This type is incompatible with the expected param type of
   17:     bar(x: { a: string }): string;
                  ^^^^^^^^^^^^^ object type
    Property `a` is incompatible:
       28: a.bar({ a: true }); // error, function cannot be called on intersection type
                      ^^^^ boolean. This type is incompatible with
       17:     bar(x: { a: string }): string;
                           ^^^^^^ string

Error: overload.js:32
 32: a.bar(x); // error with nested intersection info (outer for bar, inner for x)
     ^^^^^^^^ call of method `bar`. Function cannot be called on any member of intersection type
 32: a.bar(x); // error with nested intersection info (outer for bar, inner for x)
     ^^^^^ intersection
  Member 1:
   16:     bar(x: { a: number }): number;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type
  Error:
   32: a.bar(x); // error with nested intersection info (outer for bar, inner for x)
             ^ intersection type
   30: declare var x: { a: boolean; } & { b: string };
                      ^^^^^^^^^^^^^^^ object type. This type is incompatible with the expected param type of
   16:     bar(x: { a: number }): number;
                  ^^^^^^^^^^^^^ object type
    Property `a` is incompatible:
       30: declare var x: { a: boolean; } & { b: string };
                               ^^^^^^^ boolean. This type is incompatible with
       16:     bar(x: { a: number }): number;
                           ^^^^^^ number
  Member 2:
   17:     bar(x: { a: string }): string;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type
  Error:
   32: a.bar(x); // error with nested intersection info (outer for bar, inner for x)
             ^ intersection type
   30: declare var x: { a: boolean; } & { b: string };
                      ^^^^^^^^^^^^^^^ object type. This type is incompatible with the expected param type of
   17:     bar(x: { a: string }): string;
                  ^^^^^^^^^^^^^ object type
    Property `a` is incompatible:
       30: declare var x: { a: boolean; } & { b: string };
                               ^^^^^^^ boolean. This type is incompatible with
       17:     bar(x: { a: string }): string;
                           ^^^^^^ string

Error ------------------------------------------------------------- test2.js:7:2

Error: test2.js:7
  7: (foo.bar('hmmm'): number); // error
      ^^^^^^^^^^^^^^^ Cannot cast `foo.bar(...)` to number because string [1] is incompatible with number [2].
  References:
    3:   bar(x: string): string;
                         ^^^^^^ [1]: string
    7: (foo.bar('hmmm'): number); // error
                         ^^^^^^ [2]: number


Found 11 errors
