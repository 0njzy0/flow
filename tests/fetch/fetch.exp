Error ----------------------------------------------------------- fetch.js:12:28

Cannot assign `fetch(...)` to `b` because in type argument `R`, `Response` is
incompatible with string.


Error ----------------------------------------------------------- fetch.js:25:26

Cannot assign `fetch(...)` to `d` because in type argument `R`, `Blob` is
incompatible with `Response`.


Error: headers.js:3
  3: const a = new Headers("'Content-Type': 'image/jpeg'"); // not correct
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with the expected param type of
886:     constructor(init?: HeadersInit): void;
                            ^^^^^^^^^^^ union: `Headers` | object type. See lib: <BUILTINS>/bom.js:886
  Member 1:
  879: type HeadersInit = Headers | {[key: string]: string};
                          ^^^^^^^ Headers. See lib: <BUILTINS>/bom.js:879
  Error:
    3: const a = new Headers("'Content-Type': 'image/jpeg'"); // not correct
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
  879: type HeadersInit = Headers | {[key: string]: string};
                          ^^^^^^^ Headers. See lib: <BUILTINS>/bom.js:879
  Member 2:
  879: type HeadersInit = Headers | {[key: string]: string};
                                    ^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:879
  Error:
    3: const a = new Headers("'Content-Type': 'image/jpeg'"); // not correct
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
  879: type HeadersInit = Headers | {[key: string]: string};
                                    ^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:879

Error: headers.js:4
  4: const b = new Headers(['Content-Type', 'image/jpeg']); // not correct
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ array literal. This type is incompatible with the expected param type of
886:     constructor(init?: HeadersInit): void;
                            ^^^^^^^^^^^ union: `Headers` | object type. See lib: <BUILTINS>/bom.js:886
  Member 1:
  879: type HeadersInit = Headers | {[key: string]: string};
                          ^^^^^^^ Headers. See lib: <BUILTINS>/bom.js:879
  Error:
    4: const b = new Headers(['Content-Type', 'image/jpeg']); // not correct
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ array literal. This type is incompatible with
  879: type HeadersInit = Headers | {[key: string]: string};
                          ^^^^^^^ Headers. See lib: <BUILTINS>/bom.js:879
  Member 2:
  879: type HeadersInit = Headers | {[key: string]: string};
                                    ^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:879
  Error:
    4: const b = new Headers(['Content-Type', 'image/jpeg']); // not correct
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ array literal. This type is incompatible with
  879: type HeadersInit = Headers | {[key: string]: string};
                                    ^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:879

Error ----------------------------------------------------------- headers.js:9:3

Cannot call `e.append` because function requires another argument.


Error ---------------------------------------------------------- headers.js:10:3

Cannot call `e.append` because function requires another argument.


Error --------------------------------------------------------- headers.js:10:10

Cannot call `e.append` with object literal bound to `name` because object
literal is incompatible with string.


Error ---------------------------------------------------------- headers.js:12:3

Cannot call `e.set` because function requires another argument.


Error ---------------------------------------------------------- headers.js:13:3

Cannot call `e.set` because function requires another argument.


Error ---------------------------------------------------------- headers.js:13:7

Cannot call `e.set` with object literal bound to `name` because object literal
is incompatible with string.


Error --------------------------------------------------------- headers.js:15:20

Cannot assign `e.append(...)` to `f` because undefined is incompatible with
`Headers`.


Error --------------------------------------------------------- headers.js:18:19

Cannot assign `e.get(...)` to `h` because string is incompatible with number.


Error ---------------------------------------------------------- headers.js:28:3

Cannot call `e.getAll` because property `getAll` is missing in `Headers`.


Error ---------------------------------------------------------- request.js:2:24

Cannot call `Request` because function requires another argument.


Error ---------------------------------------------------------- request.js:6:35

Cannot call `Request` with `c` bound to `init` because:
 - in property `cache`, string enum is incompatible with undefined.
 - in property `credentials`, string enum is incompatible with undefined.
 - in property `headers`, `Headers` is incompatible with object type.
 - in property `headers`, `Headers` is incompatible with undefined.
 - in property `integrity`, string is incompatible with undefined.
 - in property `method`, string is incompatible with undefined.
 - in property `mode`, string enum is incompatible with undefined.
 - in property `redirect`, string enum is incompatible with undefined.
 - in property `referrer`, string is incompatible with undefined.
 - in property `referrerPolicy`, string enum is incompatible with undefined.


Error: request.js:8
  8: const f: Request = new Request({}) // incorrect
                                    ^^ object literal. This type is incompatible with the expected param type of
977:     constructor(input: RequestInfo, init?: RequestOptions): void;
                            ^^^^^^^^^^^ union: `Request` | `URL` | string. See lib: <BUILTINS>/bom.js:977
  Member 1:
  926: type RequestInfo = Request | URL | string;
                          ^^^^^^^ Request. See lib: <BUILTINS>/bom.js:926
  Error:
    8: const f: Request = new Request({}) // incorrect
                                      ^^ object literal. This type is incompatible with
  926: type RequestInfo = Request | URL | string;
                          ^^^^^^^ Request. See lib: <BUILTINS>/bom.js:926
  Member 2:
  926: type RequestInfo = Request | URL | string;
                                    ^^^ URL. See lib: <BUILTINS>/bom.js:926
  Error:
    8: const f: Request = new Request({}) // incorrect
                                      ^^ object literal. This type is incompatible with
  926: type RequestInfo = Request | URL | string;
                                    ^^^ URL. See lib: <BUILTINS>/bom.js:926

Error --------------------------------------------------------- request.js:24:19

Cannot call `h.text().then` with function bound to `onFulfill` because in the
first argument, `Buffer` is incompatible with string.


Error --------------------------------------------------------- request.js:26:27

Cannot call `h.arrayBuffer().then` with function bound to `onFulfill` because in
the first argument, `ArrayBuffer` is incompatible with `Buffer`.


Error: request.js:54
                                                          v
 54: const l: Request = new Request('http://example.org', {
 55:   method: 'GET',
 56:   headers: 'Content-Type: image/jpeg',
...:
 59: }) // incorrect - headers is string
     ^ object literal. This type is incompatible with the expected param type of
977:     constructor(input: RequestInfo, init?: RequestOptions): void;
                                                ^^^^^^^^^^^^^^ RequestOptions. See lib: <BUILTINS>/bom.js:977
  Property `headers` is incompatible:
     56:   headers: 'Content-Type: image/jpeg',
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
    933:     headers?: HeadersInit;
                       ^^^^^^^^^^^ union: `Headers` | object type. See lib: <BUILTINS>/bom.js:933
      Member 1:
      879: type HeadersInit = Headers | {[key: string]: string};
                              ^^^^^^^ Headers. See lib: <BUILTINS>/bom.js:879
      Error:
       56:   headers: 'Content-Type: image/jpeg',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
      879: type HeadersInit = Headers | {[key: string]: string};
                              ^^^^^^^ Headers. See lib: <BUILTINS>/bom.js:879
      Member 2:
      879: type HeadersInit = Headers | {[key: string]: string};
                                        ^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:879
      Error:
       56:   headers: 'Content-Type: image/jpeg',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
      879: type HeadersInit = Headers | {[key: string]: string};
                                        ^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:879

Error --------------------------------------------------------- request.js:63:28

Cannot call `Request` with object literal bound to `init` because in property
`method`, null is incompatible with string.


Error --------------------------------------------------------- response.js:8:28

Cannot call `Response` with object literal bound to `init` because in property
`status`, string is incompatible with number.


Error --------------------------------------------------------- response.js:9:28

Cannot call `Response` with object literal bound to `init` because in property
`status`, null is incompatible with number.


Error: response.js:11
                                                      v
 11: const f: Response = new Response("responsebody", {
 12:     status: 404,
 13:     headers: "'Content-Type': 'image/jpeg'"
 14: }); // incorrect
     ^ object literal. This type is incompatible with the expected param type of
951:     constructor(input?: ?BodyInit, init?: ResponseOptions): void;
                                               ^^^^^^^^^^^^^^^ ResponseOptions. See lib: <BUILTINS>/bom.js:951
  Property `headers` is incompatible:
     13:     headers: "'Content-Type': 'image/jpeg'"
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
    947:     headers?: HeadersInit
                       ^^^^^^^^^^^ union: `Headers` | object type. See lib: <BUILTINS>/bom.js:947
      Member 1:
      879: type HeadersInit = Headers | {[key: string]: string};
                              ^^^^^^^ Headers. See lib: <BUILTINS>/bom.js:879
      Error:
       13:     headers: "'Content-Type': 'image/jpeg'"
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
      879: type HeadersInit = Headers | {[key: string]: string};
                              ^^^^^^^ Headers. See lib: <BUILTINS>/bom.js:879
      Member 2:
      879: type HeadersInit = Headers | {[key: string]: string};
                                        ^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:879
      Error:
       13:     headers: "'Content-Type': 'image/jpeg'"
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string. This type is incompatible with
      879: type HeadersInit = Headers | {[key: string]: string};
                                        ^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:879

Error: response.js:30
                                      v
 30: const i: Response = new Response({
 31:     status: 404,
 32:     headers: new Headers({
...:
 35: }); // incorrect
     ^ object literal. This type is incompatible with the expected param type of
951:     constructor(input?: ?BodyInit, init?: ResponseOptions): void;
                              ^^^^^^^^ union: string | `URLSearchParams` | `FormData` | `Blob` | `ArrayBuffer` | `$ArrayBufferView`. See lib: <BUILTINS>/bom.js:951
  Member 2:
  924: type BodyInit = string | URLSearchParams | FormData | Blob | ArrayBuffer | $ArrayBufferView;
                                ^^^^^^^^^^^^^^^ URLSearchParams. See lib: <BUILTINS>/bom.js:924
  Error:
                                        v
   30: const i: Response = new Response({
   31:     status: 404,
   32:     headers: new Headers({
  ...:
   35: }); // incorrect
       ^ object literal. This type is incompatible with
  924: type BodyInit = string | URLSearchParams | FormData | Blob | ArrayBuffer | $ArrayBufferView;
                                ^^^^^^^^^^^^^^^ URLSearchParams. See lib: <BUILTINS>/bom.js:924
  Member 3:
  924: type BodyInit = string | URLSearchParams | FormData | Blob | ArrayBuffer | $ArrayBufferView;
                                                  ^^^^^^^^ FormData. See lib: <BUILTINS>/bom.js:924
  Error:
                                        v
   30: const i: Response = new Response({
   31:     status: 404,
   32:     headers: new Headers({
  ...:
   35: }); // incorrect
       ^ object literal. This type is incompatible with
  924: type BodyInit = string | URLSearchParams | FormData | Blob | ArrayBuffer | $ArrayBufferView;
                                                  ^^^^^^^^ FormData. See lib: <BUILTINS>/bom.js:924
  Member 4:
  924: type BodyInit = string | URLSearchParams | FormData | Blob | ArrayBuffer | $ArrayBufferView;
                                                             ^^^^ Blob. See lib: <BUILTINS>/bom.js:924
  Error:
                                        v
   30: const i: Response = new Response({
   31:     status: 404,
   32:     headers: new Headers({
  ...:
   35: }); // incorrect
       ^ object literal. This type is incompatible with
  924: type BodyInit = string | URLSearchParams | FormData | Blob | ArrayBuffer | $ArrayBufferView;
                                                             ^^^^ Blob. See lib: <BUILTINS>/bom.js:924
  Member 5:
  924: type BodyInit = string | URLSearchParams | FormData | Blob | ArrayBuffer | $ArrayBufferView;
                                                                    ^^^^^^^^^^^ ArrayBuffer. See lib: <BUILTINS>/bom.js:924
  Error:
                                        v
   30: const i: Response = new Response({
   31:     status: 404,
   32:     headers: new Headers({
  ...:
   35: }); // incorrect
       ^ object literal. This type is incompatible with
  924: type BodyInit = string | URLSearchParams | FormData | Blob | ArrayBuffer | $ArrayBufferView;
                                                                    ^^^^^^^^^^^ ArrayBuffer. See lib: <BUILTINS>/bom.js:924
  Member 6:
  924: type BodyInit = string | URLSearchParams | FormData | Blob | ArrayBuffer | $ArrayBufferView;
                                                                                  ^^^^^^^^^^^^^^^^ $ArrayBufferView. See lib: <BUILTINS>/bom.js:924
  Error:
                                        v
   30: const i: Response = new Response({
   31:     status: 404,
   32:     headers: new Headers({
  ...:
   35: }); // incorrect
       ^ object literal. This type is incompatible with
  924: type BodyInit = string | URLSearchParams | FormData | Blob | ArrayBuffer | $ArrayBufferView;
                                                                                  ^^^^^^^^^^^^^^^^ union: `$TypedArray` | `DataView`. See lib: <BUILTINS>/bom.js:924
    Member 1:
    628: type $ArrayBufferView = $TypedArray | DataView;
                                 ^^^^^^^^^^^ $TypedArray. See lib: <BUILTINS>/core.js:628
    Error:
                                          v
     30: const i: Response = new Response({
     31:     status: 404,
     32:     headers: new Headers({
    ...:
     35: }); // incorrect
         ^ object literal. This type is incompatible with
    628: type $ArrayBufferView = $TypedArray | DataView;
                                 ^^^^^^^^^^^ $TypedArray. See lib: <BUILTINS>/core.js:628
    Member 2:
    628: type $ArrayBufferView = $TypedArray | DataView;
                                               ^^^^^^^^ DataView. See lib: <BUILTINS>/core.js:628
    Error:
                                          v
     30: const i: Response = new Response({
     31:     status: 404,
     32:     headers: new Headers({
    ...:
     35: }); // incorrect
         ^ object literal. This type is incompatible with
    628: type $ArrayBufferView = $TypedArray | DataView;
                                               ^^^^^^^^ DataView. See lib: <BUILTINS>/core.js:628

Error -------------------------------------------------------- response.js:42:19

Cannot call `h.text().then` with function bound to `onFulfill` because in the
first argument, `Buffer` is incompatible with string.


Error -------------------------------------------------------- response.js:44:27

Cannot call `h.arrayBuffer().then` with function bound to `onFulfill` because in
the first argument, `ArrayBuffer` is incompatible with `Buffer`.


Error -------------------------------------------------- urlsearchparams.js:4:31

Cannot call `URLSearchParams` with array literal bound to `query` because:
 - in type argument `T`, string is incompatible with tuple type.
 - in type argument `T`, string is incompatible with tuple type.


Error --------------------------------------------------- urlsearchparams.js:9:3

Cannot call `e.append` because function requires another argument.


Error -------------------------------------------------- urlsearchparams.js:10:3

Cannot call `e.append` because function requires another argument.


Error ------------------------------------------------- urlsearchparams.js:10:10

Cannot call `e.append` with object literal bound to `name` because object
literal is incompatible with string.


Error -------------------------------------------------- urlsearchparams.js:12:3

Cannot call `e.set` because function requires another argument.


Error -------------------------------------------------- urlsearchparams.js:13:3

Cannot call `e.set` because function requires another argument.


Error -------------------------------------------------- urlsearchparams.js:13:7

Cannot call `e.set` with object literal bound to `name` because object literal
is incompatible with string.


Error ------------------------------------------------- urlsearchparams.js:15:28

Cannot assign `e.append(...)` to `f` because undefined is incompatible with
`URLSearchParams`.


Error ------------------------------------------------- urlsearchparams.js:18:19

Cannot assign `e.get(...)` to `h` because string is incompatible with number.



Found 45 errors
