Error: forof.js:7
  7:     (x: string); // Error - number ~> string
          ^ Cannot cast `x` to string because number [1] is incompatible with string [2].
  References:
    5: function testArray(arr: Array<number>): void {
                                     ^^^^^^ [1]: number
    7:     (x: string); // Error - number ~> string
               ^^^^^^ [2]: string

Error: forof.js:13
 13:     (x: string); // Error - number ~> string
          ^ Cannot cast `x` to string because number [1] is incompatible with string [2].
  References:
   11: function testIterable1(iterable: Iterable<number>): void {
                                                 ^^^^^^ [1]: number
   13:     (x: string); // Error - number ~> string
               ^^^^^^ [2]: string

Error: forof.js:25
 25:     (x: number); // Error - string ~> number
          ^ Cannot cast `x` to number because string [1] is incompatible with number [2].
  References:
  288:     @@iterator(): Iterator<string>;
                                  ^^^^^^ [1]: string. See lib: <BUILTINS>/core.js:288
   25:     (x: number); // Error - string ~> number
               ^^^^^^ [2]: number

Error: forof.js:32
 32:     (elem: number); // Error - tuple ~> number
          ^^^^ Cannot cast `elem` to number because tuple type [1] is incompatible with number [2].
  References:
  541:     @@iterator(): Iterator<[K, V]>;
                                  ^^^^^^ [1]: tuple type. See lib: <BUILTINS>/core.js:541
   32:     (elem: number); // Error - tuple ~> number
                  ^^^^^^ [2]: number

Error: forof.js:39
 39:     (elem: number); // Error - tuple ~> number
          ^^^^ Cannot cast `elem` to number because tuple type [1] is incompatible with number [2].
  References:
  541:     @@iterator(): Iterator<[K, V]>;
                                  ^^^^^^ [1]: tuple type. See lib: <BUILTINS>/core.js:541
   39:     (elem: number); // Error - tuple ~> number
                  ^^^^^^ [2]: number

Error: forof.js:45
 45:     (x: number); // Error - string ~> number
          ^ Cannot cast `x` to number because string [1] is incompatible with number [2].
  References:
   43: function testSet1(set: Set<string>): void {
                                  ^^^^^^ [1]: string
   45:     (x: number); // Error - string ~> number
               ^^^^^^ [2]: number


Found 6 errors
