Error -------------------------------------------------------------------------------------------- intersection.js:10:32

Cannot return `x` because `B` [1] is incompatible with `A` [2].


Error -------------------------------------------------------------------------------------------- intersection.js:11:32

Cannot return `x` because `A` [1] is incompatible with `B` [2].


Error ----------------------------------------------------------------------------------------------------- test.js:7:10

Cannot use type without at least 1 type argument.


Error ----------------------------------------------------------------------------------------------------- test.js:8:10

Cannot use type without at least 1 type argument.


Error ----------------------------------------------------------------------------------------------------- test.js:13:9

Cannot cast `null` to `C` because mixed [1] is incompatible with number [2].


Error ----------------------------------------------------------------------------------------------------- test.js:15:2

Cannot cast `c` to empty because number [1] is incompatible with empty [2].


Error ----------------------------------------------------------------------------------------------------- test.js:19:2

Cannot cast `42` to `D` because number [1] is incompatible with undefined [2].


Error ----------------------------------------------------------------------------------------------------- test.js:24:9

Cannot cast `null` to `E` because mixed [1] is incompatible with number [2].


Error ----------------------------------------------------------------------------------------------------- test.js:26:2

Cannot cast `e` to empty because number [1] is incompatible with empty [2].


Error ----------------------------------------------------------------------------------------------------- test.js:31:9

Cannot cast `null` to `F` because mixed [1] is incompatible with number [2].


Error ----------------------------------------------------------------------------------------------------- test.js:33:2

Cannot cast `f` to empty because number [1] is incompatible with empty [2].


Error: test.js:38
 38: ((null: mixed): G); // Error: mixed ~> number | string
             ^^^^^ mixed. This type is incompatible with
 38: ((null: mixed): G); // Error: mixed ~> number | string
                     ^ union: `A` | `B`
  Member 1:
   35: type G = $Call<Fn2, number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^ A
  Error:
   38: ((null: mixed): G); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
   35: type G = $Call<Fn2, number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^ number
  Member 2:
   35: type G = $Call<Fn2, number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^ B
  Error:
   38: ((null: mixed): G); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
   35: type G = $Call<Fn2, number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^ string

Error ----------------------------------------------------------------------------------------------------- test.js:39:2

Cannot cast `g` to number because string [1] is incompatible with number [2].


Error ----------------------------------------------------------------------------------------------------- test.js:41:2

Cannot cast `g` to empty because:
 - number [1] is incompatible with empty [2].
 - string [1] is incompatible with empty [2].


Error: union.js:6
  6: ((null: mixed): A); // Error: mixed ~> number | string
             ^^^^^ mixed. This type is incompatible with
  6: ((null: mixed): A); // Error: mixed ~> number | string
                     ^ union: `A`(s)
  Member 1:
    3: type A = $Call<(() => number) | (() => string)>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ A
  Error:
    6: ((null: mixed): A); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
    3: type A = $Call<(() => number) | (() => string)>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number
  Member 2:
    3: type A = $Call<(() => number) | (() => string)>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ A
  Error:
    6: ((null: mixed): A); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
    3: type A = $Call<(() => number) | (() => string)>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string

Error ----------------------------------------------------------------------------------------------------- union.js:7:2

Cannot cast `a` to number because string [1] is incompatible with number [2].


Error ----------------------------------------------------------------------------------------------------- union.js:9:2

Cannot cast `a` to empty because:
 - number [1] is incompatible with empty [2].
 - string [1] is incompatible with empty [2].


Error: union.js:14
 14: ((null: mixed): B); // Error: mixed ~> number | string
             ^^^^^ mixed. This type is incompatible with
 14: ((null: mixed): B); // Error: mixed ~> number | string
                     ^ union: `B`(s)
  Member 1:
   11: type B = $Call<(<T>(T) => T) | (<T>(any, T) => T), number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B
  Error:
   14: ((null: mixed): B); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
   11: type B = $Call<(<T>(T) => T) | (<T>(any, T) => T), number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number
  Member 2:
   11: type B = $Call<(<T>(T) => T) | (<T>(any, T) => T), number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B
  Error:
   14: ((null: mixed): B); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
   11: type B = $Call<(<T>(T) => T) | (<T>(any, T) => T), number, string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string

Error ---------------------------------------------------------------------------------------------------- union.js:15:2

Cannot cast `b` to number because string [1] is incompatible with number [2].


Error ---------------------------------------------------------------------------------------------------- union.js:17:2

Cannot cast `b` to empty because:
 - number [1] is incompatible with empty [2].
 - string [1] is incompatible with empty [2].


Error: union.js:22
 22: ((null: mixed): C); // Error: mixed ~> number | string
             ^^^^^ mixed. This type is incompatible with
 22: ((null: mixed): C); // Error: mixed ~> number | string
                     ^ union: number | string
  Member 1:
   19: type C = $Call<<T>(T) => T, number | string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number
  Error:
   22: ((null: mixed): C); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
   19: type C = $Call<<T>(T) => T, number | string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number
  Member 2:
   19: type C = $Call<<T>(T) => T, number | string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string
  Error:
   22: ((null: mixed): C); // Error: mixed ~> number | string
               ^^^^^ mixed. This type is incompatible with
   19: type C = $Call<<T>(T) => T, number | string>;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string

Error ---------------------------------------------------------------------------------------------------- union.js:23:2

Cannot cast `c` to number because string [1] is incompatible with number [2].


Error ---------------------------------------------------------------------------------------------------- union.js:25:2

Cannot cast `c` to empty because:
 - number [1] is incompatible with empty [2].
 - string [1] is incompatible with empty [2].



Found 27 errors
