Error: test2.js:7
  7: var y: I.B = new C();
                  ^^^^^^^ Cannot assign `new C()` to `y` because `C` [1] is incompatible with `B` [2].
  References:
    7: var y: I.B = new C();
                    ^^^^^^^ [1]: `C`
    7: var y: I.B = new C();
              ^^^ [2]: `B`

Error: test3.js:6
  6: var a: A<string, number, Array<bool>> = c; // the third type arg is incorrect
                                             ^ Cannot assign `c` to `a` because in type argument `Z`, boolean [1] is incompatible with array type [2].
  References:
    2: class B extends A<string, number, bool> {}
                                         ^^^^ [1]: boolean
    6: var a: A<string, number, Array<bool>> = c; // the third type arg is incorrect
                                ^^^^^^^^^^^ [2]: array type

Error: test4.js:7
  7: foo((new C: C<O>), { f_: 0 });
                        ^^^^^^^^^ object literal. This type is incompatible with the expected param type of
  7: foo((new C: C<O>), { f_: 0 });
                   ^ O
  Property `f` is incompatible:
      7: foo((new C: C<O>), { f_: 0 });
                       ^ property `f`. Property not found in
      7: foo((new C: C<O>), { f_: 0 });
                            ^^^^^^^^^ object literal

Error: test4.js:13
 13: foo(new D, { f_: 0 });
                ^^^^^^^^^ object literal. This type is incompatible with the expected param type of
  9: class D extends C<O> {
                       ^ O
  Property `f` is incompatible:
      9: class D extends C<O> {
                           ^ property `f`. Property not found in
     13: foo(new D, { f_: 0 });
                    ^^^^^^^^^ object literal


Found 4 errors
