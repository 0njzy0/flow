Error ----------------------------------------------------------------------------------------------------- test.js:21:8

Cannot use `MyClass` without 1 type argument.

Error: test.js:21
 21: var c: MyClass = new MyClass(0); // error, missing argument list (1)
            ^^^^^^^ Cannot use `MyClass` [1] without 1 type argument.
  References:
   14: class MyClass<T> {
                     ^ [1]: `MyClass`

Error ----------------------------------------------------------------------------------------------------- test.js:34:9

Cannot use `MyClass2` without 1-2 type arguments.

Error: test.js:34
 34: var c2: MyClass2 = new MyClass2(0, ""); // error, missing argument list (1-2)
             ^^^^^^^^ Cannot use `MyClass2` [1] without 1-2 type arguments.
  References:
   25: class MyClass2<T, U = string> {
                      ^^^^ [1]: `MyClass2`

Error ----------------------------------------------------------------------------------------------------- test.js:42:8

Cannot use `MyObject` without 1 type argument.

Error: test.js:42
 42: var o: MyObject = { x: 0 }; // error, missing argument list
            ^^^^^^^^ Cannot use `MyObject` [1] without 1 type argument.
  References:
   38: type MyObject<T> = {
                     ^ [1]: `MyObject`

Error ---------------------------------------------------------------------------------------------------- test.js:46:36

Cannot use `MyObject` without 1 type argument.

Error: test.js:46
 46: type MySubobject = { y: number } & MyObject; // error, missing argument list
                                        ^^^^^^^^ Cannot use `MyObject` [1] without 1 type argument.
  References:
   38: type MyObject<T> = {
                     ^ [1]: `MyObject`

Error ---------------------------------------------------------------------------------------------------- test.js:50:11

Cannot use `MyInterface` without 1 type argument.

Error: test.js:50
 50: interface MyInterface<T> {
               ^^^^^^^^^^^ Cannot use `MyInterface` [1] without 1 type argument.
  References:
   50: interface MyInterface<T> {
                             ^ [1]: `MyInterface`

Error ---------------------------------------------------------------------------------------------------- test.js:60:26

Cannot use `MyClass` with less than 1 type argument.

Error: test.js:60
 60: class MySubclass extends MyClass { // error, missing argument list
                              ^^^^^^^ Cannot use `MyClass` [1] with less than 1 type argument.
  References:
   14: class MyClass<T> {
                     ^ [1]: `MyClass`

Error ---------------------------------------------------------------------------------------------------- test.js:69:27

Cannot use `MyClass3` with less than 1 type argument.

Error: test.js:69
 69: class MySubclass2 extends MyClass3 { } // error, missing argument list
                               ^^^^^^^^ Cannot use `MyClass3` [1] with less than 1 type argument.
  References:
   67: class MyClass3<X, Y = void> { }
                      ^^^^ [1]: `MyClass3`

Error ---------------------------------------------------------------------------------------------------- test.js:79:11

Cannot use `MyClass` with less than 1 type argument.

Error: test.js:79
 79: var poly: MyClass<> = new MyClass; // error, too few arguments
               ^^^^^^^^^ Cannot use `MyClass` [1] with less than 1 type argument.
  References:
   14: class MyClass<T> {
                     ^ [1]: `MyClass`

Error ---------------------------------------------------------------------------------------------------- test.js:83:11

Cannot instantiate `MyClass4` because `MyClass4` is not a polymorphic type.

Error: test.js:83
 83: var mono: MyClass4<> = new MyClass4; // error, class is not polymorphic
               ^^^^^^^^^^ Cannot instantiate `MyClass4` because `MyClass4` [1] is not a polymorphic type.
  References:
   83: var mono: MyClass4<> = new MyClass4; // error, class is not polymorphic
                 ^^^^^^^^^^ [1]: `MyClass4`


Found 9 errors
