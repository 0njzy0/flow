Error ------------------------------------------------------------------------------------------------- generics.js:4:32

Cannot assign `x` to `r` because `X` is incompatible with number.

Error: generics.js:4
  4: function foo<X>(x: X): X { r = x; return x; }
                                    ^ Cannot assign `x` to `r` because `X` [1] is incompatible with number [2].
  References:
    4: function foo<X>(x: X): X { r = x; return x; }
                          ^ [1]: `X`
    3: var r: number = 0;
              ^^^^^^ [2]: number

Error --------------------------------------------------------------------------------------------- import_class.js:3:15

Cannot call `C` with empty string bound to `x` because string is incompatible with number.

Error: import_class.js:3
  3: var c = new C("");
                   ^^ Cannot call `C` with empty string bound to `x` because string [1] is incompatible with number [2].
  References:
    3: var c = new C("");
                     ^^ [1]: string
    3:     constructor(x: number) { this.x = x; }
                          ^^^^^^ [2]: number. See: export_class.js:3

Error -------------------------------------------------------------------------------------------------- objects.js:5:17

Cannot assign `c.foo()` to `x` because number is incompatible with string.

Error: objects.js:5
  5: var x: string = c.foo();
                     ^^^^^^^ Cannot assign `c.foo()` to `x` because number [1] is incompatible with string [2].
  References:
    1: function C() { this.x = 0; }
                               ^ [1]: number
    5: var x: string = c.foo();
              ^^^^^^ [2]: string

Error ------------------------------------------------------------------------------------------------- objects.js:13:17

Cannot assign `o2.bar()` to `y` because string is incompatible with number.

Error: objects.js:13
 13: var y: number = o2.bar();
                     ^^^^^^^^ Cannot assign `o2.bar()` to `y` because string [1] is incompatible with number [2].
  References:
    9: var o = { y: "", foo: foo, bar: bar };
                    ^^ [1]: string
   13: var y: number = o2.bar();
              ^^^^^^ [2]: number


Found 4 errors
