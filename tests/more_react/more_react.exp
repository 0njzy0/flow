Error: API.react.js:4
  4: app.setProps({y:42}); // error, y:number but foo expects string in App.react
         ^^^^^^^^ Cannot call `app.setProps` because property `setProps` is missing in `React.Element` [1].
  References:
         v-------------------------------------------------------------------
    8:   <App y={42}> // error, y: number but foo expects string in App.react
    9:     Some text.
   10:   </App>;
         -----^ [1]: `React.Element`. See: JSX.js:8

Error: API.react.js:5
  5: app.setState({z:42}); // error, z:number but foo expects string in App.react
         ^^^^^^^^ Cannot call `app.setState` because property `setState` is missing in `React.Element` [1].
  References:
         v-------------------------------------------------------------------
    8:   <App y={42}> // error, y: number but foo expects string in App.react
    9:     Some text.
   10:   </App>;
         -----^ [1]: `React.Element`. See: JSX.js:8

Error: App.react.js:36
 36:         {foo(z,x)} // error, since z: number
                  ^ Cannot call `foo` with `z` bound to `p` because number [1] is incompatible with string [2].
  References:
   19:     return {z:0}; // infer state.z: number
                     ^ [1]: number
   10: function foo(p:string,q:string):string { return p+q; }
                      ^^^^^^ [2]: string

Error: checkPropTypes.js:7
  7: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }); // error: missing arguments
     ^^^^^^^^^^^^^^ Cannot call `checkPropTypes` because function [1] requires another argument.
  References:
                                               v---
  190:   declare export function checkPropTypes<V>(
  191:     propTypes: $Subtype<{[_: $Keys<V>]: ReactPropsCheckType}>,
  192:     values: V,
  ...:
  196:   ) : void;
         -------^ [1]: function. See lib: <BUILTINS>/react.js:190

Error: checkPropTypes.js:8
  8: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }, 'value'); // error: missing argument
     ^^^^^^^^^^^^^^ Cannot call `checkPropTypes` because function [1] requires another argument.
  References:
                                               v---
  190:   declare export function checkPropTypes<V>(
  191:     propTypes: $Subtype<{[_: $Keys<V>]: ReactPropsCheckType}>,
  192:     values: V,
  ...:
  196:   ) : void;
         -------^ [1]: function. See lib: <BUILTINS>/react.js:190

Error: checkPropTypes.js:10
 10: checkPropTypes({ bar: PropTypes.string }, { foo: 'foo' }, 'value', 'TestComponent'); // error: property not found
                    ^^^^^^^^^^^^^^^^^^^^^^^^^ Property `bar` is missing in object literal [1].
  References:
   10: checkPropTypes({ bar: PropTypes.string }, { foo: 'foo' }, 'value', 'TestComponent'); // error: property not found
                                                 ^^^^^^^^^^^^^^ [1]: object literal

Error: checkPropTypes.js:12
 12: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }, 'value', 'TestComponent', () => 123); // error: number ~> string
                                                                                               ^^^ Cannot call `checkPropTypes` with function bound to `getStack` because in the return value, number [1] is incompatible with string [2].
  References:
   12: checkPropTypes({ foo: PropTypes.string }, { foo: 'foo' }, 'value', 'TestComponent', () => 123); // error: number ~> string
                                                                                                 ^^^ [1]: number
  195:     getStack: ?(() => ?string)
                              ^^^^^^ [2]: string. See lib: <BUILTINS>/react.js:195

Error: propTypes.js:15
 15: <D />; // errors: properties `name` and `title` not found
      ^ Cannot create `D` element because property `name` is missing in props [1] but exists in propTypes of React component [2].
  References:
   15: <D />; // errors: properties `name` and `title` not found
       ^^^^^ [1]: props
                    v
    9:   propTypes: {
   10:     name: React.PropTypes.string.isRequired,
   11:     ...C.propTypes,
   12:   }
         ^ [2]: propTypes of React component

Error: propTypes.js:15
 15: <D />; // errors: properties `name` and `title` not found
      ^ Cannot create `D` element because property `title` is missing in props [1] but exists in propTypes of React component [2].
  References:
   15: <D />; // errors: properties `name` and `title` not found
       ^^^^^ [1]: props
                    v
    9:   propTypes: {
   10:     name: React.PropTypes.string.isRequired,
   11:     ...C.propTypes,
   12:   }
         ^ [2]: propTypes of React component


Found 9 errors
