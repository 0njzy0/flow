API.react.js:4
  4: app.setProps({y:42}); // error, y:number but foo expects string in App.react
         ^^^^^^^^ property `setProps`. Property not found in
  4: app.setProps({y:42}); // error, y:number but foo expects string in App.react
     ^^^ React$Element

API.react.js:5
  5: app.setState({z:42}); // error, z:number but foo expects string in App.react
         ^^^^^^^^ property `setState`. Property not found in
  5: app.setState({z:42}); // error, z:number but foo expects string in App.react
     ^^^ React$Element

App.react.js:36
 36:         {foo(z,x)} // error, since z: number
                  ^ number. This type is incompatible with the expected param type of
 10: function foo(p:string,q:string):string { return p+q; }
                    ^^^^^^ string

JSX.js:8
  8:   <App y={42}> // error, y: number but foo expects string in App.react
       ^^^^^^^^^^^^ props of React element `App`
  8:   <App y={42}> // error, y: number but foo expects string in App.react
               ^^ number. This type is incompatible with
 14:   getDefaultProps: function(): { y: string } {
                                         ^^^^^^ string. See: App.react.js:14


Found 4 errors
