Error: class.js:4
  4:     this.b(a); // error: A ~> incompatible instance of T
                ^ A. This type is incompatible with the expected param type of
  1: class C<T> {
             ^ T

Error: default_params.js:6
  6:     h(c); // err, T ~> U
           ^ T. This type is incompatible with the expected param type of
  3:     function h(d:U = b) {}
                      ^ U

Error: default_params.js:10
 10:   g(0,0); // error: number ~> T
           ^ number. This type is incompatible with the expected param type of
  2:   function g<U>(b:U, c:T = a) {
                            ^ T

Error: method_shadow.js:42
 42: g.m(true); // err, bool ~> number|string
         ^^^^ boolean. This type is incompatible with the bound on type parameter `T`:
 40: declare var g: G<number|string>;
                      ^^^^^^^^^^^^^ union: number | string
  Member 1:
   40: declare var g: G<number|string>;
                        ^^^^^^ number
  Error:
   42: g.m(true); // err, bool ~> number|string
           ^^^^ boolean. This type is incompatible with
   40: declare var g: G<number|string>;
                        ^^^^^^ number
  Member 2:
   40: declare var g: G<number|string>;
                               ^^^^^^ string
  Error:
   42: g.m(true); // err, bool ~> number|string
           ^^^^ boolean. This type is incompatible with
   40: declare var g: G<number|string>;
                               ^^^^^^ string

Error: method_shadow.js:43
 43: (g.m(""): G<number>); // err, string ~> number
      ^^^^^^^ G. Has some incompatible type argument with
 43: (g.m(""): G<number>); // err, string ~> number
               ^^^^^^^^^ G
  Type argument `T` is incompatible:
     43: (g.m(""): G<number>); // err, string ~> number
              ^^ string. This type is incompatible with
     43: (g.m(""): G<number>); // err, string ~> number
                     ^^^^^^ number

Error: method_shadow.js:51
 51:         this.x = x; // err, m's T != H's T
                      ^ `T` [1] is incompatible with `T` [2].
  References:
   50:     m<T>(x:T) {
                  ^ [1]: `T`
   51:         this.x = x; // err, m's T != H's T
               ^^^^^^ [2]: `T`


Found 6 errors
