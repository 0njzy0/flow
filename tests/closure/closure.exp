Error ------------------------------------------------------------------------------------------------- Closure.js:20:14

Error: Closure.js:20
 20: takes_string(global_x); // error
                  ^^^^^^^^ Cannot call `takes_string` with `global_x` bound to `_` because number [1] is incompatible with string [2].
  References:
   14: function global_g() { global_x = 42; }
                                        ^^ [1]: number
    6: function takes_string(_:string) { }
                               ^^^^^^ [2]: string

Error ------------------------------------------------------------------------------------------------- Closure.js:20:14

Error: Closure.js:20
 20: takes_string(global_x); // error
                  ^^^^^^^^ Cannot call `takes_string` with `global_x` bound to `_` because number [1] is incompatible with string [2].
  References:
   22: global_x = 42;  // shouldn't pollute linear refinement
                  ^^ [1]: number
    6: function takes_string(_:string) { }
                               ^^^^^^ [2]: string

Error ------------------------------------------------------------------------------------------------- Closure.js:38:16

Error: Closure.js:38
 38:   takes_string(local_x); // error
                    ^^^^^^^ Cannot call `takes_string` with `local_x` bound to `_` because number [1] is incompatible with string [2].
  References:
   32:   function local_g() { local_x = 42; }
                                        ^^ [1]: number
    6: function takes_string(_:string) { }
                               ^^^^^^ [2]: string

Error ------------------------------------------------------------------------------------------------- Closure.js:38:16

Error: Closure.js:38
 38:   takes_string(local_x); // error
                    ^^^^^^^ Cannot call `takes_string` with `local_x` bound to `_` because number [1] is incompatible with string [2].
  References:
   40:   local_x = 42;  // shouldn't pollute linear refinement
                   ^^ [1]: number
    6: function takes_string(_:string) { }
                               ^^^^^^ [2]: string

Error ------------------------------------------------------------------------------------------------- Closure.js:57:14

Error: Closure.js:57
 57: takes_string(global_y); // error
                  ^^^^^^^^ Cannot call `takes_string` with `global_y` bound to `_` because number [1] is incompatible with string [2].
  References:
   50:   g: function() { global_y = 42; }
                                    ^^ [1]: number
    6: function takes_string(_:string) { }
                               ^^^^^^ [2]: string

Error ------------------------------------------------------------------------------------------------- Closure.js:57:14

Error: Closure.js:57
 57: takes_string(global_y); // error
                  ^^^^^^^^ Cannot call `takes_string` with `global_y` bound to `_` because number [1] is incompatible with string [2].
  References:
   59: global_y = 42;  // shouldn't pollute linear refinement
                  ^^ [1]: number
    6: function takes_string(_:string) { }
                               ^^^^^^ [2]: string

Error ------------------------------------------------------------------------------------------------- Closure.js:77:16

Error: Closure.js:77
 77:   takes_string(local_y); // error
                    ^^^^^^^ Cannot call `takes_string` with `local_y` bound to `_` because number [1] is incompatible with string [2].
  References:
   70:     g: function() { local_y = 42; }
                                     ^^ [1]: number
    6: function takes_string(_:string) { }
                               ^^^^^^ [2]: string

Error ------------------------------------------------------------------------------------------------- Closure.js:77:16

Error: Closure.js:77
 77:   takes_string(local_y); // error
                    ^^^^^^^ Cannot call `takes_string` with `local_y` bound to `_` because number [1] is incompatible with string [2].
  References:
   79:   local_y = 42;  // shouldn't pollute linear refinement
                   ^^ [1]: number
    6: function takes_string(_:string) { }
                               ^^^^^^ [2]: string

Error ---------------------------------------------------------------------------------------------- cond_havoc.js:12:10

Error: cond_havoc.js:12
 12:   return x; // error, string ~/~> number (return type anno) TODO
              ^ Cannot return `x` because string [1] is incompatible with number [2].
  References:
    8:   function f() { x = "" }
                            ^^ [1]: string
    6: function example(b: bool): number {
                                  ^^^^^^ [2]: number

Error --------------------------------------------------------------------------------------------------- const.js:20:38

Error: const.js:20
 20:     call_me = () => { var y:number = var_x; };  // error
                                          ^^^^^ Cannot assign `var_x` to `y` because null [1] is incompatible with number [2].
  References:
   22:   var_x = null;
                 ^^^^ [1]: null
   20:     call_me = () => { var y:number = var_x; };  // error
                                   ^^^^^^ [2]: number

Error --------------------------------------------------------------------------------------------------- const.js:20:38

Error: const.js:20
 20:     call_me = () => { var y:number = var_x; };  // error
                                          ^^^^^ Cannot assign `var_x` to `y` because null or undefined [1] is incompatible with number [2].
  References:
    9: function g(x: ?number) {
                     ^^^^^^^ [1]: null or undefined
   20:     call_me = () => { var y:number = var_x; };  // error
                                   ^^^^^^ [2]: number


Found 11 errors
