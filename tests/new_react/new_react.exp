Error: bad_default_props.js:15
 15: class C3 extends React.Component { // error
                      ^^^^^^^^^^^^^^^ property `Component`. Too few type arguments. Expected at least 1
 26: declare class React$Component<Props, State = void> {
                                   ^^^^^^^^^^^^ See type parameters of definition here. See lib: <BUILTINS>/react.js:26

Error: bad_default_props.js:20
 20: class C4 extends React.Component { // error
                      ^^^^^^^^^^^^^^^ property `Component`. Too few type arguments. Expected at least 1
 26: declare class React$Component<Props, State = void> {
                                   ^^^^^^^^^^^^ See type parameters of definition here. See lib: <BUILTINS>/react.js:26

Error: classes.js:7
  7: class Foo extends React.Component<Props, State> {
           ^^^ Foo. Cannot extend
  7: class Foo extends React.Component<Props, State> {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ React.Component
  Property `setState` is incompatible:
     23:   setState(o: { y_: string }): void { }
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function. This type is incompatible with
           v--------
     34:   setState(
     35:     partialState: $Shape<State> | ((State, Props) => $Shape<State> | void),
     36:     callback?: () => mixed,
     37:   ): void;
           ------^ function type. See lib: <BUILTINS>/react.js:34
      The first parameter is incompatible:
         23:   setState(o: { y_: string }): void { }
                           ^^^^^^^^^^^^^^ object type. This type is incompatible with
         35:     partialState: $Shape<State> | ((State, Props) => $Shape<State> | void),
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ State. See lib: <BUILTINS>/react.js:35
          Property `y_` is incompatible:
             23:   setState(o: { y_: string }): void { }
                               ^^^^^^^^^^^^^^ property `y_`. Property not found in
             35:     partialState: $Shape<State> | ((State, Props) => $Shape<State> | void),
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ State. See lib: <BUILTINS>/react.js:35

Error: classes.js:7
  7: class Foo extends React.Component<Props, State> {
           ^^^ Foo. Cannot extend
  7: class Foo extends React.Component<Props, State> {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ React.Component
  Property `setState` is incompatible:
     23:   setState(o: { y_: string }): void { }
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function. This type is incompatible with
           v--------
     34:   setState(
     35:     partialState: $Shape<State> | ((State, Props) => $Shape<State> | void),
     36:     callback?: () => mixed,
     37:   ): void;
           ------^ function type. See lib: <BUILTINS>/react.js:34
      The first parameter is incompatible:
         23:   setState(o: { y_: string }): void { }
                           ^^^^^^^^^^^^^^ object type. This type is incompatible with
         35:     partialState: $Shape<State> | ((State, Props) => $Shape<State> | void),
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/react.js:35
          Property `y_` is incompatible:
             23:   setState(o: { y_: string }): void { }
                               ^^^^^^^^^^^^^^ property `y_` of object type. Property not found in
             35:     partialState: $Shape<State> | ((State, Props) => $Shape<State> | void),
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/react.js:35

Error: classes.js:15
 15:     var _: string = this.props.x;
                         ^^^^^^^^^^^^ Cannot assign `this.props.x` to `_` because number [1] is incompatible with string [2].
  References:
    4: type Props = { x: number };
                         ^^^^^^ [1]: number
   15:     var _: string = this.props.x;
                  ^^^^^^ [2]: string

Error: classes.js:20
 20:     this.state = { y: "" };
                           ^^ Cannot assign object literal to `this.state` because in property `y`, string [1] is incompatible with number [2].
  References:
   20:     this.state = { y: "" };
                             ^^ [1]: string
    5: type State = { y: number };
                         ^^^^^^ [2]: number

Error: classes.js:38
 38: Foo.defaultProps = 0;
                        ^ Cannot assign `0` to `Foo.defaultProps` because number [1] is incompatible with `DefaultProps` [2].
  References:
   38: Foo.defaultProps = 0;
                          ^ [1]: number
    8:   static defaultProps: DefaultProps;
                              ^^^^^^^^^^^^ [2]: `DefaultProps`

Error: classes.js:39
 39: var foo: $jsx<number> = <Foo/>;
                             ^^^^^^ `<Foo />`
159:   +props: React$ElementProps<ElementType>,
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ React.ElementProps. Expected React component instead of. See lib: <BUILTINS>/react.js:159
 39: var foo: $jsx<number> = <Foo/>;
                   ^^^^^^ number

Error: classes.js:39
 39: var foo: $jsx<number> = <Foo/>;
                             ^^^^^^ props. This type is incompatible with
  7: class Foo extends React.Component<Props, State> {
                                       ^^^^^ Props
  Property `x` is incompatible:
      7: class Foo extends React.Component<Props, State> {
                                           ^^^^^ property `x`. Property not found in
     39: var foo: $jsx<number> = <Foo/>;
                                 ^^^^^^ props

Error: classes.js:39
 39: var foo: $jsx<number> = <Foo/>;
                             ^^^^^^ Cannot assign `<Foo />` to `foo` because in type argument `ElementType`, number [1] is incompatible with string [2].
  References:
   39: var foo: $jsx<number> = <Foo/>;
                     ^^^^^^ [1]: number
  149:   | string
           ^^^^^^ [2]: string. See lib: <BUILTINS>/react.js:149

Error: classes.js:39
 39: var foo: $jsx<number> = <Foo/>;
                              ^^^ Cannot assign `<Foo />` to `foo` because in property `type`, statics of `Foo` [1] is incompatible with number [2].
  References:
    7: class Foo extends React.Component<Props, State> {
             ^^^ [1]: statics of `Foo`
   39: var foo: $jsx<number> = <Foo/>;
                     ^^^^^^ [2]: number

Error: classes.js:43
                     v------------------
 43: var FooLegacy = React.createClass({
 44:   is_mounted: (undefined: ?boolean),
 45: 
...:
 76: });
     -^ call of method `createClass`. This type is incompatible with
                     v------------------
 43: var FooLegacy = React.createClass({
 44:   is_mounted: (undefined: ?boolean),
 45: 
...:
 76: });
     -^ LegacyReactComponent
  Property `setState` is incompatible:
     64:   setState(o: { y_: string }): void { },
                   ^^^^^^^^^^^^^^^^^^^^^^^^^ function. This type is incompatible with
           v--------
     34:   setState(
     35:     partialState: $Shape<State> | ((State, Props) => $Shape<State> | void),
     36:     callback?: () => mixed,
     37:   ): void;
           ------^ function type. See lib: <BUILTINS>/react.js:34
      The first parameter is incompatible:
         60:   getInitialState(): { y: string } {
                              ^^^^^^^^^^^^^^^^^ object type. This type is incompatible with
         64:   setState(o: { y_: string }): void { },
                           ^^^^^^^^^^^^^^ object type
          Property `y_` is incompatible:
             64:   setState(o: { y_: string }): void { },
                               ^^^^^^^^^^^^^^ property `y_`. Property not found in
             60:   getInitialState(): { y: string } {
                                  ^^^^^^^^^^^^^^^^^ object type

Error: classes.js:43
                     v------------------
 43: var FooLegacy = React.createClass({
 44:   is_mounted: (undefined: ?boolean),
 45: 
...:
 76: });
     -^ call of method `createClass`. This type is incompatible with
                     v------------------
 43: var FooLegacy = React.createClass({
 44:   is_mounted: (undefined: ?boolean),
 45: 
...:
 76: });
     -^ LegacyReactComponent
  Property `setState` is incompatible:
     64:   setState(o: { y_: string }): void { },
                   ^^^^^^^^^^^^^^^^^^^^^^^^^ function. This type is incompatible with
           v--------
     34:   setState(
     35:     partialState: $Shape<State> | ((State, Props) => $Shape<State> | void),
     36:     callback?: () => mixed,
     37:   ): void;
           ------^ function type. See lib: <BUILTINS>/react.js:34
      The first parameter is incompatible:
         64:   setState(o: { y_: string }): void { },
                           ^^^^^^^^^^^^^^ object type. This type is incompatible with
         35:     partialState: $Shape<State> | ((State, Props) => $Shape<State> | void),
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/react.js:35
          Property `y_` is incompatible:
             64:   setState(o: { y_: string }): void { },
                               ^^^^^^^^^^^^^^ property `y_` of object type. Property not found in
             35:     partialState: $Shape<State> | ((State, Props) => $Shape<State> | void),
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/react.js:35

Error: classes.js:57
 57:     var _: string = this.props.x;
                         ^^^^^^^^^^^^ Cannot assign `this.props.x` to `_` because number [1] is incompatible with string [2].
  References:
  294:   number: React$PropType$Primitive<number>;
                                          ^^^^^^ [1]: number. See lib: <BUILTINS>/react.js:294
   57:     var _: string = this.props.x;
                  ^^^^^^ [2]: string

Error: classes.js:79
 79: var foo_legacy: $jsx<number> = <FooLegacy/>;
                                    ^^^^^^^^^^^^ `<FooLegacy />`
159:   +props: React$ElementProps<ElementType>,
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ React.ElementProps. Expected React component instead of. See lib: <BUILTINS>/react.js:159
 79: var foo_legacy: $jsx<number> = <FooLegacy/>;
                          ^^^^^^ number

Error: classes.js:79
 79: var foo_legacy: $jsx<number> = <FooLegacy/>;
                                    ^^^^^^^^^^^^ props. Cannot use React default props from
 78: FooLegacy.defaultProps = 0;
                              ^ number

Error: classes.js:79
 79: var foo_legacy: $jsx<number> = <FooLegacy/>;
                                    ^^^^^^^^^^^^ props. This type is incompatible with
                  v
 46:   propTypes: {
 47:     x: React.PropTypes.number.isRequired
 48:   },
       ^ propTypes of React component
  Property `x` is incompatible:
                      v
     46:   propTypes: {
     47:     x: React.PropTypes.number.isRequired
     48:   },
           ^ property `x`. Property not found in
     79: var foo_legacy: $jsx<number> = <FooLegacy/>;
                                        ^^^^^^^^^^^^ props

Error: classes.js:79
 79: var foo_legacy: $jsx<number> = <FooLegacy/>;
                                    ^^^^^^^^^^^^ Cannot assign `<FooLegacy />` to `foo_legacy` because in type argument `ElementType`, number [1] is incompatible with string [2].
  References:
   79: var foo_legacy: $jsx<number> = <FooLegacy/>;
                            ^^^^^^ [1]: number
  149:   | string
           ^^^^^^ [2]: string. See lib: <BUILTINS>/react.js:149

Error: classes.js:79
 79: var foo_legacy: $jsx<number> = <FooLegacy/>;
                                     ^^^^^^^^^ Cannot assign `<FooLegacy />` to `foo_legacy` because in property `type`, statics of React component [1] is incompatible with number [2].
  References:
                       v------------------
   43: var FooLegacy = React.createClass({
   44:   is_mounted: (undefined: ?boolean),
   45: 
  ...:
   76: });
       -^ [1]: statics of React component
   79: var foo_legacy: $jsx<number> = <FooLegacy/>;
                            ^^^^^^ [2]: number

Error: import-react.js:16
 16: <HelloMessage name={007} />; // number ~/~> string error
                         ^^^ Cannot create `HelloMessage` element because in property `name`, number [1] is incompatible with string [2].
  References:
   16: <HelloMessage name={007} />; // number ~/~> string error
                           ^^^ [1]: number
   14: class HelloMessage extends React.Component<{ name: string }> {}
                                                          ^^^^^^ [2]: string

Error: new_react.js:17
 17:         var foo: string = this.state;
                               ^^^^^^^^^^ Cannot assign `this.state` to `foo` because null [1] is incompatible with string [2].
  References:
   15:     getInitialState() { return null; },
                                      ^^^^ [1]: null
   17:         var foo: string = this.state;
                        ^^^^^^ [2]: string

Error: new_react.js:18
 18:         var bar: string = this.props;
                               ^^^^^^^^^^ Cannot assign `this.props` to `bar` because propTypes of React component [1] is incompatible with string [2].
  References:
                      v
    5:     propTypes: {
    6:         x: React.PropTypes.string.isRequired,
    7:         y: React.PropTypes.array,
    8:         z: React.PropTypes.number
    9:     },
           ^ [1]: propTypes of React component
   18:         var bar: string = this.props;
                        ^^^^^^ [2]: string

Error: new_react.js:19
 19:         var qux: string = this.props.z;
                               ^^^^^^^^^^^^ Cannot assign `this.props.z` to `qux` because number [1] is incompatible with string [2].
  References:
  294:   number: React$PropType$Primitive<number>;
                                          ^^^^^^ [1]: number. See lib: <BUILTINS>/react.js:294
   19:         var qux: string = this.props.z;
                        ^^^^^^ [2]: string

Error: new_react.js:19
 19:         var qux: string = this.props.z;
                               ^^^^^^^^^^^^ Cannot assign `this.props.z` to `qux` because undefined [1] is incompatible with string [2].
  References:
  294:   number: React$PropType$Primitive<number>;
                                          ^^^^^^ [1]: undefined. See lib: <BUILTINS>/react.js:294
   19:         var qux: string = this.props.z;
                        ^^^^^^ [2]: string

Error: new_react.js:20
 20:         var w:number = this.props.x;
                            ^^^^^^^^^^^^ Cannot assign `this.props.x` to `w` because string [1] is incompatible with number [2].
  References:
  296:   string: React$PropType$Primitive<string>;
                                          ^^^^^^ [1]: string. See lib: <BUILTINS>/react.js:296
   20:         var w:number = this.props.x;
                     ^^^^^^ [2]: number

Error: new_react.js:21
 21:         this.props.y[0];
             ^^^^^^^^^^^^^^^ computed property. Computed property/element cannot be accessed on possibly undefined value
 21:         this.props.y[0];
             ^^^^^^^^^^^^ undefined

Error: new_react.js:29
 29: var element = <C x = {0}/>;
                           ^ Cannot create `C` element because in property `x`, number [1] is incompatible with string [2].
  References:
   29: var element = <C x = {0}/>;
                             ^ [1]: number
  296:   string: React$PropType$Primitive<string>;
                                          ^^^^^^ [2]: string. See lib: <BUILTINS>/react.js:296

Error: new_react.js:30
 30: var element_ = <C/>;
                    ^^^^ props. This type is incompatible with
                    v
  5:     propTypes: {
  6:         x: React.PropTypes.string.isRequired,
  7:         y: React.PropTypes.array,
  8:         z: React.PropTypes.number
  9:     },
         ^ propTypes of React component
  Property `x` is incompatible:
                        v
      5:     propTypes: {
      6:         x: React.PropTypes.string.isRequired,
      7:         y: React.PropTypes.array,
      8:         z: React.PropTypes.number
      9:     },
             ^ property `x`. Property not found in
     30: var element_ = <C/>;
                        ^^^^ props

Error: new_react.js:32
 32: var x: number = C.displayName;
                     ^^^^^^^^^^^^^ Cannot assign `C.displayName` to `x` because null or undefined [1] is incompatible with number [2].
  References:
   73:   static displayName?: ?string;
                              ^^^^^^^ [1]: null or undefined. See lib: <BUILTINS>/react.js:73
   32: var x: number = C.displayName;
              ^^^^^^ [2]: number

Error: new_react.js:32
 32: var x: number = C.displayName;
                     ^^^^^^^^^^^^^ Cannot assign `C.displayName` to `x` because string [1] is incompatible with number [2].
  References:
   73:   static displayName?: ?string;
                               ^^^^^^ [1]: string. See lib: <BUILTINS>/react.js:73
   32: var x: number = C.displayName;
              ^^^^^^ [2]: number

Error: new_react.js:32
 32: var x: number = C.displayName;
                     ^^^^^^^^^^^^^ Cannot assign `C.displayName` to `x` because undefined [1] is incompatible with number [2].
  References:
   73:   static displayName?: ?string;
                              ^^^^^^^ [1]: undefined. See lib: <BUILTINS>/react.js:73
   32: var x: number = C.displayName;
              ^^^^^^ [2]: number

Error: propTypes.js:13
     v---------------
 13: <C statistics={[
 14:   {},
 15:   {label:"",value:undefined},
 16: ]}/>; // error (label is required, value not required)
     ---^ props. This type is incompatible with
                  v
  5:   propTypes: {
  6:     statistics: PropTypes.arrayOf(PropTypes.shape({
  7:       label: PropTypes.string.isRequired,
...:
 10:   }
       ^ propTypes of React component
  Property `statistics` is incompatible:
                        v
     13: <C statistics={[
     14:   {},
     15:   {label:"",value:undefined},
     16: ]}/>; // error (label is required, value not required)
         ^ array literal. Has some incompatible type argument with
                         v----------------------------------
      6:     statistics: PropTypes.arrayOf(PropTypes.shape({
      7:       label: PropTypes.string.isRequired,
      8:       value: PropTypes.number,
      9:     })).isRequired,
             -------------^ array type
      Type argument `T` is incompatible:
         14:   {},
               ^^ object literal. This type is incompatible with
                                               v----------------
          6:     statistics: PropTypes.arrayOf(PropTypes.shape({
          7:       label: PropTypes.string.isRequired,
          8:       value: PropTypes.number,
          9:     })).isRequired,
                 -^ object type
          Property `label` is incompatible:
                                                   v----------------
              6:     statistics: PropTypes.arrayOf(PropTypes.shape({
              7:       label: PropTypes.string.isRequired,
              8:       value: PropTypes.number,
              9:     })).isRequired,
                     -^ property `label`. Property not found in
             14:   {},
                   ^^ object literal

Error: propTypes.js:18
                                                         v
 18: var props: Array<{label: string, value?: number}> = [
 19:   {},
 20:   {label:"",value:undefined},
 21: ]; // error (same as ^)
     ^ array literal. Has some incompatible type argument with
 18: var props: Array<{label: string, value?: number}> = [
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ array type
  Type argument `T` is incompatible:
     19:   {},
           ^^ object literal. This type is incompatible with
     18: var props: Array<{label: string, value?: number}> = [
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ object type
      Property `label` is incompatible:
         18: var props: Array<{label: string, value?: number}> = [
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `label`. Property not found in
         19:   {},
               ^^ object literal

Error: props.js:14
 14:         var a: number = this.props.x; // error
                             ^^^^^^^^^^^^ Cannot assign `this.props.x` to `a` because string [1] is incompatible with number [2].
  References:
  296:   string: React$PropType$Primitive<string>;
                                          ^^^^^^ [1]: string. See lib: <BUILTINS>/react.js:296
   14:         var a: number = this.props.x; // error
                      ^^^^^^ [2]: number

Error: props.js:14
 14:         var a: number = this.props.x; // error
                             ^^^^^^^^^^^^ Cannot assign `this.props.x` to `a` because undefined [1] is incompatible with number [2].
  References:
  296:   string: React$PropType$Primitive<string>;
                                          ^^^^^^ [1]: undefined. See lib: <BUILTINS>/react.js:296
   14:         var a: number = this.props.x; // error
                      ^^^^^^ [2]: number

Error: props.js:15
 15:         var b: string = this.props.y; // error
                                        ^ property `y`. Property not found in
 15:         var b: string = this.props.y; // error
                             ^^^^^^^^^^ propTypes of React component

Error: props.js:16
 16:         var c: string = this.props.z; // error
                             ^^^^^^^^^^^^ Cannot assign `this.props.z` to `c` because number [1] is incompatible with string [2].
  References:
  294:   number: React$PropType$Primitive<number>;
                                          ^^^^^^ [1]: number. See lib: <BUILTINS>/react.js:294
   16:         var c: string = this.props.z; // error
                      ^^^^^^ [2]: string

Error: props.js:16
 16:         var c: string = this.props.z; // error
                             ^^^^^^^^^^^^ Cannot assign `this.props.z` to `c` because undefined [1] is incompatible with string [2].
  References:
  294:   number: React$PropType$Primitive<number>;
                                          ^^^^^^ [1]: undefined. See lib: <BUILTINS>/react.js:294
   16:         var c: string = this.props.z; // error
                      ^^^^^^ [2]: string

Error: props.js:20
 20: var element = <TestProps x={false} y={false} z={false} />; // 3 errors
                                 ^^^^^ Cannot create `TestProps` element because in property `x`, boolean [1] is incompatible with string [2].
  References:
   20: var element = <TestProps x={false} y={false} z={false} />; // 3 errors
                                   ^^^^^ [1]: boolean
  296:   string: React$PropType$Primitive<string>;
                                          ^^^^^^ [2]: string. See lib: <BUILTINS>/react.js:296

Error: props.js:20
 20: var element = <TestProps x={false} y={false} z={false} />; // 3 errors
                                                     ^^^^^ Cannot create `TestProps` element because in property `z`, boolean [1] is incompatible with number [2].
  References:
   20: var element = <TestProps x={false} y={false} z={false} />; // 3 errors
                                                       ^^^^^ [1]: boolean
  294:   number: React$PropType$Primitive<number>;
                                          ^^^^^^ [2]: number. See lib: <BUILTINS>/react.js:294

Error: props.js:27
 27: (element: $jsx<Class<FooProps>>);
      ^^^^^^^ React.Element. This type is incompatible with
 27: (element: $jsx<Class<FooProps>>);
               ^^^^^^^^^^^^^^^^^^^^^ React.Element
  Property `props` is incompatible:
                        v
      4:     propTypes: {
      5:         x: React.PropTypes.string,
      6:         z: React.PropTypes.number
      7:     },
             ^ propTypes of React component. This type is incompatible with
    159:   +props: React$ElementProps<ElementType>,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ propTypes of React component. See lib: <BUILTINS>/react.js:159
      Property `w` is incompatible:
        159:   +props: React$ElementProps<ElementType>,
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `w`. Property not found in. See lib: <BUILTINS>/react.js:159
                            v
          4:     propTypes: {
          5:         x: React.PropTypes.string,
          6:         z: React.PropTypes.number
          7:     },
                 ^ propTypes of React component

Error: props2.js:14
 14:         var s: string = this.state.bar;
                             ^^^^^^^^^^^^^^ Cannot assign `this.state.bar` to `s` because number [1] is incompatible with string [2].
  References:
    9:     getInitialState: function(): { bar: number } {
                                               ^^^^^^ [1]: number
   14:         var s: string = this.state.bar;
                      ^^^^^^ [2]: string

Error: props2.js:15
 15:         return <C {...this.state} foo = {0} />;
                     ^ Cannot create `C` element because in property `bar`, number [1] is incompatible with string [2].
  References:
    9:     getInitialState: function(): { bar: number } {
                                               ^^^^^^ [1]: number
  296:   string: React$PropType$Primitive<string>;
                                          ^^^^^^ [2]: string. See lib: <BUILTINS>/react.js:296

Error: props2.js:15
 15:         return <C {...this.state} foo = {0} />;
                                              ^ Cannot create `C` element because in property `foo`, number [1] is incompatible with string [2].
  References:
   15:         return <C {...this.state} foo = {0} />;
                                                ^ [1]: number
  296:   string: React$PropType$Primitive<string>;
                                          ^^^^^^ [2]: string. See lib: <BUILTINS>/react.js:296

Error: props3.js:49
 49:       bad_one: React.PropTypes.imaginaryType,
                                    ^^^^^^^^^^^^^ property `imaginaryType`. Property not found in
 49:       bad_one: React.PropTypes.imaginaryType,
                    ^^^^^^^^^^^^^^^ ReactPropTypes

Error: props3.js:50
 50:       bad_two: React.PropTypes.string.inRequired,
                                           ^^^^^^^^^^ property `inRequired`. Property not found in
 50:       bad_two: React.PropTypes.string.inRequired,
                    ^^^^^^^^^^^^^^^^^^^^^^ ReactPropsChainableTypeChecker

Error: props4.js:9
  9: <JDiv id={42} />;
               ^^ Cannot create `JDiv` element because in property `id`, number [1] is incompatible with string [2].
  References:
    9: <JDiv id={42} />;
                 ^^ [1]: number
    6: class JDiv extends React.Component<{id: string}> {}
                                               ^^^^^^ [2]: string

Error: props4.js:18
 18:   <Example foo="foo" />,
       ^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 11: class Example extends React.Component<{ bar: string }> {
                                           ^^^^^^^^^^^^^^^ object type
  Property `bar` is incompatible:
     11: class Example extends React.Component<{ bar: string }> {
                                               ^^^^^^^^^^^^^^^ property `bar`. Property not found in
     18:   <Example foo="foo" />,
           ^^^^^^^^^^^^^^^^^^^^^ props

Error: props4.js:19
 19:   document.body
       ^^^^^^^^^^^^^ Cannot call `ReactDOM.render` with `document.body` bound to `container` because null [1] is incompatible with `Element` [2].
  References:
  564:   body: HTMLElement | null;
                             ^^^^ [1]: null. See lib: <BUILTINS>/dom.js:564
   18:     container: Element,
                      ^^^^^^^ [2]: `Element`. See lib: <BUILTINS>/react-dom.js:18

Error: state.js:19
 19:                 {this.state.bar.qux}
                                     ^^^ property `qux`. Property cannot be accessed on possibly null value
 19:                 {this.state.bar.qux}
                      ^^^^^^^^^^^^^^ null or undefined

Error: state.js:19
 19:                 {this.state.bar.qux}
                                     ^^^ property `qux`. Property cannot be accessed on possibly undefined value
 19:                 {this.state.bar.qux}
                      ^^^^^^^^^^^^^^ null or undefined

Error: state3.js:11
 11:         var a: number = this.state.x; // error
                             ^^^^^^^^^^^^ Cannot assign `this.state.x` to `a` because string [1] is incompatible with number [2].
  References:
    4:     getInitialState: function(): { x: string; } {
                                             ^^^^^^ [1]: string
   11:         var a: number = this.state.x; // error
                      ^^^^^^ [2]: number

Error: state3.js:14
 14:             x: false // error
                    ^^^^^ Cannot call `this.setState` with object literal bound to `partialState` because in property `x`, boolean [1] is incompatible with string [2].
  References:
   14:             x: false // error
                      ^^^^^ [1]: boolean
    4:     getInitialState: function(): { x: string; } {
                                             ^^^^^^ [2]: string

Error: state4.js:9
  9:     this.setState({ y: 0 });
                       ^^^^^^^^ object literal. This type is incompatible with the expected param type of
             v------------------
  3: var C = React.createClass({
  4:   getInitialState: function(): { x: number } {
  5:     return { x: 0 };
...:
 13: });
     -^ State
  Property `y` is incompatible:
      9:     this.setState({ y: 0 });
                           ^^^^^^^^ property `y` of object literal. Property not found in
      4:   getInitialState: function(): { x: number } {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^ object type

Error: state4.js:10
 10:     return <div>{this.state.z}</div>
                                 ^ property `z`. Property not found in
 10:     return <div>{this.state.z}</div>
                      ^^^^^^^^^^ object type

Error: state5.js:5
  5:     return this.state.x; // error: need to declare type of state
                           ^ property `x`. Property cannot be accessed on possibly undefined value
  5:     return this.state.x; // error: need to declare type of state
                ^^^^^^^^^^ undefined

Error: state6.js:30
 30:       bar: '42',
                ^^^^ Cannot call `this.setState` with function bound to `partialState` because in the return value and then property `bar`, string [1] is incompatible with number [2].
  References:
   30:       bar: '42',
                  ^^^^ [1]: string
    7: type State = {foo: number, bar: number};
                                       ^^^^^^ [2]: number

Error: state6.js:33
 33:       console.log(prevState.nope); // Error: `nope` does not exist.
                                 ^^^^ property `nope`. Property not found in
 33:       console.log(prevState.nope); // Error: `nope` does not exist.
                       ^^^^^^^^^ State

Error: state6.js:36
 36:       console.log(props.nope); // Error: `nope` does not exist.
                             ^^^^ property `nope`. Property not found in
 36:       console.log(props.nope); // Error: `nope` does not exist.
                       ^^^^^ object type

Error: state6.js:41
 41:     this.setState((any: StateUpdater3)); // Error: It has the wrong signature
                        ^^^^^^^^^^^^^^^^^^ Cannot call `this.setState` with `any` bound to `partialState` because in the first argument, number [1] is incompatible with `State` [2].
  References:
   11: type StateUpdater3 = {(number): number, foo: number, bar: number};
                              ^^^^^^ [1]: number
   13: class MyComponent extends React.Component<{prop: number}, State> {
                                                                 ^^^^^ [2]: `State`

Error: state6.js:47
 47: ((() => {}): $Shape<State>); // Error: Functions are not a valid object shape.
       ^^^^^^^^ function. Is not allowed as the shape of object type
 47: ((() => {}): $Shape<State>); // Error: Functions are not a valid object shape.
                         ^^^^^ State


Found 61 errors
