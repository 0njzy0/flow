Error ----------------------------------------------------------------------------------------------------- pred.js:17:8

Cannot return `options.objectMode || options.readableObjectMode || options.writableObjectMode` because undefined is
incompatible with boolean.


Error -------------------------------------------------------------------------------------------- proper_blaming.js:9:3

Cannot get `x.nope` because property `nope` is missing in null.


Error: test_obj.js:29
 29: var e: E = c; // error
                ^ intersection. This type is incompatible with
 29: var e: E = c; // error
            ^ E
  Member 1:
   33: type C = { [key: string]: number } & { [key: string]: number };
                ^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: lib/lib.js:33
  Error:
   29: var e: E = c; // error
                  ^ c
   29: var e: E = c; // error
              ^ E. This type is incompatible with
   33: type C = { [key: string]: number } & { [key: string]: number };
                ^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: lib/lib.js:33
    Indexable signature is incompatible:
       33: type C = { [key: string]: number } & { [key: string]: number };
                                     ^^^^^^ number. This type is incompatible with. See lib: lib/lib.js:33
       28: type E = { [key: string]: string };
                                     ^^^^^^ string
  Member 2:
   33: type C = { [key: string]: number } & { [key: string]: number };
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: lib/lib.js:33
  Error:
   29: var e: E = c; // error
                  ^ c
   29: var e: E = c; // error
              ^ E. This type is incompatible with
   33: type C = { [key: string]: number } & { [key: string]: number };
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: lib/lib.js:33
    Indexable signature is incompatible:
       33: type C = { [key: string]: number } & { [key: string]: number };
                                                                 ^^^^^^ number. This type is incompatible with. See lib: lib/lib.js:33
       28: type E = { [key: string]: string };
                                     ^^^^^^ string


Found 3 errors
