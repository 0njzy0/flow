main.js:12
 12: var b: React.Element<{prop1: string}> = <CustomComponent prop="asdf" />; // Error: Props<{prop}> ~> Props<{prop1}>
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ React element `CustomComponent`
  6:   props: {
              ^ property `prop`. Property not found in
 12: var b: React.Element<{prop1: string}> = <CustomComponent prop="asdf" />; // Error: Props<{prop}> ~> Props<{prop1}>
                          ^^^^^^^^^^^^^^^ object type

main.js:12
 12: var b: React.Element<{prop1: string}> = <CustomComponent prop="asdf" />; // Error: Props<{prop}> ~> Props<{prop1}>
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ React element `CustomComponent`
 12: var b: React.Element<{prop1: string}> = <CustomComponent prop="asdf" />; // Error: Props<{prop}> ~> Props<{prop1}>
                          ^^^^^^^^^^^^^^^ property `prop1`. Property not found in
 12: var b: React.Element<{prop1: string}> = <CustomComponent prop="asdf" />; // Error: Props<{prop}> ~> Props<{prop1}>
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props of React element `CustomComponent`

main.js:15
 15: <div id={42} />; // Error: (`id` prop) number ~> string
     ^^^^^^^^^^^^^^^ React element: `div`
 15: <div id={42} />; // Error: (`id` prop) number ~> string
              ^^ number. This type is incompatible with
  5:   div: $JSXIntrinsic<{id: string}>,
                               ^^^^^^ string. See: lib/jsx.js:5

main.js:17
 17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                                          ^^^^^^^^^^^^^^^^^ React element: `div`
 17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                               ^^^^^^ number. This type is incompatible with
  5:   div: $JSXIntrinsic<{id: string}>,
                               ^^^^^^ string. See: lib/jsx.js:5

main.js:17
 17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                                          ^^^^^^^^^^^^^^^^^ React element: `div`
 17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                               ^^^^^^ number. This type is incompatible with
 17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                                                  ^^^^^^ string

main.js:17
 17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                                          ^^^^^^^^^^^^^^^^^ React element: `div`
 17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                                                  ^^^^^^ string. This type is incompatible with
 17: var d: React.Element<{id: number}> = <div id="asdf" />; // Error: Props<{id:string}> ~> Props<{id:number}>
                               ^^^^^^ number


Found 6 errors
