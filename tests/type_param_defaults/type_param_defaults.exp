Error: classes.js:19
 19: (b_number.p: boolean); // Error number ~> boolean
      ^^^^^^^^^^ Cannot cast `b_number.p` to boolean because number [1] is incompatible with boolean [2].
  References:
   13: var b_number: B<number> = new B(123);
                       ^^^^^^ [1]: number
   19: (b_number.p: boolean); // Error number ~> boolean
                    ^^^^^^^ [2]: boolean

Error: classes.js:20
 20: (b_void.p: boolean); // Error void ~> boolean
      ^^^^^^^^ Cannot cast `b_void.p` to boolean because undefined [1] is incompatible with boolean [2].
  References:
   14: var b_void: B<void> = new B();
                     ^^^^ [1]: undefined
   20: (b_void.p: boolean); // Error void ~> boolean
                  ^^^^^^^ [2]: boolean

Error: classes.js:21
 21: (b_default.p: boolean); // Error string ~> boolean
      ^^^^^^^^^^^ Cannot cast `b_default.p` to boolean because string [1] is incompatible with boolean [2].
  References:
   11: class B<T = string> extends A<T> {}
                   ^^^^^^ [1]: string
   21: (b_default.p: boolean); // Error string ~> boolean
                     ^^^^^^^ [2]: boolean

Error: classes.js:23
 23: (b_star.p: boolean); // Error number ~> boolean
      ^^^^^^^^ Cannot cast `b_star.p` to boolean because number [1] is incompatible with boolean [2].
  References:
   17: var b_star: B<*> = new B(123);
                                ^^^ [1]: number
   23: (b_star.p: boolean); // Error number ~> boolean
                  ^^^^^^^ [2]: boolean

Error: classes.js:27
 27: var c_number: C<number> = new C(123); // Error number ~> ?string
                     ^^^^^^ Cannot instantiate `C` because in type argument `T`, number [1] is incompatible with string [2].
  References:
   27: var c_number: C<number> = new C(123); // Error number ~> ?string
                       ^^^^^^ [1]: number
   25: class C<T: ?string = string> extends A<T> {}
                   ^^^^^^ [2]: string

Error: classes.js:27
 27: var c_number: C<number> = new C(123); // Error number ~> ?string
                               ^^^^^^^^^^ Cannot assign `new C(...)` to `c_number` because in type argument `T`, number [1] is incompatible with string [2].
  References:
   27: var c_number: C<number> = new C(123); // Error number ~> ?string
                       ^^^^^^ [1]: number
   25: class C<T: ?string = string> extends A<T> {}
                   ^^^^^^ [2]: string

Error: classes.js:27
 27: var c_number: C<number> = new C(123); // Error number ~> ?string
                                     ^^^ Cannot call `C` with `123` bound to `p` because number [1] is incompatible with string [2].
  References:
   27: var c_number: C<number> = new C(123); // Error number ~> ?string
                                       ^^^ [1]: number
   25: class C<T: ?string = string> extends A<T> {}
                   ^^^^^^ [2]: string

Error: classes.js:32
 32: (c_void.p: boolean); // Error void ~> boolean
      ^^^^^^^^ Cannot cast `c_void.p` to boolean because undefined [1] is incompatible with boolean [2].
  References:
   28: var c_void: C<void> = new C();
                     ^^^^ [1]: undefined
   32: (c_void.p: boolean); // Error void ~> boolean
                  ^^^^^^^ [2]: boolean

Error: classes.js:33
 33: (c_default.p: boolean); // Error string ~> boolean
      ^^^^^^^^^^^ Cannot cast `c_default.p` to boolean because string [1] is incompatible with boolean [2].
  References:
   25: class C<T: ?string = string> extends A<T> {}
                            ^^^^^^ [1]: string
   33: (c_default.p: boolean); // Error string ~> boolean
                     ^^^^^^^ [2]: boolean

Error: classes.js:34
 34: (c_star.p: boolean); // Error string ~> boolean
      ^^^^^^^^ Cannot cast `c_star.p` to boolean because string [1] is incompatible with boolean [2].
  References:
   30: var c_star: C<*> = new C('hello');
                                ^^^^^^^ [1]: string
   34: (c_star.p: boolean); // Error string ~> boolean
                  ^^^^^^^ [2]: boolean

Error: classes.js:40
 40: var d_too_few_args: D<> = new D('hello'); // Error too few tparams
                         ^^^ Cannot use `D` [1] with less than 1 type argument.
  References:
   36: class D<S, T = string> extends A<T> {}
               ^^^^ [1]: `D`

Error: classes.js:41
 41: var d_too_many: D<mixed, string, string> = new D('hello'); // Error too many tparams
                     ^^^^^^^^^^^^^^^^^^^^^^^^ Cannot use `D` [1] with more than 2 type arguments.
  References:
   36: class D<S, T = string> extends A<T> {}
               ^^^^ [1]: `D`

Error: classes.js:42
 42: var d_star: D<*> = new D(10); // error, number ~> string
                              ^^ Cannot assign `new D(...)` to `d_star` because in type argument `T`, number [1] is incompatible with string [2].
  References:
   42: var d_star: D<*> = new D(10); // error, number ~> string
                                ^^ [1]: number
   36: class D<S, T = string> extends A<T> {}
                      ^^^^^^ [2]: string

Error: classes.js:44
 44: (d_number.p: boolean); // Error number ~> boolean
      ^^^^^^^^^^ Cannot cast `d_number.p` to boolean because number [1] is incompatible with boolean [2].
  References:
   37: var d_number: D<mixed, number> = new D(123);
                              ^^^^^^ [1]: number
   44: (d_number.p: boolean); // Error number ~> boolean
                    ^^^^^^^ [2]: boolean

Error: classes.js:45
 45: (d_void.p: boolean); // Error void ~> boolean
      ^^^^^^^^ Cannot cast `d_void.p` to boolean because undefined [1] is incompatible with boolean [2].
  References:
   38: var d_void: D<mixed, void> = new D();
                            ^^^^ [1]: undefined
   45: (d_void.p: boolean); // Error void ~> boolean
                  ^^^^^^^ [2]: boolean

Error: classes.js:46
 46: (d_default.p: boolean); // Error string ~> boolean
      ^^^^^^^^^^^ Cannot cast `d_default.p` to boolean because string [1] is incompatible with boolean [2].
  References:
   36: class D<S, T = string> extends A<T> {}
                      ^^^^^^ [1]: string
   46: (d_default.p: boolean); // Error string ~> boolean
                     ^^^^^^^ [2]: boolean

Error: classes.js:47
 47: (d_star.p: boolean); // Error number ~> boolean
      ^^^^^^^^ Cannot cast `d_star.p` to boolean because string [1] is incompatible with boolean [2].
  References:
   36: class D<S, T = string> extends A<T> {}
                      ^^^^^^ [1]: string
   47: (d_star.p: boolean); // Error number ~> boolean
                  ^^^^^^^ [2]: boolean

Error: classes.js:49
 49: class E<S: string, T: number = S> {} // Error: string ~> number
                ^^^^^^ string [1] is incompatible with number [2].
  References:
   49: class E<S: string, T: number = S> {} // Error: string ~> number
                  ^^^^^^ [1]: string
   49: class E<S: string, T: number = S> {} // Error: string ~> number
                             ^^^^^^ [2]: number

Error: classes.js:50
 50: class F<S: string, T: S = number> {} // Error: number ~> string
                               ^^^^^^ number [1] is incompatible with string [2].
  References:
   50: class F<S: string, T: S = number> {} // Error: number ~> string
                                 ^^^^^^ [1]: number
   50: class F<S: string, T: S = number> {} // Error: number ~> string
                  ^^^^^^ [2]: string

Error: classes.js:56
 56: (g_default.p: boolean); // Error string ~> boolean
      ^^^^^^^^^^^ Cannot cast `g_default.p` to boolean because string [1] is incompatible with boolean [2].
  References:
   54: var g_default: G<string> = new G('hello');
                        ^^^^^^ [1]: string
   56: (g_default.p: boolean); // Error string ~> boolean
                     ^^^^^^^ [2]: boolean

Error: classes.js:58
 58: class H<S = T, T = string> {} // Error - can't refer to T before it's defined
                 ^ Cannot resolve name `T`.

Error: classes.js:62
 62: var i_number: I<number> = new I(123); // Error number ~> ?string
                     ^^^^^^ Cannot instantiate `I` because in type argument `T`, number [1] is incompatible with string [2].
  References:
   62: var i_number: I<number> = new I(123); // Error number ~> ?string
                       ^^^^^^ [1]: number
   60: class I<T: ?string = *> extends A<T> {}
                   ^^^^^^ [2]: string

Error: classes.js:62
 62: var i_number: I<number> = new I(123); // Error number ~> ?string
                               ^^^^^^^^^^ Cannot assign `new I(...)` to `i_number` because in type argument `T`, number [1] is incompatible with string [2].
  References:
   62: var i_number: I<number> = new I(123); // Error number ~> ?string
                       ^^^^^^ [1]: number
   60: class I<T: ?string = *> extends A<T> {}
                   ^^^^^^ [2]: string

Error: classes.js:62
 62: var i_number: I<number> = new I(123); // Error number ~> ?string
                                     ^^^ Cannot call `I` with `123` bound to `p` because number [1] is incompatible with string [2].
  References:
   62: var i_number: I<number> = new I(123); // Error number ~> ?string
                                       ^^^ [1]: number
   60: class I<T: ?string = *> extends A<T> {}
                   ^^^^^^ [2]: string


Found 24 errors
