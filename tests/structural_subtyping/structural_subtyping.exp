Error: builtin.js:11
 11: var lengthTest3: IHasLength = 123; // number doesn't have length
                                   ^^^ number. This type is incompatible with
 11: var lengthTest3: IHasLength = 123; // number doesn't have length
                      ^^^^^^^^^^ IHasLength
  Property `length` is incompatible:
     11: var lengthTest3: IHasLength = 123; // number doesn't have length
                          ^^^^^^^^^^ property `length` of `IHasLength`. Property not found in
     11: var lengthTest3: IHasLength = 123; // number doesn't have length
                                       ^^^ number

Error: builtin.js:12
 12: var lengthTest4: IHasLength = true; // bool doesn't have length
                                   ^^^^ boolean. This type is incompatible with
 12: var lengthTest4: IHasLength = true; // bool doesn't have length
                      ^^^^^^^^^^ IHasLength
  Property `length` is incompatible:
     12: var lengthTest4: IHasLength = true; // bool doesn't have length
                          ^^^^^^^^^^ property `length` of `IHasLength`. Property not found in
     12: var lengthTest4: IHasLength = true; // bool doesn't have length
                                       ^^^^ boolean

Error: class.js:22
 22: var testInstance2: IHasXNumber = new ClassWithXString(); // Error wrong type
                                      ^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `new ClassWithXString()` to `testInstance2` because in property `x`, string [1] is incompatible with number [2].
  References:
    6:   x: string;
            ^^^^^^ [1]: string
   14:   x: number;
            ^^^^^^ [2]: number

Error: class.js:23
 23: var testInstance3: IHasYString = new ClassWithXString(); // Error missing prop
                                      ^^^^^^^^^^^^^^^^^^^^^^ ClassWithXString. This type is incompatible with
 23: var testInstance3: IHasYString = new ClassWithXString(); // Error missing prop
                        ^^^^^^^^^^^ IHasYString
  Property `y` is incompatible:
     23: var testInstance3: IHasYString = new ClassWithXString(); // Error missing prop
                            ^^^^^^^^^^^ property `y` of `IHasYString`. Property not found in
     23: var testInstance3: IHasYString = new ClassWithXString(); // Error missing prop
                                          ^^^^^^^^^^^^^^^^^^^^^^ ClassWithXString

Error: obj.js:10
 10: var propTest2: IHasXString = { x: 123 }; // Error string != number
                                       ^^^ Cannot assign object literal to `propTest2` because in property `x`, number [1] is incompatible with string [2].
  References:
   10: var propTest2: IHasXString = { x: 123 }; // Error string != number
                                         ^^^ [1]: number
    6:   x: string;
            ^^^^^^ [2]: string

Error: obj.js:11
 11: var propTest3: IHasXString = {}; // Property not found
                                  ^^ object literal. This type is incompatible with
 11: var propTest3: IHasXString = {}; // Property not found
                    ^^^^^^^^^^^ IHasXString
  Property `x` is incompatible:
     11: var propTest3: IHasXString = {}; // Property not found
                        ^^^^^^^^^^^ property `x` of `IHasXString`. Property not found in
     11: var propTest3: IHasXString = {}; // Property not found
                                      ^^ object literal

Error: obj.js:19
 19:   (y: IHasXString); // error: string != number
        ^ Cannot cast `y` to `IHasXString` because in property `x`, number [1] is incompatible with string [2].
  References:
   18: function propTest6(y: {[key: string]: number}) {
                                             ^^^^^^ [1]: number
    6:   x: string;
            ^^^^^^ [2]: string

Error: optional.js:10
 10: var test2: HasOptional = {}; // Error: missing property a
                              ^^ object literal. This type is incompatible with
 10: var test2: HasOptional = {}; // Error: missing property a
                ^^^^^^^^^^^ HasOptional
  Property `a` is incompatible:
     10: var test2: HasOptional = {}; // Error: missing property a
                    ^^^^^^^^^^^ property `a` of `HasOptional`. Property not found in
     10: var test2: HasOptional = {}; // Error: missing property a
                                  ^^ object literal

Error: optional.js:12
 12: var test3: HasOptional = { a: "hello", b: true }; // Error: boolean ~> number
                                               ^^^^ Cannot assign object literal to `test3` because in property `b`, boolean [1] is incompatible with number [2].
  References:
   12: var test3: HasOptional = { a: "hello", b: true }; // Error: boolean ~> number
                                                 ^^^^ [1]: boolean
    5:   b?: number,
             ^^^^^^ [2]: number


Found 9 errors
