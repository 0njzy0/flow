Error ------------------------------------------------------------------------------------------------- FormData.js:5:14

Cannot call `FormData` with empty string bound to `form` because string [1] is incompatible with `HTMLFormElement` [2].


Error ------------------------------------------------------------------------------------------------- FormData.js:6:14

Cannot call `FormData` with `document.createElement(...)` bound to `form` because `HTMLInputElement` [1] is incompatible
with `HTMLFormElement` [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:14:19

Cannot assign `a.get(...)` to `d` because:
 - `File` [1] is incompatible with string [2].
 - null or undefined [3] is incompatible with string [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:15:17

Cannot assign `a.get(...)` to `e` because:
 - null or undefined [1] is incompatible with `Blob` [2].
 - string [3] is incompatible with `Blob` [2].


Error ------------------------------------------------------------------------------------------------- FormData.js:17:7

Cannot call `a.get` with `2` bound to `name` because number [1] is incompatible with string [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:21:43

Cannot assign `a.getAll(...)` to `a2` because in type argument `T`, string [1] is incompatible with number [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:22:41

Cannot assign `a.getAll(...)` to `a3` because in type argument `T`, `File` [1] is incompatible with `Blob` [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:23:10

Cannot call `a.getAll` with `23` bound to `name` because number [1] is incompatible with string [2].


Error: FormData.js:27
 27: a.set('foo', {}); // incorrect
     ^^^^^^^^^^^^^^^^ call of method `set`. Function cannot be called on any member of intersection type
 27: a.set('foo', {}); // incorrect
     ^^^^^ intersection
  Member 2:
  329:     set(name: string, value: Blob, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:329
  Error:
   27: a.set('foo', {}); // incorrect
                    ^^ object literal. This type is incompatible with the expected param type of
  329:     set(name: string, value: Blob, filename?: string): void;
                                    ^^^^ Blob. See lib: <BUILTINS>/bom.js:329
  Member 3:
  330:     set(name: string, value: File, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:330
  Error:
   27: a.set('foo', {}); // incorrect
                    ^^ object literal. This type is incompatible with the expected param type of
  330:     set(name: string, value: File, filename?: string): void;
                                    ^^^^ File. See lib: <BUILTINS>/bom.js:330

Error: FormData.js:28
 28: a.set(2, 'bar'); // incorrect
     ^^^^^^^^^^^^^^^ call of method `set`. Function cannot be called on any member of intersection type
 28: a.set(2, 'bar'); // incorrect
     ^^^^^ intersection
  Member 1:
  328:     set(name: string, value: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:328
  Error:
   28: a.set(2, 'bar'); // incorrect
             ^ number. This type is incompatible with the expected param type of
  328:     set(name: string, value: string): void;
                     ^^^^^^ string. See lib: <BUILTINS>/bom.js:328
  Member 2:
  329:     set(name: string, value: Blob, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:329
  Error:
   28: a.set(2, 'bar'); // incorrect
             ^ number. This type is incompatible with the expected param type of
  329:     set(name: string, value: Blob, filename?: string): void;
                     ^^^^^^ string. See lib: <BUILTINS>/bom.js:329
  Member 3:
  330:     set(name: string, value: File, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:330
  Error:
   28: a.set(2, 'bar'); // incorrect
             ^ number. This type is incompatible with the expected param type of
  330:     set(name: string, value: File, filename?: string): void;
                     ^^^^^^ string. See lib: <BUILTINS>/bom.js:330

Error: FormData.js:29
 29: a.set('foo', 'bar', 'baz'); // incorrect
     ^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `set`. Function cannot be called on any member of intersection type
 29: a.set('foo', 'bar', 'baz'); // incorrect
     ^^^^^ intersection
  Member 2:
  329:     set(name: string, value: Blob, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:329
  Error:
   29: a.set('foo', 'bar', 'baz'); // incorrect
                    ^^^^^ string. This type is incompatible with the expected param type of
  329:     set(name: string, value: Blob, filename?: string): void;
                                    ^^^^ Blob. See lib: <BUILTINS>/bom.js:329
  Member 3:
  330:     set(name: string, value: File, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:330
  Error:
   29: a.set('foo', 'bar', 'baz'); // incorrect
                    ^^^^^ string. This type is incompatible with the expected param type of
  330:     set(name: string, value: File, filename?: string): void;
                                    ^^^^ File. See lib: <BUILTINS>/bom.js:330

Error: FormData.js:32
 32: a.set('bar', new File([], 'q'), 2) // incorrect
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `set`. Function cannot be called on any member of intersection type
 32: a.set('bar', new File([], 'q'), 2) // incorrect
     ^^^^^ intersection
  Member 2:
  329:     set(name: string, value: Blob, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:329
  Error:
   32: a.set('bar', new File([], 'q'), 2) // incorrect
                                       ^ number. This type is incompatible with the expected param type of
  329:     set(name: string, value: Blob, filename?: string): void;
                                                     ^^^^^^ string. See lib: <BUILTINS>/bom.js:329
  Member 3:
  330:     set(name: string, value: File, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:330
  Error:
   32: a.set('bar', new File([], 'q'), 2) // incorrect
                                       ^ number. This type is incompatible with the expected param type of
  330:     set(name: string, value: File, filename?: string): void;
                                                     ^^^^^^ string. See lib: <BUILTINS>/bom.js:330

Error ------------------------------------------------------------------------------------------------ FormData.js:35:24

Cannot call `a.set` with `2` bound to `filename` because number [1] is incompatible with string [2].


Error: FormData.js:39
 39: a.append('foo', {}); // incorrect
     ^^^^^^^^^^^^^^^^^^^ call of method `append`. Function cannot be called on any member of intersection type
 39: a.append('foo', {}); // incorrect
     ^^^^^^^^ intersection
  Member 2:
  333:     append(name: string, value: Blob, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:333
  Error:
   39: a.append('foo', {}); // incorrect
                       ^^ object literal. This type is incompatible with the expected param type of
  333:     append(name: string, value: Blob, filename?: string): void;
                                       ^^^^ Blob. See lib: <BUILTINS>/bom.js:333
  Member 3:
  334:     append(name: string, value: File, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:334
  Error:
   39: a.append('foo', {}); // incorrect
                       ^^ object literal. This type is incompatible with the expected param type of
  334:     append(name: string, value: File, filename?: string): void;
                                       ^^^^ File. See lib: <BUILTINS>/bom.js:334

Error: FormData.js:40
 40: a.append(2, 'bar'); // incorrect
     ^^^^^^^^^^^^^^^^^^ call of method `append`. Function cannot be called on any member of intersection type
 40: a.append(2, 'bar'); // incorrect
     ^^^^^^^^ intersection
  Member 1:
  332:     append(name: string, value: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:332
  Error:
   40: a.append(2, 'bar'); // incorrect
                ^ number. This type is incompatible with the expected param type of
  332:     append(name: string, value: string): void;
                        ^^^^^^ string. See lib: <BUILTINS>/bom.js:332
  Member 2:
  333:     append(name: string, value: Blob, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:333
  Error:
   40: a.append(2, 'bar'); // incorrect
                ^ number. This type is incompatible with the expected param type of
  333:     append(name: string, value: Blob, filename?: string): void;
                        ^^^^^^ string. See lib: <BUILTINS>/bom.js:333
  Member 3:
  334:     append(name: string, value: File, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:334
  Error:
   40: a.append(2, 'bar'); // incorrect
                ^ number. This type is incompatible with the expected param type of
  334:     append(name: string, value: File, filename?: string): void;
                        ^^^^^^ string. See lib: <BUILTINS>/bom.js:334

Error: FormData.js:41
 41: a.append('foo', 'bar', 'baz'); // incorrect
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `append`. Function cannot be called on any member of intersection type
 41: a.append('foo', 'bar', 'baz'); // incorrect
     ^^^^^^^^ intersection
  Member 2:
  333:     append(name: string, value: Blob, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:333
  Error:
   41: a.append('foo', 'bar', 'baz'); // incorrect
                       ^^^^^ string. This type is incompatible with the expected param type of
  333:     append(name: string, value: Blob, filename?: string): void;
                                       ^^^^ Blob. See lib: <BUILTINS>/bom.js:333
  Member 3:
  334:     append(name: string, value: File, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:334
  Error:
   41: a.append('foo', 'bar', 'baz'); // incorrect
                       ^^^^^ string. This type is incompatible with the expected param type of
  334:     append(name: string, value: File, filename?: string): void;
                                       ^^^^ File. See lib: <BUILTINS>/bom.js:334

Error: FormData.js:45
 45: a.append('bar', new File([], 'q'), 2) // incorrect
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `append`. Function cannot be called on any member of intersection type
 45: a.append('bar', new File([], 'q'), 2) // incorrect
     ^^^^^^^^ intersection
  Member 2:
  333:     append(name: string, value: Blob, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:333
  Error:
   45: a.append('bar', new File([], 'q'), 2) // incorrect
                                          ^ number. This type is incompatible with the expected param type of
  333:     append(name: string, value: Blob, filename?: string): void;
                                                        ^^^^^^ string. See lib: <BUILTINS>/bom.js:333
  Member 3:
  334:     append(name: string, value: File, filename?: string): void;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:334
  Error:
   45: a.append('bar', new File([], 'q'), 2) // incorrect
                                          ^ number. This type is incompatible with the expected param type of
  334:     append(name: string, value: File, filename?: string): void;
                                                        ^^^^^^ string. See lib: <BUILTINS>/bom.js:334

Error ------------------------------------------------------------------------------------------------ FormData.js:48:27

Cannot call `a.append` with `2` bound to `filename` because number [1] is incompatible with string [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:52:10

Cannot call `a.delete` with `3` bound to `name` because number [1] is incompatible with string [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:56:23

Cannot assign `x` to `x` because string [1] is incompatible with number [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:64:52

Cannot assign for-of element to variable because in index 1, `File` [1] is incompatible with `Blob` [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:65:11

Cannot assign element 0 to `x` because string [1] is incompatible with number [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:65:14

Cannot assign element 1 to `y` because `File` [1] is incompatible with string [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:65:38

Cannot assign for-of element to variable because:
 - in index 0, string [1] is incompatible with number [2].
 - in index 1, `File` [3] is incompatible with string [4].


Error ------------------------------------------------------------------------------------------------ FormData.js:66:14

Cannot assign element 1 to `y` because:
 - `File` [1] is incompatible with number [2].
 - string [1] is incompatible with number [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:66:38

Cannot assign for-of element to variable because:
 - in index 1, `File` [1] is incompatible with number [2].
 - in index 1, string [3] is incompatible with number [2].
 - in index 1, string [1] is incompatible with number [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:67:11

Cannot assign element 0 to `x` because string [1] is incompatible with number [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:67:14

Cannot assign element 1 to `y` because:
 - `File` [1] is incompatible with number [2].
 - string [1] is incompatible with number [2].


Error ------------------------------------------------------------------------------------------------ FormData.js:67:38

Cannot assign for-of element to variable because:
 - in index 0, string [1] is incompatible with number [2].
 - in index 1, `File` [3] is incompatible with number [4].
 - in index 1, string [5] is incompatible with number [4].
 - in index 1, string [3] is incompatible with number [4].


Error ----------------------------------------------------------------------------------------- MutationObserver.js:10:5

Cannot call `MutationObserver` because function [1] requires another argument.


Error ---------------------------------------------------------------------------------------- MutationObserver.js:11:22

Cannot call `MutationObserver` with `42` bound to `callback` because number [1] is incompatible with function type [2].


Error ---------------------------------------------------------------------------------------- MutationObserver.js:12:26

Cannot call `MutationObserver` with function bound to `callback` because in the first argument, number [1] is
incompatible with array type [2].


Error: MutationObserver.js:18
 18: o.observe(); // incorrect
     ^^^^^^^^^^^ call of method `observe`. Too few arguments passed to
369:     observe(target: Node, options: MutationObserverInit): void;
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:369

Error ----------------------------------------------------------------------------------------- MutationObserver.js:18:3

Cannot call `o.observe` because function [1] requires another argument.


Error: MutationObserver.js:19
 19: o.observe('invalid'); // incorrect
     ^^^^^^^^^^^^^^^^^^^^ call of method `observe`. Too few arguments passed to
369:     observe(target: Node, options: MutationObserverInit): void;
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:369

Error ----------------------------------------------------------------------------------------- MutationObserver.js:19:3

Cannot call `o.observe` because function [1] requires another argument.


Error ---------------------------------------------------------------------------------------- MutationObserver.js:19:11

Cannot call `o.observe` with `'invalid'` bound to `target` because string [1] is incompatible with `Node` [2].


Error: MutationObserver.js:20
 20: o.observe(div); // incorrect
     ^^^^^^^^^^^^^^ call of method `observe`. Too few arguments passed to
369:     observe(target: Node, options: MutationObserverInit): void;
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function type. See lib: <BUILTINS>/bom.js:369

Error ----------------------------------------------------------------------------------------- MutationObserver.js:20:3

Cannot call `o.observe` because function [1] requires another argument.


Error: MutationObserver.js:21
 21: o.observe(div, {}); // incorrect
                    ^^ object literal. This type is incompatible with the expected param type of
360: declare type MutationObserverInit = MutationObserverInitRequired & {
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ union: object type(s). See lib: <BUILTINS>/bom.js:360
  Member 1:
  356:     | { childList: true }
             ^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:356
  Error:
   21: o.observe(div, {}); // incorrect
                      ^^ object literal. This type is incompatible with
  356:     | { childList: true }
             ^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:356
    Property `childList` is incompatible:
      356:     | { childList: true }
                 ^^^^^^^^^^^^^^^^^^^ property `childList`. Property not found in. See lib: <BUILTINS>/bom.js:356
       21: o.observe(div, {}); // incorrect
                          ^^ object literal
  Member 2:
  357:     | { attributes: true }
             ^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:357
  Error:
   21: o.observe(div, {}); // incorrect
                      ^^ object literal. This type is incompatible with
  357:     | { attributes: true }
             ^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:357
    Property `attributes` is incompatible:
      357:     | { attributes: true }
                 ^^^^^^^^^^^^^^^^^^^^ property `attributes`. Property not found in. See lib: <BUILTINS>/bom.js:357
       21: o.observe(div, {}); // incorrect
                          ^^ object literal
  Member 3:
  358:     | { characterData: true }
             ^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:358
  Error:
   21: o.observe(div, {}); // incorrect
                      ^^ object literal. This type is incompatible with
  358:     | { characterData: true }
             ^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:358
    Property `characterData` is incompatible:
      358:     | { characterData: true }
                 ^^^^^^^^^^^^^^^^^^^^^^^ property `characterData`. Property not found in. See lib: <BUILTINS>/bom.js:358
       21: o.observe(div, {}); // incorrect
                          ^^ object literal

Error: MutationObserver.js:22
 22: o.observe(div, { subtree: true }); // incorrect
                    ^^^^^^^^^^^^^^^^^ object literal. This type is incompatible with the expected param type of
360: declare type MutationObserverInit = MutationObserverInitRequired & {
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ union: object type(s). See lib: <BUILTINS>/bom.js:360
  Member 1:
  356:     | { childList: true }
             ^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:356
  Error:
   22: o.observe(div, { subtree: true }); // incorrect
                      ^^^^^^^^^^^^^^^^^ object literal. This type is incompatible with
  356:     | { childList: true }
             ^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:356
    Property `childList` is incompatible:
      356:     | { childList: true }
                 ^^^^^^^^^^^^^^^^^^^ property `childList`. Property not found in. See lib: <BUILTINS>/bom.js:356
       22: o.observe(div, { subtree: true }); // incorrect
                          ^^^^^^^^^^^^^^^^^ object literal
  Member 2:
  357:     | { attributes: true }
             ^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:357
  Error:
   22: o.observe(div, { subtree: true }); // incorrect
                      ^^^^^^^^^^^^^^^^^ object literal. This type is incompatible with
  357:     | { attributes: true }
             ^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:357
    Property `attributes` is incompatible:
      357:     | { attributes: true }
                 ^^^^^^^^^^^^^^^^^^^^ property `attributes`. Property not found in. See lib: <BUILTINS>/bom.js:357
       22: o.observe(div, { subtree: true }); // incorrect
                          ^^^^^^^^^^^^^^^^^ object literal
  Member 3:
  358:     | { characterData: true }
             ^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:358
  Error:
   22: o.observe(div, { subtree: true }); // incorrect
                      ^^^^^^^^^^^^^^^^^ object literal. This type is incompatible with
  358:     | { characterData: true }
             ^^^^^^^^^^^^^^^^^^^^^^^ object type. See lib: <BUILTINS>/bom.js:358
    Property `characterData` is incompatible:
      358:     | { characterData: true }
                 ^^^^^^^^^^^^^^^^^^^^^^^ property `characterData`. Property not found in. See lib: <BUILTINS>/bom.js:358
       22: o.observe(div, { subtree: true }); // incorrect
                          ^^^^^^^^^^^^^^^^^ object literal

Error ---------------------------------------------------------------------------------------- MutationObserver.js:23:53

Cannot call `o.observe` with object literal bound to `options` because in property `attributeFilter`, boolean [1] is
incompatible with array type [2].



Found 52 errors
