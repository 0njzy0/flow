Error: es6modules.js:10
 10: var a2: string = DefaultA.numberValue1; // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^ Cannot assign `DefaultA.numberValue1` to `a2` because number [1] is incompatible with string [2].
  References:
    6: exports.numberValue1 = 42;
                              ^^ [1]: number. See: ProvidesModuleA.js:6
   10: var a2: string = DefaultA.numberValue1; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:15
 15: var b2: string = DefaultB.numberValue; // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^ Cannot assign `DefaultB.numberValue` to `b2` because number [1] is incompatible with string [2].
  References:
    3: exports.numberValue = 42;
                             ^^ [1]: number. See: B.js:3
   15: var b2: string = DefaultB.numberValue; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:18
 18: import DefaultC from "C"; // Error: No such module
                          ^^^ C. Required module not found

Error: es6modules.js:21
 21: import DefaultD from "./D"; // Error: No such module
                          ^^^^^ ./D. Required module not found

Error: es6modules.js:27
 27: import {doesntExist1} from "CommonJS_Clobbering_Lit"; // Error: Not an exported binding
             ^^^^^^^^^^^^ Named import from module `CommonJS_Clobbering_Lit`. This module has no named export called `doesntExist1`.

Error: es6modules.js:31
 31: var c2: string = numberValue1; // Error: number ~> string
                      ^^^^^^^^^^^^ Cannot assign `numberValue1` to `c2` because number [1] is incompatible with string [2].
  References:
    7:   numberValue1: 1,
                       ^ [1]: number. See: CommonJS_Clobbering_Lit.js:7
   31: var c2: string = numberValue1; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:35
 35: var d2: string = numVal1; // Error: number ~> string
                      ^^^^^^^ Cannot assign `numVal1` to `d2` because number [1] is incompatible with string [2].
  References:
    8:   numberValue2: 2,
                       ^ [1]: number. See: CommonJS_Clobbering_Lit.js:8
   35: var d2: string = numVal1; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:39
 39: var e2: string = CJS_Clobb_Lit.numberValue3; // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `CJS_Clobb_Lit.numberValue3` to `e2` because number [1] is incompatible with string [2].
  References:
    9:   numberValue3: 3,
                       ^ [1]: number. See: CommonJS_Clobbering_Lit.js:9
   39: var e2: string = CJS_Clobb_Lit.numberValue3; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:40
 40: CJS_Clobb_Lit.doesntExist; // Error: doesntExist isn't a property
                   ^^^^^^^^^^^ Cannot get `CJS_Clobb_Lit.doesntExist` because property `doesntExist` is missing in object literal [1].
  References:
                        v
    6: module.exports = {
    7:   numberValue1: 1,
    8:   numberValue2: 2,
  ...:
   12: };
       ^ [1]: object literal. See: CommonJS_Clobbering_Lit.js:6

Error: es6modules.js:45
 45: CJS_Clobb_Lit_NS.default.default; // Error: No 'default' property on the exported obj
                              ^^^^^^^ Cannot get `CJS_Clobb_Lit_NS.default.default` because property `default` is missing in object literal [1].
  References:
                        v
    6: module.exports = {
    7:   numberValue1: 1,
    8:   numberValue2: 2,
  ...:
   12: };
       ^ [1]: object literal. See: CommonJS_Clobbering_Lit.js:6

Error: es6modules.js:46
 46: var f3: string = CJS_Clobb_Lit_NS.numberValue4; // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `CJS_Clobb_Lit_NS.numberValue4` to `f3` because number [1] is incompatible with string [2].
  References:
   10:   numberValue4: 4,
                       ^ [1]: number. See: CommonJS_Clobbering_Lit.js:10
   46: var f3: string = CJS_Clobb_Lit_NS.numberValue4; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:47
 47: var f4: string = CJS_Clobb_Lit_NS.default.numberValue5; // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `CJS_Clobb_Lit_NS.default.numberValue5` to `f4` because number [1] is incompatible with string [2].
  References:
   11:   numberValue5: 5
                       ^ [1]: number. See: CommonJS_Clobbering_Lit.js:11
   47: var f4: string = CJS_Clobb_Lit_NS.default.numberValue5; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:53
 53: import {doesntExist2} from "CommonJS_Clobbering_Class"; // Error: Not an exported binding
             ^^^^^^^^^^^^ Named import from module `CommonJS_Clobbering_Class`. This module only has a default export. Did you mean `import doesntExist2 from ...`?

Error: es6modules.js:59
 59: import {staticNumber1, baseProp, childProp} from "CommonJS_Clobbering_Class"; // Error
             ^^^^^^^^^^^^^ Named import from module `CommonJS_Clobbering_Class`. This module only has a default export. Did you mean `import staticNumber1 from ...`?

Error: es6modules.js:59
 59: import {staticNumber1, baseProp, childProp} from "CommonJS_Clobbering_Class"; // Error
                            ^^^^^^^^ Named import from module `CommonJS_Clobbering_Class`. This module only has a default export. Did you mean `import baseProp from ...`?

Error: es6modules.js:59
 59: import {staticNumber1, baseProp, childProp} from "CommonJS_Clobbering_Class"; // Error
                                      ^^^^^^^^^ Named import from module `CommonJS_Clobbering_Class`. This module only has a default export. Did you mean `import childProp from ...`?

Error: es6modules.js:63
 63: new CJS_Clobb_Class().doesntExist; // Error: Class has no `doesntExist` property
                           ^^^^^^^^^^^ Cannot get `new CJS_Clobb_Class().doesntExist` because property `doesntExist` is missing in `Test` [1].
  References:
   63: new CJS_Clobb_Class().doesntExist; // Error: Class has no `doesntExist` property
       ^^^^^^^^^^^^^^^^^^^^^ [1]: `Test`

Error: es6modules.js:65
 65: var h2: string = CJS_Clobb_Class.staticNumber2(); // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `CJS_Clobb_Class.staticNumber2()` to `h2` because number [1] is incompatible with string [2].
  References:
   14:   static staticNumber2():number { return 2; }
                                ^^^^^^ [1]: number. See: CommonJS_Clobbering_Class.js:14
   65: var h2: string = CJS_Clobb_Class.staticNumber2(); // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:67
 67: var h4: string = new CJS_Clobb_Class().instNumber1(); // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `new CJS_Clobb_Class().instNumber1()` to `h4` because number [1] is incompatible with string [2].
  References:
   17:   instNumber1():number { return 1; }
                       ^^^^^^ [1]: number. See: CommonJS_Clobbering_Class.js:17
   67: var h4: string = new CJS_Clobb_Class().instNumber1(); // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:70
 70: new CJS_Clobb_Class_NS(); // Error: Namespace object isn't constructable
         ^^^^^^^^^^^^^^^^^^ Cannot call `CJS_Clobb_Class_NS` because module `CommonJS_Clobbering_Class` [1] is not a function.
  References:
   69: import * as CJS_Clobb_Class_NS from "CommonJS_Clobbering_Class";
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: module `CommonJS_Clobbering_Class`

Error: es6modules.js:71
 71: var i1: number = CJS_Clobb_Class_NS.staticNumber3(); // Error: Class statics not copied to Namespace object
                                         ^^^^^^^^^^^^^ Cannot call `CJS_Clobb_Class_NS.staticNumber3` because property `staticNumber3` is missing in module `CommonJS_Clobbering_Class` [1].
  References:
   69: import * as CJS_Clobb_Class_NS from "CommonJS_Clobbering_Class";
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: module `CommonJS_Clobbering_Class`

Error: es6modules.js:73
 73: var i3: string = new CJS_Clobb_Class_NS.default().instNumber2(); // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `new CJS_Clobb_Class_NS.default().instNumber2()` to `i3` because number [1] is incompatible with string [2].
  References:
   18:   instNumber2():number { return 2; }
                       ^^^^^^ [1]: number. See: CommonJS_Clobbering_Class.js:18
   73: var i3: string = new CJS_Clobb_Class_NS.default().instNumber2(); // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:79
 79: import {doesntExist3} from "CommonJS_Named"; // Error: Not an exported binding
             ^^^^^^^^^^^^ Named import from module `CommonJS_Named`. This module has no named export called `doesntExist3`.

Error: es6modules.js:83
 83: var j2: string = numberValue2; // Error: number ~> string
                      ^^^^^^^^^^^^ Cannot assign `numberValue2` to `j2` because number [1] is incompatible with string [2].
  References:
    7: exports.numberValue2 = 2;
                              ^ [1]: number. See: CommonJS_Named.js:7
   83: var j2: string = numberValue2; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:87
 87: var k2: string = numVal3; // Error: number ~> string
                      ^^^^^^^ Cannot assign `numVal3` to `k2` because number [1] is incompatible with string [2].
  References:
    8: exports.numberValue3 = 3;
                              ^ [1]: number. See: CommonJS_Named.js:8
   87: var k2: string = numVal3; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:91
 91: var l2: string = CJS_Named.numberValue1; // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `CJS_Named.numberValue1` to `l2` because number [1] is incompatible with string [2].
  References:
    6: exports.numberValue1 = 1;
                              ^ [1]: number. See: CommonJS_Named.js:6
   91: var l2: string = CJS_Named.numberValue1; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:92
 92: CJS_Named.doesntExist; // Error: doesntExist isn't a property
               ^^^^^^^^^^^ Cannot get `CJS_Named.doesntExist` because property `doesntExist` is missing in module `CommonJS_Named` [1].
  References:
   89: import * as CJS_Named from "CommonJS_Named";
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: module `CommonJS_Named`

Error: es6modules.js:96
 96: var m2: string = CJS_Named_NS.default.numberValue4; // Error: CommonJS_Named has no default export
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `CJS_Named_NS.default.numberValue4` to `m2` because number [1] is incompatible with string [2].
  References:
    9: exports.numberValue4 = 4;
                              ^ [1]: number. See: CommonJS_Named.js:9
   96: var m2: string = CJS_Named_NS.default.numberValue4; // Error: CommonJS_Named has no default export
               ^^^^^^ [2]: string

Error: es6modules.js:97
 97: var m3: string = CJS_Named_NS.numberValue4; // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `CJS_Named_NS.numberValue4` to `m3` because number [1] is incompatible with string [2].
  References:
    9: exports.numberValue4 = 4;
                              ^ [1]: number. See: CommonJS_Named.js:9
   97: var m3: string = CJS_Named_NS.numberValue4; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:103
103: import {doesntExist4} from "ES6_Default_AnonFunction1"; // Error: Not an exported binding
             ^^^^^^^^^^^^ Named import from module `ES6_Default_AnonFunction1`. This module only has a default export. Did you mean `import doesntExist4 from ...`?

Error: es6modules.js:107
107: var n2: string = ES6_Def_AnonFunc1(); // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^ Cannot assign `ES6_Def_AnonFunc1()` to `n2` because number [1] is incompatible with string [2].
  References:
    6: declare export default () => number;
                                    ^^^^^^ [1]: number. See: ES6_Default_AnonFunction1.js:6
  107: var n2: string = ES6_Def_AnonFunc1(); // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:111
111: var o2: string = ES6_Def_NamedFunc1(); // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^ Cannot assign `ES6_Def_NamedFunc1()` to `o2` because number [1] is incompatible with string [2].
  References:
    6: declare export default function foo():number;
                                             ^^^^^^ [1]: number. See: ES6_Default_NamedFunction1.js:6
  111: var o2: string = ES6_Def_NamedFunc1(); // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:119
119: var q2: string = new ES6_Def_NamedClass1().givesANum(); // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `new ES6_Def_NamedClass1().givesANum()` to `q2` because number [1] is incompatible with string [2].
  References:
    6: declare export default class FooImpl { givesANum(): number; };
                                                           ^^^^^^ [1]: number. See: ES6_Default_NamedClass1.js:6
  119: var q2: string = new ES6_Def_NamedClass1().givesANum(); // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:125
125: import doesntExist5 from "ES6_Named1"; // Error: Not an exported binding
            ^^^^^^^^^^^^ Default import from `ES6_Named1`. This module has no default export.

Error: es6modules.js:129
129: var r2: string = specifierNumber1_1; // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^ Cannot assign `specifierNumber1_1` to `r2` because number [1] is incompatible with string [2].
  References:
    6: var specifierNumber1 = 1;
                              ^ [1]: number. See: ES6_Named1.js:6
  129: var r2: string = specifierNumber1_1; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:133
133: var s2: string = specifierNumber2Renamed; // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `specifierNumber2Renamed` to `s2` because number [1] is incompatible with string [2].
  References:
    7: var specifierNumber2 = 2;
                              ^ [1]: number. See: ES6_Named1.js:7
  133: var s2: string = specifierNumber2Renamed; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:137
137: var t2: string = specifierNumber3Renamed; // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `specifierNumber3Renamed` to `t2` because number [1] is incompatible with string [2].
  References:
    8: var specifierNumber3 = 3;
                              ^ [1]: number. See: ES6_Named1.js:8
  137: var t2: string = specifierNumber3Renamed; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:142
142: var u3: string = groupedSpecifierNumber1; // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `groupedSpecifierNumber1` to `u3` because number [1] is incompatible with string [2].
  References:
    9: var groupedSpecifierNumber1 = 1;
                                     ^ [1]: number. See: ES6_Named1.js:9
  142: var u3: string = groupedSpecifierNumber1; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:143
143: var u4: string = groupedSpecifierNumber2; // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `groupedSpecifierNumber2` to `u4` because number [1] is incompatible with string [2].
  References:
   10: var groupedSpecifierNumber2 = 2;
                                     ^ [1]: number. See: ES6_Named1.js:10
  143: var u4: string = groupedSpecifierNumber2; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:147
147: var v2: string = givesANumber(); // Error: number ~> string
                      ^^^^^^^^^^^^^^ Cannot assign `givesANumber()` to `v2` because number [1] is incompatible with string [2].
  References:
   17: declare export function givesANumber(): number;
                                               ^^^^^^ [1]: number. See: ES6_Named1.js:17
  147: var v2: string = givesANumber(); // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:151
151: var w2: string = new NumberGenerator().givesANumber(); // Error: number ~> string
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `new NumberGenerator().givesANumber()` to `w2` because number [1] is incompatible with string [2].
  References:
   18: declare export class NumberGenerator { givesANumber(): number; };
                                                              ^^^^^^ [1]: number. See: ES6_Named1.js:18
  151: var w2: string = new NumberGenerator().givesANumber(); // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:156
156: var x3: string = varDeclNumber1; // Error: number ~> string
                      ^^^^^^^^^^^^^^ Cannot assign `varDeclNumber1` to `x3` because number [1] is incompatible with string [2].
  References:
   20: declare export var varDeclNumber1: number;
                                          ^^^^^^ [1]: number. See: ES6_Named1.js:20
  156: var x3: string = varDeclNumber1; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:157
157: var x4: string = varDeclNumber2; // Error: number ~> string
                      ^^^^^^^^^^^^^^ Cannot assign `varDeclNumber2` to `x4` because number [1] is incompatible with string [2].
  References:
   21: declare export var varDeclNumber2: number;
                                          ^^^^^^ [1]: number. See: ES6_Named1.js:21
  157: var x4: string = varDeclNumber2; // Error: number ~> string
               ^^^^^^ [2]: string

Error: es6modules.js:169
169: var aa2: string = numberValue4; // Error: number ~> string
                       ^^^^^^^^^^^^ Cannot assign `numberValue4` to `aa2` because number [1] is incompatible with string [2].
  References:
    6: declare export var numberValue1: number;
                                        ^^^^^^ [1]: number. See: ES6_ExportFrom_Source1.js:6
  169: var aa2: string = numberValue4; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:173
173: var ab2: string = numberValue2_renamed; // Error: number ~> string
                       ^^^^^^^^^^^^^^^^^^^^ Cannot assign `numberValue2_renamed` to `ab2` because number [1] is incompatible with string [2].
  References:
    7: declare export var numberValue2: number;
                                        ^^^^^^ [1]: number. See: ES6_ExportFrom_Source1.js:7
  173: var ab2: string = numberValue2_renamed; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:177
177: var ac2: string = numberValue5; // Error: number ~> string
                       ^^^^^^^^^^^^ Cannot assign `numberValue5` to `ac2` because number [1] is incompatible with string [2].
  References:
    6: declare export var numberValue1: number;
                                        ^^^^^^ [1]: number. See: ES6_ExportAllFrom_Source1.js:6
  177: var ac2: string = numberValue5; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:183
183: require('ES6_Default_AnonFunction2').doesntExist; // Error: 'doesntExist' isn't an export
                                          ^^^^^^^^^^^ Cannot get `require(...).doesntExist` because property `doesntExist` is missing in module `ES6_Default_AnonFunction2` [1].
  References:
  183: require('ES6_Default_AnonFunction2').doesntExist; // Error: 'doesntExist' isn't an export
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: module `ES6_Default_AnonFunction2`

Error: es6modules.js:187
187: var ad2: string = ES6_Def_AnonFunc2(); // Error: number ~> string
                       ^^^^^^^^^^^^^^^^^^^ Cannot assign `ES6_Def_AnonFunc2()` to `ad2` because number [1] is incompatible with string [2].
  References:
    6: declare export default () =>number;
                                   ^^^^^^ [1]: number. See: ES6_Default_AnonFunction2.js:6
  187: var ad2: string = ES6_Def_AnonFunc2(); // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:191
191: var ae2: string = ES6_Def_NamedFunc2(); // Error: number ~> string
                       ^^^^^^^^^^^^^^^^^^^^ Cannot assign `ES6_Def_NamedFunc2()` to `ae2` because number [1] is incompatible with string [2].
  References:
    6: declare export default function foo():number;
                                             ^^^^^^ [1]: number. See: ES6_Default_NamedFunction2.js:6
  191: var ae2: string = ES6_Def_NamedFunc2(); // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:199
199: var ag2: string = new ES6_Def_NamedClass2().givesANum(); // Error: number ~> string
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `new ES6_Def_NamedClass2().givesANum()` to `ag2` because number [1] is incompatible with string [2].
  References:
    6: declare export default class Foo { givesANum(): number; };
                                                       ^^^^^^ [1]: number. See: ES6_Default_NamedClass2.js:6
  199: var ag2: string = new ES6_Def_NamedClass2().givesANum(); // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:207
207: var ah2: string = specifierNumber4; // Error: number ~> string
                       ^^^^^^^^^^^^^^^^ Cannot assign `specifierNumber4` to `ah2` because number [1] is incompatible with string [2].
  References:
    6: var specifierNumber4 = 1;
                              ^ [1]: number. See: ES6_Named2.js:6
  207: var ah2: string = specifierNumber4; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:211
211: var ai2: string = specifierNumber5Renamed; // Error: number ~> string
                       ^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `specifierNumber5Renamed` to `ai2` because number [1] is incompatible with string [2].
  References:
    7: var specifierNumber5 = 2;
                              ^ [1]: number. See: ES6_Named2.js:7
  211: var ai2: string = specifierNumber5Renamed; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:217
217: var aj3: string = groupedSpecifierNumber3; // Error: number ~> string
                       ^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `groupedSpecifierNumber3` to `aj3` because number [1] is incompatible with string [2].
  References:
    8: var groupedSpecifierNumber3 = 1;
                                     ^ [1]: number. See: ES6_Named2.js:8
  217: var aj3: string = groupedSpecifierNumber3; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:218
218: var aj4: string = groupedSpecifierNumber4; // Error: number ~> string
                       ^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `groupedSpecifierNumber4` to `aj4` because number [1] is incompatible with string [2].
  References:
    9: var groupedSpecifierNumber4 = 2;
                                     ^ [1]: number. See: ES6_Named2.js:9
  218: var aj4: string = groupedSpecifierNumber4; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:222
222: var ak2: string = givesANumber2(); // Error: number ~> string
                       ^^^^^^^^^^^^^^^ Cannot assign `givesANumber2()` to `ak2` because number [1] is incompatible with string [2].
  References:
   15: declare export function givesANumber2(): number;
                                                ^^^^^^ [1]: number. See: ES6_Named2.js:15
  222: var ak2: string = givesANumber2(); // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:226
226: var al2: string = new NumberGenerator2().givesANumber(); // Error: number ~> string
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot assign `new NumberGenerator2().givesANumber()` to `al2` because number [1] is incompatible with string [2].
  References:
   16: declare export class NumberGenerator2 { givesANumber(): number; };
                                                               ^^^^^^ [1]: number. See: ES6_Named2.js:16
  226: var al2: string = new NumberGenerator2().givesANumber(); // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:232
232: var am3: string = varDeclNumber3; // Error: number ~> string
                       ^^^^^^^^^^^^^^ Cannot assign `varDeclNumber3` to `am3` because number [1] is incompatible with string [2].
  References:
   18: declare export var varDeclNumber3: number;
                                          ^^^^^^ [1]: number. See: ES6_Named2.js:18
  232: var am3: string = varDeclNumber3; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:233
233: var am4: string = varDeclNumber4; // Error: number ~> string
                       ^^^^^^^^^^^^^^ Cannot assign `varDeclNumber4` to `am4` because number [1] is incompatible with string [2].
  References:
   19: declare export var varDeclNumber4: number;
                                          ^^^^^^ [1]: number. See: ES6_Named2.js:19
  233: var am4: string = varDeclNumber4; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:245
245: var ap2: string = numberValue6; // Error: number ~> string
                       ^^^^^^^^^^^^ Cannot assign `numberValue6` to `ap2` because number [1] is incompatible with string [2].
  References:
    6: declare export var numberValue1: number;
                                        ^^^^^^ [1]: number. See: ES6_ExportFrom_Source2.js:6
  245: var ap2: string = numberValue6; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:249
249: var aq2: string = numberValue2_renamed2; // Error: number ~> string
                       ^^^^^^^^^^^^^^^^^^^^^ Cannot assign `numberValue2_renamed2` to `aq2` because number [1] is incompatible with string [2].
  References:
    7: declare export var numberValue2: number;
                                        ^^^^^^ [1]: number. See: ES6_ExportFrom_Source2.js:7
  249: var aq2: string = numberValue2_renamed2; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:253
253: var ar2: string = numberValue7; // Error: number ~> string
                       ^^^^^^^^^^^^ Cannot assign `numberValue7` to `ar2` because number [1] is incompatible with string [2].
  References:
    6: declare export var numberValue2: number;
                                        ^^^^^^ [1]: number. See: ES6_ExportAllFrom_Source2.js:6
  253: var ar2: string = numberValue7; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:262
262: var as2: string = defaultNum; // Error: number ~> string
                       ^^^^^^^^^^ Cannot assign `defaultNum` to `as2` because number [1] is incompatible with string [2].
  References:
    3: declare export default number;
                              ^^^^^^ [1]: number. See: ES6_DefaultAndNamed.js:3
  262: var as2: string = defaultNum; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:265
265: var as4: number = namedStr; // Error: string ~> number
                       ^^^^^^^^ Cannot assign `namedStr` to `as4` because string [1] is incompatible with number [2].
  References:
    4: declare export var str: string;
                               ^^^^^^ [1]: string. See: ES6_DefaultAndNamed.js:4
  265: var as4: number = namedStr; // Error: string ~> number
                ^^^^^^ [2]: number

Error: es6modules.js:276
276: import specifierNumber1 from "ES6_Named1"; // Error: Did you mean `import {specifierNumber1} from ...`?
            ^^^^^^^^^^^^^^^^ Default import from `ES6_Named1`. This module has no default export. Did you mean `import {specifierNumber1} from "ES6_Named1"`?

Error: es6modules.js:277
277: import {specifierNumber} from "ES6_Named1"; // Error: Did you mean `specifierNumber1`?
             ^^^^^^^^^^^^^^^ Named import from module `ES6_Named1`. This module has no named export called `specifierNumber`. Did you mean `specifierNumber1`?

Error: es6modules.js:288
288: var at2: string = numberValue8; // Error: number ~> string
                       ^^^^^^^^^^^^ Cannot assign `numberValue8` to `at2` because number [1] is incompatible with string [2].
  References:
    6: declare export var numberValue1: number;
                                        ^^^^^^ [1]: number. See: ES6_ExportAllFrom_Source1.js:6
  288: var at2: string = numberValue8; // Error: number ~> string
                ^^^^^^ [2]: string

Error: es6modules.js:291
291: var at4: string = numberValue9; // Error: number ~> string
                       ^^^^^^^^^^^^ Cannot assign `numberValue9` to `at4` because number [1] is incompatible with string [2].
  References:
    6: declare export var numberValue2: number;
                                        ^^^^^^ [1]: number. See: ES6_ExportAllFrom_Source2.js:6
  291: var at4: string = numberValue9; // Error: number ~> string
                ^^^^^^ [2]: string


Found 67 errors
