Error ----------------------------------------------------------------------------------------------------- test.js:2:19

Cannot assign `new Foo()` to `foo` because object literal is incompatible with number.

Error: test.js:2
  2: var foo: number = new Foo(); // error (returns object literal above)
                       ^^^^^^^^^ Cannot assign `new Foo()` to `foo` because object literal [1] is incompatible with number [2].
  References:
    1: function Foo() { return {}; }
                               ^^ [1]: object literal
    2: var foo: number = new Foo(); // error (returns object literal above)
                ^^^^^^ [2]: number

Error ----------------------------------------------------------------------------------------------------- test.js:5:19

Cannot assign `new Bar()` to `bar` because new object is incompatible with number.

Error: test.js:5
  5: var bar: number = new Bar(); // error (returns new object)
                       ^^^^^^^^^ Cannot assign `new Bar()` to `bar` because new object [1] is incompatible with number [2].
  References:
    5: var bar: number = new Bar(); // error (returns new object)
                         ^^^^^^^^^ [1]: new object
    5: var bar: number = new Bar(); // error (returns new object)
                ^^^^^^ [2]: number

Error ----------------------------------------------------------------------------------------------------- test.js:8:19

Cannot assign `new Qux()` to `qux` because new object is incompatible with number.

Error: test.js:8
  8: var qux: number = new Qux(); // error (returns new object)
                       ^^^^^^^^^ Cannot assign `new Qux()` to `qux` because new object [1] is incompatible with number [2].
  References:
    8: var qux: number = new Qux(); // error (returns new object)
                         ^^^^^^^^^ [1]: new object
    8: var qux: number = new Qux(); // error (returns new object)
                ^^^^^^ [2]: number

Error ----------------------------------------------------------------------------------------------------- test.js:23:2

Cannot cast `new makeUnion()` to object type because property `x` is missing in new object but exists in object type.

Error: test.js:23
 23: (new makeUnion(): {x: string}); // error: `number` returns {}, missing prop x
      ^^^^^^^^^^^^^^^ Cannot cast `new makeUnion()` to object type because property `x` is missing in new object [1] but exists in object type [2].
  References:
   23: (new makeUnion(): {x: string}); // error: `number` returns {}, missing prop x
        ^^^^^^^^^^^^^^^ [1]: new object
   23: (new makeUnion(): {x: string}); // error: `number` returns {}, missing prop x
                         ^^^^^^^^^^^ [2]: object type

Error ----------------------------------------------------------------------------------------------------- test2.js:7:7

Cannot assign empty string to `d.x` because string is incompatible with number.

Error: test2.js:7
  7: d.x = ""; // error, string ~/~ number (but property x is found)
           ^^ Cannot assign empty string to `d.x` because string [1] is incompatible with number [2].
  References:
    7: d.x = ""; // error, string ~/~ number (but property x is found)
             ^^ [1]: string
    2:   constructor(): { x: number }; // OK
                             ^^^^^^ [2]: number

Error ----------------------------------------------------------------------------------------------------- test2.js:9:2

Cannot cast `new D()` to `D` because object type is incompatible with `D`.

Error: test2.js:9
  9: (new D: D); // error, new D is an object, D not in proto chain
      ^^^^^ Cannot cast `new D()` to `D` because object type [1] is incompatible with `D` [2].
  References:
    9: (new D: D); // error, new D is an object, D not in proto chain
        ^^^^^ [1]: object type
    9: (new D: D); // error, new D is an object, D not in proto chain
               ^ [2]: `D`


Found 6 errors
