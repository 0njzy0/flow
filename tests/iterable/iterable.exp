Error ------------------------------------------------------------- array.js:7:2

Error: array.js:7
  7: (["hi"]: Iterable<number>); // Error string ~> number
      ^^^^^^ Cannot cast array literal to `Iterable` because in property `@@iterator`, the return value, and then type argument `Yield`; string [1] is incompatible with number [2].
  References:
    7: (["hi"]: Iterable<number>); // Error string ~> number
         ^^^^ [1]: string
    7: (["hi"]: Iterable<number>); // Error string ~> number
                         ^^^^^^ [2]: number

Error ------------------------------------------------------------- array.js:8:2

Error: array.js:8
  8: (["hi", 1]: Iterable<string>); // Error number ~> string
      ^^^^^^^^^ Cannot cast array literal to `Iterable` because in property `@@iterator`, the return value, and then type argument `Yield`; number [1] is incompatible with string [2].
  References:
    8: (["hi", 1]: Iterable<string>); // Error number ~> string
               ^ [1]: number
    8: (["hi", 1]: Iterable<string>); // Error number ~> string
                            ^^^^^^ [2]: string

Error ----------------------------------------------------- caching_bug.js:21:79

Error: caching_bug.js:21
 21: function miss_the_cache(x: Array<string | number>): Iterable<string> { return x; }
                                                                                   ^ Cannot return `x` because in property `@@iterator`, the return value, and then type argument `Yield`; number [1] is incompatible with string [2].
  References:
   21: function miss_the_cache(x: Array<string | number>): Iterable<string> { return x; }
                                                 ^^^^^^ [1]: number
   21: function miss_the_cache(x: Array<string | number>): Iterable<string> { return x; }
                                                                    ^^^^^^ [2]: string

Error ------------------------------------------------- iterator_result.js:23:18

Error: iterator_result.js:23
 23:         return { done, value: "still going..." }; // Error string ~> void
                      ^^^^ Cannot return object literal because in property `done`, boolean [1] is incompatible with boolean literal `false` [2].
  References:
   17: function makeIterator(coin_flip: () => boolean ): Iterator<string> {
                                              ^^^^^^^ [1]: boolean
  494:   | { done: false, +value: Yield };
                   ^^^^^ [2]: boolean literal `false`. See lib: <BUILTINS>/core.js:494

Error ------------------------------------------------- iterator_result.js:25:18

Error: iterator_result.js:25
 25:         return { done }; // Error void ~> string
                      ^^^^ Cannot return object literal because in property `done`, boolean [1] is incompatible with boolean literal `true` [2].
  References:
   17: function makeIterator(coin_flip: () => boolean ): Iterator<string> {
                                              ^^^^^^^ [1]: boolean
  493:   | { done: true, +value?: Return }
                   ^^^^ [2]: boolean literal `true`. See lib: <BUILTINS>/core.js:493

Error ------------------------------------------------------------- map.js:14:10

Error: map.js:14
 14:   return map;
              ^^^ Cannot return `map` because in property `@@iterator`, the return value, and then type argument `Yield`; tuple type [1] is incompatible with string [2].
  References:
  541:     @@iterator(): Iterator<[K, V]>;
                                  ^^^^^^ [1]: tuple type. See lib: <BUILTINS>/core.js:541
   13: function mapTest4(map: Map<number, string>): Iterable<string> {
                                                             ^^^^^^ [2]: string

Error ------------------------------------------------------------- set.js:14:10

Error: set.js:14
 14:   return set;
              ^^^ Cannot return `set` because in property `@@iterator`, the return value, and then type argument `Yield`; string [1] is incompatible with number [2].
  References:
   13: function setTest4(set: Set<string>): Iterable<number> {
                                  ^^^^^^ [1]: string
   13: function setTest4(set: Set<string>): Iterable<number> {
                                                     ^^^^^^ [2]: number

Error ------------------------------------------------------------ string.js:5:2

Error: string.js:5
  5: ("hi": Iterable<number>); // Error - string is a Iterable<string>
      ^^^^ Cannot cast `"hi"` to `Iterable` because in property `@@iterator`, the return value, and then type argument `Yield`; string [1] is incompatible with number [2].
  References:
  288:     @@iterator(): Iterator<string>;
                                  ^^^^^^ [1]: string. See lib: <BUILTINS>/core.js:288
    5: ("hi": Iterable<number>); // Error - string is a Iterable<string>
                       ^^^^^^ [2]: number


Found 8 errors
