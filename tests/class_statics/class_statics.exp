Error: test.js:7
  7: A.qux = function(x: string) { } // error?
       ^^^ property `qux`. Property not found in
  7: A.qux = function(x: string) { } // error?
     ^ statics of `A`

Error: test.js:10
 10:   static x: string; // error?
                 ^^^^^^ Cannot extend `A` [1] with `B` because in property `x`, string [2] is incompatible with number [3].
  References:
    9: class B extends A {
                       ^ [1]: `A`
   10:   static x: string; // error?
                   ^^^^^^ [2]: string
    2:   static x: number;
                   ^^^^^^ [3]: number

Error: test.js:11
 11:   static foo(x: string) { } // error?
                     ^^^^^^ Cannot extend `A` [1] with `B` because in property `foo` and then the first argument, string [2] is incompatible with number [3].
  References:
    9: class B extends A {
                       ^ [1]: `A`
   11:   static foo(x: string) { } // error?
                       ^^^^^^ [2]: string
    4:   static foo(x: number) { }
                       ^^^^^^ [3]: number

Error: test.js:13
 13:     B.x = 0; // error
               ^ Cannot assign `0` to `B.x` because number [1] is incompatible with string [2].
  References:
   13:     B.x = 0; // error
                 ^ [1]: number
   10:   static x: string; // error?
                   ^^^^^^ [2]: string

Error: test.js:15
 15:     B.foo(0); // error
               ^ number. This type is incompatible with the expected param type of
 11:   static foo(x: string) { } // error?
                     ^^^^^^ string

Error: test.js:17
 17:     B.y = 0; // error
               ^ Cannot assign `0` to `B.y` because number [1] is incompatible with string [2].
  References:
   17:     B.y = 0; // error
                 ^ [1]: number
    3:   static y: string;
                   ^^^^^^ [2]: string

Error: test.js:18
 18:     B.bar(0); // error
               ^ number. This type is incompatible with the expected param type of
  5:   static bar(y: string) { }
                     ^^^^^^ string

Error: test.js:19
 19:     B.qux(0); // error
           ^^^ property `qux`. Property not found in
 19:     B.qux(0); // error
         ^ statics of `B`

Error: test.js:26
 26:     return new this(); // error B ~> number
                ^^^^^^^^^^ Cannot return `new this()` because `B` [1] is incompatible with number [2].
  References:
   26:     return new this(); // error B ~> number
                  ^^^^^^^^^^ [1]: `B`
   25:   static badCreate(): number {
                             ^^^^^^ [2]: number

Error: test.js:40
 40:     D.foo(0); // error?
           ^^^ property `foo`. Property not found in
 40:     D.foo(0); // error?
         ^ statics of `D`

Error: test.js:42
 42:     D.bar(0);
               ^ number. This type is incompatible with the expected param type of
 38: class D extends C<string> {
                       ^^^^^^ string

Error: test.js:47
 47: (new A: typeof A);
      ^^^^^ Cannot cast `new A()` to `typeof A` because `A` [1] is incompatible with `typeof A` [2].
  References:
   47: (new A: typeof A);
        ^^^^^ [1]: `A`
   47: (new A: typeof A);
               ^^^^^^^^ [2]: `typeof A`

Error: test.js:53
 53:     this.bar(); // error
              ^^^ property `bar`. Property not found in
 53:     this.bar(); // error
         ^^^^ statics of `E`

Error: test.js:54
 54:     return this.x; // error
                ^^^^^^ Cannot return `this.x` because number [1] is incompatible with string [2].
  References:
   51:   static x: number;
                   ^^^^^^ [1]: number
   52:   static foo(): string {
                       ^^^^^^ [2]: string


Found 14 errors
