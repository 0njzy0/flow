Error -------------------------------------------------------- generics.js:19:16

Cannot assign `d.x` to `s` because number is incompatible with string.

Error: generics.js:19
 19: var s:string = d.x;
                    ^^^ Cannot assign `d.x` to `s` because number [1] is incompatible with string [2].
  References:
   18: var b = d.m(true,0,o);
                        ^ [1]: number
   19: var s:string = d.x;
             ^^^^^^ [2]: string

Error -------------------------------------------------------- generics.js:20:16

Cannot assign `o.u` to `n` because `T` is incompatible with number.

Error: generics.js:20
 20: var n:number = o.u;
                    ^^^ Cannot assign `o.u` to `n` because `T` [1] is incompatible with number [2].
  References:
    9:   m<S>(z:S,u:T,v):S {
                    ^ [1]: `T`
   20: var n:number = o.u;
             ^^^^^^ [2]: number

Error -------------------------------------------------------- generics.js:28:16

Cannot assign `e.set(...)` to `x` because number is incompatible with string.

Error: generics.js:28
 28: var x:string = e.set(0);
                    ^^^^^^^^ Cannot assign `e.set(...)` to `x` because number [1] is incompatible with string [2].
  References:
   28: var x:string = e.set(0);
                            ^ [1]: number
   28: var x:string = e.set(0);
             ^^^^^^ [2]: string

Error -------------------------------------------------------- generics.js:28:16

Cannot assign `e.set(...)` to `x` because undefined is incompatible with string.

Error: generics.js:28
 28: var x:string = e.set(0);
                    ^^^^^^^^ Cannot assign `e.set(...)` to `x` because undefined [1] is incompatible with string [2].
  References:
   27: var e = new E(); // error: too few arguments to inherited constructor
               ^^^^^^^ [1]: undefined
   28: var x:string = e.set(0);
             ^^^^^^ [2]: string

Error -------------------------------------------------------- generics.js:39:41

Cannot assign `h1` to `h2` because in type argument `X` and then type argument
`T`, string is incompatible with number.

Error: generics.js:39
 39: var h2:F<Array<Array<Array<number>>>> = h1;
                                             ^^ Cannot assign `h1` to `h2` because in type argument `X` and then type argument `T`, string [1] is incompatible with number [2].
  References:
   38: h1.foo(["..."]);
               ^^^^^ [1]: string
   39: var h2:F<Array<Array<Array<number>>>> = h1;
                                  ^^^^^^ [2]: number

Error -------------------------------------------------------- generics.js:41:11

Cannot apply type because it is not a polymorphic type.

Error: generics.js:41
 41: var obj : Object<string, string> = {} // error, arity 0
               ^^^^^^^^^^^^^^^^^^^^^^ Cannot apply type because it is not a polymorphic type.

Error -------------------------------------------------------- generics.js:42:10

Cannot apply type because it is not a polymorphic type.

Error: generics.js:42
 42: var fn : Function<string> = function() { return 'foo'; } // error, arity 0
              ^^^^^^^^^^^^^^^^ Cannot apply type because it is not a polymorphic type.

Error -------------------------------------------------------- generics.js:43:10

Cannot apply type because it is not a polymorphic type.

Error: generics.js:43
 43: var fn : function<string> = function() { return 'foo'; } // error, arity 0
              ^^^^^^^^^^^^^^^^ Cannot apply type because it is not a polymorphic type.


Found 8 errors
