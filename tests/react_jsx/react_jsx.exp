Error: test.js:31
 31: <ClassExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 29: class ClassExact_NoProps extends React.Component<$Exact<Props_NoProps>> {}
                                                      ^^^^^^^^^^^^^^^^^^^^^ Props_NoProps
  Property `foo` is incompatible:
     31: <ClassExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in
     29: class ClassExact_NoProps extends React.Component<$Exact<Props_NoProps>> {}
                                                          ^^^^^^^^^^^^^^^^^^^^^ Props_NoProps

Error: test.js:43
 43: <FunctionExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 41: const FunctionExact_NoProps = (props: $Exact<Props_NoProps>) => any;
                                           ^^^^^^^^^^^^^^^^^^^^^ Props_NoProps
  Property `foo` is incompatible:
     43: <FunctionExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in
     41: const FunctionExact_NoProps = (props: $Exact<Props_NoProps>) => any;
                                               ^^^^^^^^^^^^^^^^^^^^^ Props_NoProps

Error: test.js:51
 51: <AbstractExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 49: const AbstractExact_NoProps: React.ComponentType<$Exact<Props_NoProps>> = any;
                                                      ^^^^^^^^^^^^^^^^^^^^^ Props_NoProps
  Property `foo` is incompatible:
     51: <AbstractExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in
     49: const AbstractExact_NoProps: React.ComponentType<$Exact<Props_NoProps>> = any;
                                                          ^^^^^^^^^^^^^^^^^^^^^ Props_NoProps

Error: test.js:86
 86: <Legacy_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
                  v
 78:   propTypes: {
 79:     string1: React.PropTypes.string.isRequired,
 80:     string2: React.PropTypes.string.isRequired,
...:
 84:   },
       ^ propTypes of React component
  Property `boolean1` is incompatible:
                      v
     78:   propTypes: {
     79:     string1: React.PropTypes.string.isRequired,
     80:     string2: React.PropTypes.string.isRequired,
    ...:
     84:   },
           ^ property `boolean1`. Property not found in
     86: <Legacy_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:86
 86: <Legacy_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
                  v
 78:   propTypes: {
 79:     string1: React.PropTypes.string.isRequired,
 80:     string2: React.PropTypes.string.isRequired,
...:
 84:   },
       ^ propTypes of React component
  Property `boolean2` is incompatible:
                      v
     78:   propTypes: {
     79:     string1: React.PropTypes.string.isRequired,
     80:     string2: React.PropTypes.string.isRequired,
    ...:
     84:   },
           ^ property `boolean2`. Property not found in
     86: <Legacy_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:86
 86: <Legacy_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
                  v
 78:   propTypes: {
 79:     string1: React.PropTypes.string.isRequired,
 80:     string2: React.PropTypes.string.isRequired,
...:
 84:   },
       ^ propTypes of React component
  Property `number` is incompatible:
                      v
     78:   propTypes: {
     79:     string1: React.PropTypes.string.isRequired,
     80:     string2: React.PropTypes.string.isRequired,
    ...:
     84:   },
           ^ property `number`. Property not found in
     86: <Legacy_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:86
 86: <Legacy_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
                  v
 78:   propTypes: {
 79:     string1: React.PropTypes.string.isRequired,
 80:     string2: React.PropTypes.string.isRequired,
...:
 84:   },
       ^ propTypes of React component
  Property `string1` is incompatible:
                      v
     78:   propTypes: {
     79:     string1: React.PropTypes.string.isRequired,
     80:     string2: React.PropTypes.string.isRequired,
    ...:
     84:   },
           ^ property `string1`. Property not found in
     86: <Legacy_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:86
 86: <Legacy_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
                  v
 78:   propTypes: {
 79:     string1: React.PropTypes.string.isRequired,
 80:     string2: React.PropTypes.string.isRequired,
...:
 84:   },
       ^ propTypes of React component
  Property `string2` is incompatible:
                      v
     78:   propTypes: {
     79:     string1: React.PropTypes.string.isRequired,
     80:     string2: React.PropTypes.string.isRequired,
    ...:
     84:   },
           ^ property `string2`. Property not found in
     86: <Legacy_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:104
     v------------------------------------------------------------
104: <Legacy_ManyProps // Error: All props have an incorrect type.
105:   string1={null}
106:   string2={null}
...:
110: />;
     -^ props. This type is incompatible with
                  v
 78:   propTypes: {
 79:     string1: React.PropTypes.string.isRequired,
 80:     string2: React.PropTypes.string.isRequired,
...:
 84:   },
       ^ propTypes of React component
  Property `boolean1` is incompatible:
    107:   boolean1={null}
                     ^^^^ null. This type is incompatible with
     81:     boolean1: React.PropTypes.bool.isRequired,
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ boolean

Error: test.js:104
     v------------------------------------------------------------
104: <Legacy_ManyProps // Error: All props have an incorrect type.
105:   string1={null}
106:   string2={null}
...:
110: />;
     -^ props. This type is incompatible with
                  v
 78:   propTypes: {
 79:     string1: React.PropTypes.string.isRequired,
 80:     string2: React.PropTypes.string.isRequired,
...:
 84:   },
       ^ propTypes of React component
  Property `boolean2` is incompatible:
    108:   boolean2={null}
                     ^^^^ null. This type is incompatible with
     82:     boolean2: React.PropTypes.bool.isRequired,
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ boolean

Error: test.js:104
     v------------------------------------------------------------
104: <Legacy_ManyProps // Error: All props have an incorrect type.
105:   string1={null}
106:   string2={null}
...:
110: />;
     -^ props. This type is incompatible with
                  v
 78:   propTypes: {
 79:     string1: React.PropTypes.string.isRequired,
 80:     string2: React.PropTypes.string.isRequired,
...:
 84:   },
       ^ propTypes of React component
  Property `number` is incompatible:
    109:   number={null}
                   ^^^^ null. This type is incompatible with
     83:     number: React.PropTypes.number.isRequired,
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number

Error: test.js:104
     v------------------------------------------------------------
104: <Legacy_ManyProps // Error: All props have an incorrect type.
105:   string1={null}
106:   string2={null}
...:
110: />;
     -^ props. This type is incompatible with
                  v
 78:   propTypes: {
 79:     string1: React.PropTypes.string.isRequired,
 80:     string2: React.PropTypes.string.isRequired,
...:
 84:   },
       ^ propTypes of React component
  Property `string1` is incompatible:
    105:   string1={null}
                    ^^^^ null. This type is incompatible with
     79:     string1: React.PropTypes.string.isRequired,
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string

Error: test.js:104
     v------------------------------------------------------------
104: <Legacy_ManyProps // Error: All props have an incorrect type.
105:   string1={null}
106:   string2={null}
...:
110: />;
     -^ props. This type is incompatible with
                  v
 78:   propTypes: {
 79:     string1: React.PropTypes.string.isRequired,
 80:     string2: React.PropTypes.string.isRequired,
...:
 84:   },
       ^ propTypes of React component
  Property `string2` is incompatible:
    106:   string2={null}
                    ^^^^ null. This type is incompatible with
     80:     string2: React.PropTypes.string.isRequired,
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string

Error: test.js:123
     v--------------------------------------------
123: <Legacy_ManyProps // Error: Missing `number`.
124:   {...{string1: 'foo', string2: 'bar'}}
125:   {...{boolean1: true, boolean2: false}}
126: />;
     -^ props. This type is incompatible with
                  v
 78:   propTypes: {
 79:     string1: React.PropTypes.string.isRequired,
 80:     string2: React.PropTypes.string.isRequired,
...:
 84:   },
       ^ propTypes of React component
  Property `number` is incompatible:
                      v
     78:   propTypes: {
     79:     string1: React.PropTypes.string.isRequired,
     80:     string2: React.PropTypes.string.isRequired,
    ...:
     84:   },
           ^ property `number`. Property not found in
         v--------------------------------------------
    123: <Legacy_ManyProps // Error: Missing `number`.
    124:   {...{string1: 'foo', string2: 'bar'}}
    125:   {...{boolean1: true, boolean2: false}}
    126: />;
         -^ props

Error: test.js:134
     v--------------------------------------------------------------------------
134: <Legacy_ManyProps // OK: `number` is overwritten at the end of the element.
135:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
136:   boolean1
...:
139: />;
     -^ props. This type is incompatible with
                  v
 78:   propTypes: {
 79:     string1: React.PropTypes.string.isRequired,
 80:     string2: React.PropTypes.string.isRequired,
...:
 84:   },
       ^ propTypes of React component
  Property `number` is incompatible:
    135:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                              ^^^^^^^ null or undefined. This type is incompatible with
     83:     number: React.PropTypes.number.isRequired,
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number

Error: test.js:144
144:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined. This type is incompatible with
143:   number={42}
               ^^ number

Error: test.js:148
148: <Class_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                       ^^^^^^^^^^^^^^^ property `boolean1`. Property not found in
    148: <Class_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^ props

Error: test.js:148
148: <Class_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                       ^^^^^^^^^^^^^^^ property `boolean2`. Property not found in
    148: <Class_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^ props

Error: test.js:148
148: <Class_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                       ^^^^^^^^^^^^^^^ property `number`. Property not found in
    148: <Class_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^ props

Error: test.js:148
148: <Class_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                       ^^^^^^^^^^^^^^^ property `string1`. Property not found in
    148: <Class_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^ props

Error: test.js:148
148: <Class_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                       ^^^^^^^^^^^^^^^ property `string2`. Property not found in
    148: <Class_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^ props

Error: test.js:166
     v-----------------------------------------------------------
166: <Class_ManyProps // Error: All props have an incorrect type.
167:   string1={null}
168:   string2={null}
...:
172: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    169:   boolean1={null}
                     ^^^^ null. This type is incompatible with
     72:   boolean1: boolean,
                     ^^^^^^^ boolean

Error: test.js:166
     v-----------------------------------------------------------
166: <Class_ManyProps // Error: All props have an incorrect type.
167:   string1={null}
168:   string2={null}
...:
172: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    170:   boolean2={null}
                     ^^^^ null. This type is incompatible with
     73:   boolean2: boolean,
                     ^^^^^^^ boolean

Error: test.js:166
     v-----------------------------------------------------------
166: <Class_ManyProps // Error: All props have an incorrect type.
167:   string1={null}
168:   string2={null}
...:
172: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    171:   number={null}
                   ^^^^ null. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:166
     v-----------------------------------------------------------
166: <Class_ManyProps // Error: All props have an incorrect type.
167:   string1={null}
168:   string2={null}
...:
172: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    167:   string1={null}
                    ^^^^ null. This type is incompatible with
     70:   string1: string,
                    ^^^^^^ string

Error: test.js:166
     v-----------------------------------------------------------
166: <Class_ManyProps // Error: All props have an incorrect type.
167:   string1={null}
168:   string2={null}
...:
172: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    168:   string2={null}
                    ^^^^ null. This type is incompatible with
     71:   string2: string,
                    ^^^^^^ string

Error: test.js:185
     v-------------------------------------------
185: <Class_ManyProps // Error: Missing `number`.
186:   {...{string1: 'foo', string2: 'bar'}}
187:   {...{boolean1: true, boolean2: false}}
188: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                       ^^^^^^^^^^^^^^^ property `number`. Property not found in
         v-------------------------------------------
    185: <Class_ManyProps // Error: Missing `number`.
    186:   {...{string1: 'foo', string2: 'bar'}}
    187:   {...{boolean1: true, boolean2: false}}
    188: />;
         -^ props

Error: test.js:196
     v-------------------------------------------------------------------------
196: <Class_ManyProps // OK: `number` is overwritten at the end of the element.
197:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
198:   boolean1
...:
201: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    197:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                              ^^^^^^^ null or undefined. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:206
206:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined. This type is incompatible with
205:   number={42}
               ^^ number

Error: test.js:210
210: <ClassExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ property `boolean1`. Property not found in
    210: <ClassExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:210
210: <ClassExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ property `boolean2`. Property not found in
    210: <ClassExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:210
210: <ClassExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ property `number`. Property not found in
    210: <ClassExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:210
210: <ClassExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ property `string1`. Property not found in
    210: <ClassExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:210
210: <ClassExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ property `string2`. Property not found in
    210: <ClassExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:218
     v-----------------------------------------------------------
218: <ClassExact_ManyProps // Error: Extra props are not allowed.
219:   string1="foo"
220:   string2={'bar'}
...:
227: />;
     -^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `a` is incompatible:
         v-----------------------------------------------------------
    218: <ClassExact_ManyProps // Error: Extra props are not allowed.
    219:   string1="foo"
    220:   string2={'bar'}
    ...:
    227: />;
         -^ property `a`. Property not found in
    209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:218
     v-----------------------------------------------------------
218: <ClassExact_ManyProps // Error: Extra props are not allowed.
219:   string1="foo"
220:   string2={'bar'}
...:
227: />;
     -^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `b` is incompatible:
         v-----------------------------------------------------------
    218: <ClassExact_ManyProps // Error: Extra props are not allowed.
    219:   string1="foo"
    220:   string2={'bar'}
    ...:
    227: />;
         -^ property `b`. Property not found in
    209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:218
     v-----------------------------------------------------------
218: <ClassExact_ManyProps // Error: Extra props are not allowed.
219:   string1="foo"
220:   string2={'bar'}
...:
227: />;
     -^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `c` is incompatible:
         v-----------------------------------------------------------
    218: <ClassExact_ManyProps // Error: Extra props are not allowed.
    219:   string1="foo"
    220:   string2={'bar'}
    ...:
    227: />;
         -^ property `c`. Property not found in
    209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:228
     v----------------------------------------------------------------
228: <ClassExact_ManyProps // Error: All props have an incorrect type.
229:   string1={null}
230:   string2={null}
...:
234: />;
     -^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    231:   boolean1={null}
                     ^^^^ null. This type is incompatible with
     72:   boolean1: boolean,
                     ^^^^^^^ boolean

Error: test.js:228
     v----------------------------------------------------------------
228: <ClassExact_ManyProps // Error: All props have an incorrect type.
229:   string1={null}
230:   string2={null}
...:
234: />;
     -^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    232:   boolean2={null}
                     ^^^^ null. This type is incompatible with
     73:   boolean2: boolean,
                     ^^^^^^^ boolean

Error: test.js:228
     v----------------------------------------------------------------
228: <ClassExact_ManyProps // Error: All props have an incorrect type.
229:   string1={null}
230:   string2={null}
...:
234: />;
     -^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    233:   number={null}
                   ^^^^ null. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:228
     v----------------------------------------------------------------
228: <ClassExact_ManyProps // Error: All props have an incorrect type.
229:   string1={null}
230:   string2={null}
...:
234: />;
     -^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    229:   string1={null}
                    ^^^^ null. This type is incompatible with
     70:   string1: string,
                    ^^^^^^ string

Error: test.js:228
     v----------------------------------------------------------------
228: <ClassExact_ManyProps // Error: All props have an incorrect type.
229:   string1={null}
230:   string2={null}
...:
234: />;
     -^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    230:   string2={null}
                    ^^^^ null. This type is incompatible with
     71:   string2: string,
                    ^^^^^^ string

Error: test.js:235
     v-------------------------------------------------------------------------
235: <ClassExact_ManyProps // OK: All props are defined. Error for exact types.
236:   string1="foo"
237:   string2={'bar'}
...:
241: />;
     -^ props. Inexact type is incompatible with exact type
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:242
     v-------------------------------------------------------------------------
242: <ClassExact_ManyProps // OK: All props are defined. Error for exact types.
243:   {...{string1: 'foo', string2: 'bar'}}
244:   {...{boolean1: true, boolean2: false}}
245:   {...{number: 42}}
246: />;
     -^ props. Inexact type is incompatible with exact type
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:247
     v------------------------------------------------
247: <ClassExact_ManyProps // Error: Missing `number`.
248:   {...{string1: 'foo', string2: 'bar'}}
249:   {...{boolean1: true, boolean2: false}}
250: />;
     -^ props. Inexact type is incompatible with exact type
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:247
     v------------------------------------------------
247: <ClassExact_ManyProps // Error: Missing `number`.
248:   {...{string1: 'foo', string2: 'bar'}}
249:   {...{boolean1: true, boolean2: false}}
250: />;
     -^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                               ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                   ^^^^^^^^^^^^^^^ property `number`. Property not found in
         v------------------------------------------------
    247: <ClassExact_ManyProps // Error: Missing `number`.
    248:   {...{string1: 'foo', string2: 'bar'}}
    249:   {...{boolean1: true, boolean2: false}}
    250: />;
         -^ props

Error: test.js:251
     v---------------------------------------------------------------------------
251: <ClassExact_ManyProps // OK: Extra props are allowed. Error for exact types.
252:   string1="foo"
253:   string2={'bar'}
...:
257: />;
     -^ props. Inexact type is incompatible with exact type
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:258
     v-----------------------------------------------------------------------------------------------------
258: <ClassExact_ManyProps // OK: `number` is overwritten at the end of the element. Error for exact types.
259:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
260:   boolean1
...:
263: />;
     -^ props. Inexact type is incompatible with exact type
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:258
     v-----------------------------------------------------------------------------------------------------
258: <ClassExact_ManyProps // OK: `number` is overwritten at the end of the element. Error for exact types.
259:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
260:   boolean1
...:
263: />;
     -^ props. This type is incompatible with
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                               ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    259:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                              ^^^^^^^ null or undefined. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:264
     v------------------------------------------------------------------------------
264: <ClassExact_ManyProps // Error: `number` cannot be null. Error for exact types.
265:   boolean1
266:   boolean2={false}
...:
269: />;
     -^ props. Inexact type is incompatible with exact type
209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:268
268:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined. This type is incompatible with
267:   number={42}
               ^^ number

Error: test.js:272
272: <ClassPure_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                           ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                               ^^^^^^^^^^^^^^^ property `boolean1`. Property not found in
    272: <ClassPure_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:272
272: <ClassPure_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                           ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                               ^^^^^^^^^^^^^^^ property `boolean2`. Property not found in
    272: <ClassPure_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:272
272: <ClassPure_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                           ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                               ^^^^^^^^^^^^^^^ property `number`. Property not found in
    272: <ClassPure_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:272
272: <ClassPure_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                           ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                               ^^^^^^^^^^^^^^^ property `string1`. Property not found in
    272: <ClassPure_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:272
272: <ClassPure_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                           ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                               ^^^^^^^^^^^^^^^ property `string2`. Property not found in
    272: <ClassPure_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:290
     v---------------------------------------------------------------
290: <ClassPure_ManyProps // Error: All props have an incorrect type.
291:   string1={null}
292:   string2={null}
...:
296: />;
     -^ props. This type is incompatible with
271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                           ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    293:   boolean1={null}
                     ^^^^ null. This type is incompatible with
     72:   boolean1: boolean,
                     ^^^^^^^ boolean

Error: test.js:290
     v---------------------------------------------------------------
290: <ClassPure_ManyProps // Error: All props have an incorrect type.
291:   string1={null}
292:   string2={null}
...:
296: />;
     -^ props. This type is incompatible with
271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                           ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    294:   boolean2={null}
                     ^^^^ null. This type is incompatible with
     73:   boolean2: boolean,
                     ^^^^^^^ boolean

Error: test.js:290
     v---------------------------------------------------------------
290: <ClassPure_ManyProps // Error: All props have an incorrect type.
291:   string1={null}
292:   string2={null}
...:
296: />;
     -^ props. This type is incompatible with
271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                           ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    295:   number={null}
                   ^^^^ null. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:290
     v---------------------------------------------------------------
290: <ClassPure_ManyProps // Error: All props have an incorrect type.
291:   string1={null}
292:   string2={null}
...:
296: />;
     -^ props. This type is incompatible with
271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                           ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    291:   string1={null}
                    ^^^^ null. This type is incompatible with
     70:   string1: string,
                    ^^^^^^ string

Error: test.js:290
     v---------------------------------------------------------------
290: <ClassPure_ManyProps // Error: All props have an incorrect type.
291:   string1={null}
292:   string2={null}
...:
296: />;
     -^ props. This type is incompatible with
271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                           ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    292:   string2={null}
                    ^^^^ null. This type is incompatible with
     71:   string2: string,
                    ^^^^^^ string

Error: test.js:309
     v-----------------------------------------------
309: <ClassPure_ManyProps // Error: Missing `number`.
310:   {...{string1: 'foo', string2: 'bar'}}
311:   {...{boolean1: true, boolean2: false}}
312: />;
     -^ props. This type is incompatible with
271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                           ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                               ^^^^^^^^^^^^^^^ property `number`. Property not found in
         v-----------------------------------------------
    309: <ClassPure_ManyProps // Error: Missing `number`.
    310:   {...{string1: 'foo', string2: 'bar'}}
    311:   {...{boolean1: true, boolean2: false}}
    312: />;
         -^ props

Error: test.js:320
     v-----------------------------------------------------------------------------
320: <ClassPure_ManyProps // OK: `number` is overwritten at the end of the element.
321:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
322:   boolean1
...:
325: />;
     -^ props. This type is incompatible with
271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                           ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    321:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                              ^^^^^^^ null or undefined. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:330
330:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined. This type is incompatible with
329:   number={42}
               ^^ number

Error: test.js:334
334: <Function_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                        ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                            ^^^^^^^^^^^^^^^ property `boolean1`. Property not found in
    334: <Function_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:334
334: <Function_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                        ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                            ^^^^^^^^^^^^^^^ property `boolean2`. Property not found in
    334: <Function_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:334
334: <Function_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                        ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                            ^^^^^^^^^^^^^^^ property `number`. Property not found in
    334: <Function_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:334
334: <Function_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                        ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                            ^^^^^^^^^^^^^^^ property `string1`. Property not found in
    334: <Function_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:334
334: <Function_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                        ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                            ^^^^^^^^^^^^^^^ property `string2`. Property not found in
    334: <Function_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:352
     v--------------------------------------------------------------
352: <Function_ManyProps // Error: All props have an incorrect type.
353:   string1={null}
354:   string2={null}
...:
358: />;
     -^ props. This type is incompatible with
333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                        ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    355:   boolean1={null}
                     ^^^^ null. This type is incompatible with
     72:   boolean1: boolean,
                     ^^^^^^^ boolean

Error: test.js:352
     v--------------------------------------------------------------
352: <Function_ManyProps // Error: All props have an incorrect type.
353:   string1={null}
354:   string2={null}
...:
358: />;
     -^ props. This type is incompatible with
333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                        ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    356:   boolean2={null}
                     ^^^^ null. This type is incompatible with
     73:   boolean2: boolean,
                     ^^^^^^^ boolean

Error: test.js:352
     v--------------------------------------------------------------
352: <Function_ManyProps // Error: All props have an incorrect type.
353:   string1={null}
354:   string2={null}
...:
358: />;
     -^ props. This type is incompatible with
333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                        ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    357:   number={null}
                   ^^^^ null. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:352
     v--------------------------------------------------------------
352: <Function_ManyProps // Error: All props have an incorrect type.
353:   string1={null}
354:   string2={null}
...:
358: />;
     -^ props. This type is incompatible with
333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                        ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    353:   string1={null}
                    ^^^^ null. This type is incompatible with
     70:   string1: string,
                    ^^^^^^ string

Error: test.js:352
     v--------------------------------------------------------------
352: <Function_ManyProps // Error: All props have an incorrect type.
353:   string1={null}
354:   string2={null}
...:
358: />;
     -^ props. This type is incompatible with
333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                        ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    354:   string2={null}
                    ^^^^ null. This type is incompatible with
     71:   string2: string,
                    ^^^^^^ string

Error: test.js:371
     v----------------------------------------------
371: <Function_ManyProps // Error: Missing `number`.
372:   {...{string1: 'foo', string2: 'bar'}}
373:   {...{boolean1: true, boolean2: false}}
374: />;
     -^ props. This type is incompatible with
333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                        ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                            ^^^^^^^^^^^^^^^ property `number`. Property not found in
         v----------------------------------------------
    371: <Function_ManyProps // Error: Missing `number`.
    372:   {...{string1: 'foo', string2: 'bar'}}
    373:   {...{boolean1: true, boolean2: false}}
    374: />;
         -^ props

Error: test.js:382
     v----------------------------------------------------------------------------
382: <Function_ManyProps // OK: `number` is overwritten at the end of the element.
383:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
384:   boolean1
...:
387: />;
     -^ props. This type is incompatible with
333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                        ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    383:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                              ^^^^^^^ null or undefined. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:392
392:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined. This type is incompatible with
391:   number={42}
               ^^ number

Error: test.js:396
396: <FunctionExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                 ^^^^^^^^^^^^^^^^^^^^^^^ property `boolean1`. Property not found in
    396: <FunctionExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:396
396: <FunctionExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                 ^^^^^^^^^^^^^^^^^^^^^^^ property `boolean2`. Property not found in
    396: <FunctionExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:396
396: <FunctionExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                 ^^^^^^^^^^^^^^^^^^^^^^^ property `number`. Property not found in
    396: <FunctionExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:396
396: <FunctionExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                 ^^^^^^^^^^^^^^^^^^^^^^^ property `string1`. Property not found in
    396: <FunctionExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:396
396: <FunctionExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                 ^^^^^^^^^^^^^^^^^^^^^^^ property `string2`. Property not found in
    396: <FunctionExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:404
     v-------------------------------------------------------
404: <FunctionExact_ManyProps // OK: Other props are allowed.
405:   string1="foo"
406:   string2={'bar'}
...:
413: />;
     -^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `a` is incompatible:
         v-------------------------------------------------------
    404: <FunctionExact_ManyProps // OK: Other props are allowed.
    405:   string1="foo"
    406:   string2={'bar'}
    ...:
    413: />;
         -^ property `a`. Property not found in
    395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                 ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:404
     v-------------------------------------------------------
404: <FunctionExact_ManyProps // OK: Other props are allowed.
405:   string1="foo"
406:   string2={'bar'}
...:
413: />;
     -^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `b` is incompatible:
         v-------------------------------------------------------
    404: <FunctionExact_ManyProps // OK: Other props are allowed.
    405:   string1="foo"
    406:   string2={'bar'}
    ...:
    413: />;
         -^ property `b`. Property not found in
    395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                 ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:404
     v-------------------------------------------------------
404: <FunctionExact_ManyProps // OK: Other props are allowed.
405:   string1="foo"
406:   string2={'bar'}
...:
413: />;
     -^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `c` is incompatible:
         v-------------------------------------------------------
    404: <FunctionExact_ManyProps // OK: Other props are allowed.
    405:   string1="foo"
    406:   string2={'bar'}
    ...:
    413: />;
         -^ property `c`. Property not found in
    395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                 ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:414
     v-------------------------------------------------------------------
414: <FunctionExact_ManyProps // Error: All props have an incorrect type.
415:   string1={null}
416:   string2={null}
...:
420: />;
     -^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    417:   boolean1={null}
                     ^^^^ null. This type is incompatible with
     72:   boolean1: boolean,
                     ^^^^^^^ boolean

Error: test.js:414
     v-------------------------------------------------------------------
414: <FunctionExact_ManyProps // Error: All props have an incorrect type.
415:   string1={null}
416:   string2={null}
...:
420: />;
     -^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    418:   boolean2={null}
                     ^^^^ null. This type is incompatible with
     73:   boolean2: boolean,
                     ^^^^^^^ boolean

Error: test.js:414
     v-------------------------------------------------------------------
414: <FunctionExact_ManyProps // Error: All props have an incorrect type.
415:   string1={null}
416:   string2={null}
...:
420: />;
     -^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    419:   number={null}
                   ^^^^ null. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:414
     v-------------------------------------------------------------------
414: <FunctionExact_ManyProps // Error: All props have an incorrect type.
415:   string1={null}
416:   string2={null}
...:
420: />;
     -^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    415:   string1={null}
                    ^^^^ null. This type is incompatible with
     70:   string1: string,
                    ^^^^^^ string

Error: test.js:414
     v-------------------------------------------------------------------
414: <FunctionExact_ManyProps // Error: All props have an incorrect type.
415:   string1={null}
416:   string2={null}
...:
420: />;
     -^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    416:   string2={null}
                    ^^^^ null. This type is incompatible with
     71:   string2: string,
                    ^^^^^^ string

Error: test.js:421
     v----------------------------------------------------------------------------
421: <FunctionExact_ManyProps // OK: All props are defined. Error for exact types.
422:   string1="foo"
423:   string2={'bar'}
...:
427: />;
     -^ props. Inexact type is incompatible with exact type
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:428
     v----------------------------------------------------------------------------
428: <FunctionExact_ManyProps // OK: All props are defined. Error for exact types.
429:   {...{string1: 'foo', string2: 'bar'}}
430:   {...{boolean1: true, boolean2: false}}
431:   {...{number: 42}}
432: />;
     -^ props. Inexact type is incompatible with exact type
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:433
     v--------------------------------------------------------------------------
433: <FunctionExact_ManyProps // Error: Missing `number`. Error for exact types.
434:   {...{string1: 'foo', string2: 'bar'}}
435:   {...{boolean1: true, boolean2: false}}
436: />;
     -^ props. Inexact type is incompatible with exact type
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:433
     v--------------------------------------------------------------------------
433: <FunctionExact_ManyProps // Error: Missing `number`. Error for exact types.
434:   {...{string1: 'foo', string2: 'bar'}}
435:   {...{boolean1: true, boolean2: false}}
436: />;
     -^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                    ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                        ^^^^^^^^^^^^^^^ property `number`. Property not found in
         v--------------------------------------------------------------------------
    433: <FunctionExact_ManyProps // Error: Missing `number`. Error for exact types.
    434:   {...{string1: 'foo', string2: 'bar'}}
    435:   {...{boolean1: true, boolean2: false}}
    436: />;
         -^ props

Error: test.js:437
     v------------------------------------------------------------------------------
437: <FunctionExact_ManyProps // OK: Extra props are allowed. Error for exact types.
438:   string1="foo"
439:   string2={'bar'}
...:
443: />;
     -^ props. Inexact type is incompatible with exact type
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:444
     v------------------------------------------------------------------------------
444: <FunctionExact_ManyProps // OK: `number` is overwritten. Error for exact types.
445:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
446:   boolean1
...:
449: />;
     -^ props. Inexact type is incompatible with exact type
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:444
     v------------------------------------------------------------------------------
444: <FunctionExact_ManyProps // OK: `number` is overwritten. Error for exact types.
445:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
446:   boolean1
...:
449: />;
     -^ props. This type is incompatible with
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                    ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    445:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                              ^^^^^^^ null or undefined. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:450
     v---------------------------------------------------------------------------------
450: <FunctionExact_ManyProps // Error: `number` cannot be null. Error for exact types.
451:   boolean1
452:   boolean2={false}
...:
455: />;
     -^ props. Inexact type is incompatible with exact type
395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                             ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:454
454:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined. This type is incompatible with
453:   number={42}
               ^^ number

Error: test.js:458
458: <Abstract_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                       ^^^^^^^^^^^^^^^ property `boolean1`. Property not found in
    458: <Abstract_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:458
458: <Abstract_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                       ^^^^^^^^^^^^^^^ property `boolean2`. Property not found in
    458: <Abstract_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:458
458: <Abstract_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                       ^^^^^^^^^^^^^^^ property `number`. Property not found in
    458: <Abstract_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:458
458: <Abstract_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                       ^^^^^^^^^^^^^^^ property `string1`. Property not found in
    458: <Abstract_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:458
458: <Abstract_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                       ^^^^^^^^^^^^^^^ property `string2`. Property not found in
    458: <Abstract_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:476
     v--------------------------------------------------------------
476: <Abstract_ManyProps // Error: All props have an incorrect type.
477:   string1={null}
478:   string2={null}
...:
482: />;
     -^ props. This type is incompatible with
457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    479:   boolean1={null}
                     ^^^^ null. This type is incompatible with
     72:   boolean1: boolean,
                     ^^^^^^^ boolean

Error: test.js:476
     v--------------------------------------------------------------
476: <Abstract_ManyProps // Error: All props have an incorrect type.
477:   string1={null}
478:   string2={null}
...:
482: />;
     -^ props. This type is incompatible with
457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    480:   boolean2={null}
                     ^^^^ null. This type is incompatible with
     73:   boolean2: boolean,
                     ^^^^^^^ boolean

Error: test.js:476
     v--------------------------------------------------------------
476: <Abstract_ManyProps // Error: All props have an incorrect type.
477:   string1={null}
478:   string2={null}
...:
482: />;
     -^ props. This type is incompatible with
457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    481:   number={null}
                   ^^^^ null. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:476
     v--------------------------------------------------------------
476: <Abstract_ManyProps // Error: All props have an incorrect type.
477:   string1={null}
478:   string2={null}
...:
482: />;
     -^ props. This type is incompatible with
457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    477:   string1={null}
                    ^^^^ null. This type is incompatible with
     70:   string1: string,
                    ^^^^^^ string

Error: test.js:476
     v--------------------------------------------------------------
476: <Abstract_ManyProps // Error: All props have an incorrect type.
477:   string1={null}
478:   string2={null}
...:
482: />;
     -^ props. This type is incompatible with
457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    478:   string2={null}
                    ^^^^ null. This type is incompatible with
     71:   string2: string,
                    ^^^^^^ string

Error: test.js:495
     v----------------------------------------------
495: <Abstract_ManyProps // Error: Missing `number`.
496:   {...{string1: 'foo', string2: 'bar'}}
497:   {...{boolean1: true, boolean2: false}}
498: />;
     -^ props. This type is incompatible with
457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                       ^^^^^^^^^^^^^^^ property `number`. Property not found in
         v----------------------------------------------
    495: <Abstract_ManyProps // Error: Missing `number`.
    496:   {...{string1: 'foo', string2: 'bar'}}
    497:   {...{boolean1: true, boolean2: false}}
    498: />;
         -^ props

Error: test.js:506
     v----------------------------------------------------------------------------
506: <Abstract_ManyProps // OK: `number` is overwritten at the end of the element.
507:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
508:   boolean1
...:
511: />;
     -^ props. This type is incompatible with
457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    507:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                              ^^^^^^^ null or undefined. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:516
516:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined. This type is incompatible with
515:   number={42}
               ^^ number

Error: test.js:521
521: <AbstractExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ property `boolean1`. Property not found in
    521: <AbstractExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:521
521: <AbstractExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ property `boolean2`. Property not found in
    521: <AbstractExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:521
521: <AbstractExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ property `number`. Property not found in
    521: <AbstractExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:521
521: <AbstractExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ property `string1`. Property not found in
    521: <AbstractExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:521
521: <AbstractExact_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ property `string2`. Property not found in
    521: <AbstractExact_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:529
     v--------------------------------------------------------------
529: <AbstractExact_ManyProps // Error: Other props are not allowed.
530:   string1="foo"
531:   string2={'bar'}
...:
538: />;
     -^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `a` is incompatible:
         v--------------------------------------------------------------
    529: <AbstractExact_ManyProps // Error: Other props are not allowed.
    530:   string1="foo"
    531:   string2={'bar'}
    ...:
    538: />;
         -^ property `a`. Property not found in
    519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:529
     v--------------------------------------------------------------
529: <AbstractExact_ManyProps // Error: Other props are not allowed.
530:   string1="foo"
531:   string2={'bar'}
...:
538: />;
     -^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `b` is incompatible:
         v--------------------------------------------------------------
    529: <AbstractExact_ManyProps // Error: Other props are not allowed.
    530:   string1="foo"
    531:   string2={'bar'}
    ...:
    538: />;
         -^ property `b`. Property not found in
    519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:529
     v--------------------------------------------------------------
529: <AbstractExact_ManyProps // Error: Other props are not allowed.
530:   string1="foo"
531:   string2={'bar'}
...:
538: />;
     -^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `c` is incompatible:
         v--------------------------------------------------------------
    529: <AbstractExact_ManyProps // Error: Other props are not allowed.
    530:   string1="foo"
    531:   string2={'bar'}
    ...:
    538: />;
         -^ property `c`. Property not found in
    519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                            ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:539
     v-------------------------------------------------------------------
539: <AbstractExact_ManyProps // Error: All props have an incorrect type.
540:   string1={null}
541:   string2={null}
...:
545: />;
     -^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    542:   boolean1={null}
                     ^^^^ null. This type is incompatible with
     72:   boolean1: boolean,
                     ^^^^^^^ boolean

Error: test.js:539
     v-------------------------------------------------------------------
539: <AbstractExact_ManyProps // Error: All props have an incorrect type.
540:   string1={null}
541:   string2={null}
...:
545: />;
     -^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    543:   boolean2={null}
                     ^^^^ null. This type is incompatible with
     73:   boolean2: boolean,
                     ^^^^^^^ boolean

Error: test.js:539
     v-------------------------------------------------------------------
539: <AbstractExact_ManyProps // Error: All props have an incorrect type.
540:   string1={null}
541:   string2={null}
...:
545: />;
     -^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    544:   number={null}
                   ^^^^ null. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:539
     v-------------------------------------------------------------------
539: <AbstractExact_ManyProps // Error: All props have an incorrect type.
540:   string1={null}
541:   string2={null}
...:
545: />;
     -^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    540:   string1={null}
                    ^^^^ null. This type is incompatible with
     70:   string1: string,
                    ^^^^^^ string

Error: test.js:539
     v-------------------------------------------------------------------
539: <AbstractExact_ManyProps // Error: All props have an incorrect type.
540:   string1={null}
541:   string2={null}
...:
545: />;
     -^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    541:   string2={null}
                    ^^^^ null. This type is incompatible with
     71:   string2: string,
                    ^^^^^^ string

Error: test.js:546
     v----------------------------------------------------------------------------
546: <AbstractExact_ManyProps // OK: All props are defined. Error for exact types.
547:   string1="foo"
548:   string2={'bar'}
...:
552: />;
     -^ props. Inexact type is incompatible with exact type
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:553
     v----------------------------------------------------------------------------
553: <AbstractExact_ManyProps // OK: All props are defined. Error for exact types.
554:   {...{string1: 'foo', string2: 'bar'}}
555:   {...{boolean1: true, boolean2: false}}
556:   {...{number: 42}}
557: />;
     -^ props. Inexact type is incompatible with exact type
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:558
     v---------------------------------------------------
558: <AbstractExact_ManyProps // Error: Missing `number`.
559:   {...{string1: 'foo', string2: 'bar'}}
560:   {...{boolean1: true, boolean2: false}}
561: />;
     -^ props. Inexact type is incompatible with exact type
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:558
     v---------------------------------------------------
558: <AbstractExact_ManyProps // Error: Missing `number`.
559:   {...{string1: 'foo', string2: 'bar'}}
560:   {...{boolean1: true, boolean2: false}}
561: />;
     -^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                               ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                   ^^^^^^^^^^^^^^^ property `number`. Property not found in
         v---------------------------------------------------
    558: <AbstractExact_ManyProps // Error: Missing `number`.
    559:   {...{string1: 'foo', string2: 'bar'}}
    560:   {...{boolean1: true, boolean2: false}}
    561: />;
         -^ props

Error: test.js:562
     v------------------------------------------------------------------------------
562: <AbstractExact_ManyProps // OK: Extra props are allowed. Error for exact types.
563:   string1="foo"
564:   string2={'bar'}
...:
568: />;
     -^ props. Inexact type is incompatible with exact type
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:569
     v------------------------------------------------------------------------------
569: <AbstractExact_ManyProps // OK: `number` is overwritten. Error for exact types.
570:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
571:   boolean1
...:
574: />;
     -^ props. Inexact type is incompatible with exact type
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:569
     v------------------------------------------------------------------------------
569: <AbstractExact_ManyProps // OK: `number` is overwritten. Error for exact types.
570:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
571:   boolean1
...:
574: />;
     -^ props. This type is incompatible with
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                               ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    570:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                              ^^^^^^^ null or undefined. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:575
     v---------------------------------------------------------------------------------
575: <AbstractExact_ManyProps // Error: `number` cannot be null. Error for exact types.
576:   boolean1
577:   boolean2={false}
...:
580: />;
     -^ props. Inexact type is incompatible with exact type
519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                        ^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps

Error: test.js:579
579:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined. This type is incompatible with
578:   number={42}
               ^^ number

Error: test.js:583
583: <Member_ManyProps.prop />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                       ^^^^^^^^^^^^^^^ property `boolean1`. Property not found in
    583: <Member_ManyProps.prop />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:583
583: <Member_ManyProps.prop />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                       ^^^^^^^^^^^^^^^ property `boolean2`. Property not found in
    583: <Member_ManyProps.prop />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:583
583: <Member_ManyProps.prop />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                       ^^^^^^^^^^^^^^^ property `number`. Property not found in
    583: <Member_ManyProps.prop />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:583
583: <Member_ManyProps.prop />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                       ^^^^^^^^^^^^^^^ property `string1`. Property not found in
    583: <Member_ManyProps.prop />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:583
583: <Member_ManyProps.prop />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                       ^^^^^^^^^^^^^^^ property `string2`. Property not found in
    583: <Member_ManyProps.prop />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:601
     v-----------------------------------------------------------------
601: <Member_ManyProps.prop // Error: All props have an incorrect type.
602:   string1={null}
603:   string2={null}
...:
607: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    604:   boolean1={null}
                     ^^^^ null. This type is incompatible with
     72:   boolean1: boolean,
                     ^^^^^^^ boolean

Error: test.js:601
     v-----------------------------------------------------------------
601: <Member_ManyProps.prop // Error: All props have an incorrect type.
602:   string1={null}
603:   string2={null}
...:
607: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    605:   boolean2={null}
                     ^^^^ null. This type is incompatible with
     73:   boolean2: boolean,
                     ^^^^^^^ boolean

Error: test.js:601
     v-----------------------------------------------------------------
601: <Member_ManyProps.prop // Error: All props have an incorrect type.
602:   string1={null}
603:   string2={null}
...:
607: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    606:   number={null}
                   ^^^^ null. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:601
     v-----------------------------------------------------------------
601: <Member_ManyProps.prop // Error: All props have an incorrect type.
602:   string1={null}
603:   string2={null}
...:
607: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    602:   string1={null}
                    ^^^^ null. This type is incompatible with
     70:   string1: string,
                    ^^^^^^ string

Error: test.js:601
     v-----------------------------------------------------------------
601: <Member_ManyProps.prop // Error: All props have an incorrect type.
602:   string1={null}
603:   string2={null}
...:
607: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    603:   string2={null}
                    ^^^^ null. This type is incompatible with
     71:   string2: string,
                    ^^^^^^ string

Error: test.js:620
     v-------------------------------------------------
620: <Member_ManyProps.prop // Error: Missing `number`.
621:   {...{string1: 'foo', string2: 'bar'}}
622:   {...{boolean1: true, boolean2: false}}
623: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                       ^^^^^^^^^^^^^^^ property `number`. Property not found in
         v-------------------------------------------------
    620: <Member_ManyProps.prop // Error: Missing `number`.
    621:   {...{string1: 'foo', string2: 'bar'}}
    622:   {...{boolean1: true, boolean2: false}}
    623: />;
         -^ props

Error: test.js:631
     v-------------------------------------------------------------------------------
631: <Member_ManyProps.prop // OK: `number` is overwritten at the end of the element.
632:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
633:   boolean1
...:
636: />;
     -^ props. This type is incompatible with
147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                   ^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    632:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                              ^^^^^^^ null or undefined. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:641
641:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined. This type is incompatible with
640:   number={42}
               ^^ number

Error: test.js:645
645: <EnhancedClass_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `boolean1`. Property not found in
    645: <EnhancedClass_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:645
645: <EnhancedClass_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `boolean2`. Property not found in
    645: <EnhancedClass_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:645
645: <EnhancedClass_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `number`. Property not found in
    645: <EnhancedClass_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:645
645: <EnhancedClass_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `string1`. Property not found in
    645: <EnhancedClass_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:645
645: <EnhancedClass_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `string2`. Property not found in
    645: <EnhancedClass_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:663
     v-------------------------------------------------------------------
663: <EnhancedClass_ManyProps // Error: All props have an incorrect type.
664:   string1={null}
665:   string2={null}
...:
669: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    666:   boolean1={null}
                     ^^^^ null. This type is incompatible with
     72:   boolean1: boolean,
                     ^^^^^^^ boolean

Error: test.js:663
     v-------------------------------------------------------------------
663: <EnhancedClass_ManyProps // Error: All props have an incorrect type.
664:   string1={null}
665:   string2={null}
...:
669: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    667:   boolean2={null}
                     ^^^^ null. This type is incompatible with
     73:   boolean2: boolean,
                     ^^^^^^^ boolean

Error: test.js:663
     v-------------------------------------------------------------------
663: <EnhancedClass_ManyProps // Error: All props have an incorrect type.
664:   string1={null}
665:   string2={null}
...:
669: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    668:   number={null}
                   ^^^^ null. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:663
     v-------------------------------------------------------------------
663: <EnhancedClass_ManyProps // Error: All props have an incorrect type.
664:   string1={null}
665:   string2={null}
...:
669: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    664:   string1={null}
                    ^^^^ null. This type is incompatible with
     70:   string1: string,
                    ^^^^^^ string

Error: test.js:663
     v-------------------------------------------------------------------
663: <EnhancedClass_ManyProps // Error: All props have an incorrect type.
664:   string1={null}
665:   string2={null}
...:
669: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    665:   string2={null}
                    ^^^^ null. This type is incompatible with
     71:   string2: string,
                    ^^^^^^ string

Error: test.js:682
     v---------------------------------------------------
682: <EnhancedClass_ManyProps // Error: Missing `number`.
683:   {...{string1: 'foo', string2: 'bar'}}
684:   {...{boolean1: true, boolean2: false}}
685: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `number`. Property not found in
         v---------------------------------------------------
    682: <EnhancedClass_ManyProps // Error: Missing `number`.
    683:   {...{string1: 'foo', string2: 'bar'}}
    684:   {...{boolean1: true, boolean2: false}}
    685: />;
         -^ props

Error: test.js:693
     v---------------------------------------------------------------------------------
693: <EnhancedClass_ManyProps // OK: `number` is overwritten at the end of the element.
694:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
695:   boolean1
...:
698: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    694:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                              ^^^^^^^ null or undefined. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:703
703:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined. This type is incompatible with
702:   number={42}
               ^^ number

Error: test.js:707
707: <EnhancedFunction_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `boolean1`. Property not found in
    707: <EnhancedFunction_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:707
707: <EnhancedFunction_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `boolean2`. Property not found in
    707: <EnhancedFunction_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:707
707: <EnhancedFunction_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `number`. Property not found in
    707: <EnhancedFunction_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:707
707: <EnhancedFunction_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `string1`. Property not found in
    707: <EnhancedFunction_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:707
707: <EnhancedFunction_ManyProps />; // Error: There are no props.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `string2`. Property not found in
    707: <EnhancedFunction_ManyProps />; // Error: There are no props.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:725
     v----------------------------------------------------------------------
725: <EnhancedFunction_ManyProps // Error: All props have an incorrect type.
726:   string1={null}
727:   string2={null}
...:
731: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean1` is incompatible:
    728:   boolean1={null}
                     ^^^^ null. This type is incompatible with
     72:   boolean1: boolean,
                     ^^^^^^^ boolean

Error: test.js:725
     v----------------------------------------------------------------------
725: <EnhancedFunction_ManyProps // Error: All props have an incorrect type.
726:   string1={null}
727:   string2={null}
...:
731: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `boolean2` is incompatible:
    729:   boolean2={null}
                     ^^^^ null. This type is incompatible with
     73:   boolean2: boolean,
                     ^^^^^^^ boolean

Error: test.js:725
     v----------------------------------------------------------------------
725: <EnhancedFunction_ManyProps // Error: All props have an incorrect type.
726:   string1={null}
727:   string2={null}
...:
731: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    730:   number={null}
                   ^^^^ null. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:725
     v----------------------------------------------------------------------
725: <EnhancedFunction_ManyProps // Error: All props have an incorrect type.
726:   string1={null}
727:   string2={null}
...:
731: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string1` is incompatible:
    726:   string1={null}
                    ^^^^ null. This type is incompatible with
     70:   string1: string,
                    ^^^^^^ string

Error: test.js:725
     v----------------------------------------------------------------------
725: <EnhancedFunction_ManyProps // Error: All props have an incorrect type.
726:   string1={null}
727:   string2={null}
...:
731: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `string2` is incompatible:
    727:   string2={null}
                    ^^^^ null. This type is incompatible with
     71:   string2: string,
                    ^^^^^^ string

Error: test.js:744
     v------------------------------------------------------
744: <EnhancedFunction_ManyProps // Error: Missing `number`.
745:   {...{string1: 'foo', string2: 'bar'}}
746:   {...{boolean1: true, boolean2: false}}
747: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `number`. Property not found in
         v------------------------------------------------------
    744: <EnhancedFunction_ManyProps // Error: Missing `number`.
    745:   {...{string1: 'foo', string2: 'bar'}}
    746:   {...{boolean1: true, boolean2: false}}
    747: />;
         -^ props

Error: test.js:755
     v------------------------------------------------------------------------------------
755: <EnhancedFunction_ManyProps // OK: `number` is overwritten at the end of the element.
756:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
757:   boolean1
...:
760: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_ManyProps
  Property `number` is incompatible:
    756:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                              ^^^^^^^ null or undefined. This type is incompatible with
     74:   number: number,
                   ^^^^^^ number

Error: test.js:765
765:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined. This type is incompatible with
764:   number={42}
               ^^ number

Error: test.js:780
780: <Legacy_OptionalProps />; // Error: `foo` is required.
     ^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
                  v
775:   propTypes: {
776:     foo: React.PropTypes.number.isRequired,
777:     bar: React.PropTypes.number,
778:   },
       ^ propTypes of React component
  Property `foo` is incompatible:
                      v
    775:   propTypes: {
    776:     foo: React.PropTypes.number.isRequired,
    777:     bar: React.PropTypes.number,
    778:   },
           ^ property `foo`. Property not found in
    780: <Legacy_OptionalProps />; // Error: `foo` is required.
         ^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:782
782: <Legacy_OptionalProps foo={undefined} />; // Error: No ?number proptype.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
                  v
775:   propTypes: {
776:     foo: React.PropTypes.number.isRequired,
777:     bar: React.PropTypes.number,
778:   },
       ^ propTypes of React component
  Property `foo` is incompatible:
    782: <Legacy_OptionalProps foo={undefined} />; // Error: No ?number proptype.
                                    ^^^^^^^^^ undefined. This type is incompatible with
    776:     foo: React.PropTypes.number.isRequired,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number

Error: test.js:787
     v----------------------------------------------------
787: <Legacy_OptionalProps // Error: `foo` has a bad type.
788:   foo="nope"
789:   bar={2}
790: />;
     -^ props. This type is incompatible with
                  v
775:   propTypes: {
776:     foo: React.PropTypes.number.isRequired,
777:     bar: React.PropTypes.number,
778:   },
       ^ propTypes of React component
  Property `foo` is incompatible:
    788:   foo="nope"
               ^^^^^^ string. This type is incompatible with
    776:     foo: React.PropTypes.number.isRequired,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ number

Error: test.js:791
     v----------------------------------------------------
791: <Legacy_OptionalProps // Error: `bar` has a bad type.
792:   foo={4}
793:   bar="nope"
794: />;
     -^ props. This type is incompatible with
                  v
775:   propTypes: {
776:     foo: React.PropTypes.number.isRequired,
777:     bar: React.PropTypes.number,
778:   },
       ^ propTypes of React component
  Property `bar` is incompatible:
    793:   bar="nope"
               ^^^^^^ string. This type is incompatible with
    777:     bar: React.PropTypes.number,
                  ^^^^^^^^^^^^^^^^^^^^^^ number

Error: test.js:797
797: <Class_OptionalProps />; // Error: `foo` is required.
     ^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
796: class Class_OptionalProps extends React.Component<Props_OptionalProps> {}
                                                       ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    796: class Class_OptionalProps extends React.Component<Props_OptionalProps> {}
                                                           ^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in
    797: <Class_OptionalProps />; // Error: `foo` is required.
         ^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:804
     v---------------------------------------------------
804: <Class_OptionalProps // Error: `foo` has a bad type.
805:   foo="nope"
806:   bar={2}
807: />;
     -^ props. This type is incompatible with
796: class Class_OptionalProps extends React.Component<Props_OptionalProps> {}
                                                       ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    805:   foo="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                           ^^^^^^ number

Error: test.js:808
     v---------------------------------------------------
808: <Class_OptionalProps // Error: `bar` has a bad type.
809:   foo={4}
810:   bar="nope"
811: />;
     -^ props. This type is incompatible with
796: class Class_OptionalProps extends React.Component<Props_OptionalProps> {}
                                                       ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `bar` is incompatible:
    810:   bar="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                         ^^^^^^ number

Error: test.js:815
815: <ClassExact_OptionalProps />; // Error: `foo` is required.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
814:   extends React.Component<$Exact<Props_OptionalProps>> {}
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    814:   extends React.Component<$Exact<Props_OptionalProps>> {}
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in
    815: <ClassExact_OptionalProps />; // Error: `foo` is required.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:822
     v--------------------------------------------------------
822: <ClassExact_OptionalProps // Error: `foo` has a bad type.
823:   foo="nope"
824:   bar={2}
825: />;
     -^ props. This type is incompatible with
814:   extends React.Component<$Exact<Props_OptionalProps>> {}
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    823:   foo="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                           ^^^^^^ number

Error: test.js:826
     v--------------------------------------------------------
826: <ClassExact_OptionalProps // Error: `bar` has a bad type.
827:   foo={4}
828:   bar="nope"
829: />;
     -^ props. This type is incompatible with
814:   extends React.Component<$Exact<Props_OptionalProps>> {}
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `bar` is incompatible:
    828:   bar="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                         ^^^^^^ number

Error: test.js:833
833: <ClassPure_OptionalProps />; // Error: `foo` is required.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
832:   extends React.PureComponent<Props_OptionalProps> {}
                                   ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    832:   extends React.PureComponent<Props_OptionalProps> {}
                                       ^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in
    833: <ClassPure_OptionalProps />; // Error: `foo` is required.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:840
     v-------------------------------------------------------
840: <ClassPure_OptionalProps // Error: `foo` has a bad type.
841:   foo="nope"
842:   bar={2}
843: />;
     -^ props. This type is incompatible with
832:   extends React.PureComponent<Props_OptionalProps> {}
                                   ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    841:   foo="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                           ^^^^^^ number

Error: test.js:844
     v-------------------------------------------------------
844: <ClassPure_OptionalProps // Error: `bar` has a bad type.
845:   foo={4}
846:   bar="nope"
847: />;
     -^ props. This type is incompatible with
832:   extends React.PureComponent<Props_OptionalProps> {}
                                   ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `bar` is incompatible:
    846:   bar="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                         ^^^^^^ number

Error: test.js:850
850: <Function_OptionalProps />; // Error: `foo` is required.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
849: const Function_OptionalProps = (props: Props_OptionalProps) => any;
                                            ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    849: const Function_OptionalProps = (props: Props_OptionalProps) => any;
                                                ^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in
    850: <Function_OptionalProps />; // Error: `foo` is required.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:857
     v------------------------------------------------------
857: <Function_OptionalProps // Error: `foo` has a bad type.
858:   foo="nope"
859:   bar={2}
860: />;
     -^ props. This type is incompatible with
849: const Function_OptionalProps = (props: Props_OptionalProps) => any;
                                            ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    858:   foo="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                           ^^^^^^ number

Error: test.js:861
     v------------------------------------------------------
861: <Function_OptionalProps // Error: `bar` has a bad type.
862:   foo={4}
863:   bar="nope"
864: />;
     -^ props. This type is incompatible with
849: const Function_OptionalProps = (props: Props_OptionalProps) => any;
                                            ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `bar` is incompatible:
    863:   bar="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                         ^^^^^^ number

Error: test.js:867
867: <FunctionExact_OptionalProps />; // Error: `foo` is required.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
866: const FunctionExact_OptionalProps = (props: $Exact<Props_OptionalProps>) => any;
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    866: const FunctionExact_OptionalProps = (props: $Exact<Props_OptionalProps>) => any;
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in
    867: <FunctionExact_OptionalProps />; // Error: `foo` is required.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:874
     v-----------------------------------------------------------
874: <FunctionExact_OptionalProps // Error: `foo` has a bad type.
875:   foo="nope"
876:   bar={2}
877: />;
     -^ props. This type is incompatible with
866: const FunctionExact_OptionalProps = (props: $Exact<Props_OptionalProps>) => any;
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    875:   foo="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                           ^^^^^^ number

Error: test.js:878
     v-----------------------------------------------------------
878: <FunctionExact_OptionalProps // Error: `bar` has a bad type.
879:   foo={4}
880:   bar="nope"
881: />;
     -^ props. This type is incompatible with
866: const FunctionExact_OptionalProps = (props: $Exact<Props_OptionalProps>) => any;
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `bar` is incompatible:
    880:   bar="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                         ^^^^^^ number

Error: test.js:884
884: <Abstract_OptionalProps />; // Error: `foo` is required.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
883: const Abstract_OptionalProps: React.ComponentType<Props_OptionalProps> = any;
                                                       ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    883: const Abstract_OptionalProps: React.ComponentType<Props_OptionalProps> = any;
                                                           ^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in
    884: <Abstract_OptionalProps />; // Error: `foo` is required.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:891
     v------------------------------------------------------
891: <Abstract_OptionalProps // Error: `foo` has a bad type.
892:   foo="nope"
893:   bar={2}
894: />;
     -^ props. This type is incompatible with
883: const Abstract_OptionalProps: React.ComponentType<Props_OptionalProps> = any;
                                                       ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    892:   foo="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                           ^^^^^^ number

Error: test.js:895
     v------------------------------------------------------
895: <Abstract_OptionalProps // Error: `bar` has a bad type.
896:   foo={4}
897:   bar="nope"
898: />;
     -^ props. This type is incompatible with
883: const Abstract_OptionalProps: React.ComponentType<Props_OptionalProps> = any;
                                                       ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `bar` is incompatible:
    897:   bar="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                         ^^^^^^ number

Error: test.js:902
902: <AbstractExact_OptionalProps />; // Error: `foo` is required.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
901:   React.ComponentType<$Exact<Props_OptionalProps>> = any;
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    901:   React.ComponentType<$Exact<Props_OptionalProps>> = any;
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in
    902: <AbstractExact_OptionalProps />; // Error: `foo` is required.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:909
     v-----------------------------------------------------------
909: <AbstractExact_OptionalProps // Error: `foo` has a bad type.
910:   foo="nope"
911:   bar={2}
912: />;
     -^ props. This type is incompatible with
901:   React.ComponentType<$Exact<Props_OptionalProps>> = any;
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    910:   foo="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                           ^^^^^^ number

Error: test.js:913
     v-----------------------------------------------------------
913: <AbstractExact_OptionalProps // Error: `bar` has a bad type.
914:   foo={4}
915:   bar="nope"
916: />;
     -^ props. This type is incompatible with
901:   React.ComponentType<$Exact<Props_OptionalProps>> = any;
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `bar` is incompatible:
    915:   bar="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                         ^^^^^^ number

Error: test.js:919
919: <Member_OptionalProps.prop />; // Error: `foo` is required.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
796: class Class_OptionalProps extends React.Component<Props_OptionalProps> {}
                                                       ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    796: class Class_OptionalProps extends React.Component<Props_OptionalProps> {}
                                                           ^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in
    919: <Member_OptionalProps.prop />; // Error: `foo` is required.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:926
     v---------------------------------------------------------
926: <Member_OptionalProps.prop // Error: `foo` has a bad type.
927:   foo="nope"
928:   bar={2}
929: />;
     -^ props. This type is incompatible with
796: class Class_OptionalProps extends React.Component<Props_OptionalProps> {}
                                                       ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    927:   foo="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                           ^^^^^^ number

Error: test.js:930
     v---------------------------------------------------------
930: <Member_OptionalProps.prop // Error: `bar` has a bad type.
931:   foo={4}
932:   bar="nope"
933: />;
     -^ props. This type is incompatible with
796: class Class_OptionalProps extends React.Component<Props_OptionalProps> {}
                                                       ^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `bar` is incompatible:
    932:   bar="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                         ^^^^^^ number

Error: test.js:936
936: <EnhancedClass_OptionalProps />; // Error: `foo` is required.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in
    936: <EnhancedClass_OptionalProps />; // Error: `foo` is required.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:943
     v-----------------------------------------------------------
943: <EnhancedClass_OptionalProps // Error: `foo` has a bad type.
944:   foo="nope"
945:   bar={2}
946: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    944:   foo="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                           ^^^^^^ number

Error: test.js:947
     v-----------------------------------------------------------
947: <EnhancedClass_OptionalProps // Error: `bar` has a bad type.
948:   foo={4}
949:   bar="nope"
950: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `bar` is incompatible:
    949:   bar="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                         ^^^^^^ number

Error: test.js:953
953: <EnhancedFunction_OptionalProps />; // Error: `foo` is required.
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `foo`. Property not found in
    953: <EnhancedFunction_OptionalProps />; // Error: `foo` is required.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ props

Error: test.js:960
     v--------------------------------------------------------------
960: <EnhancedFunction_OptionalProps // Error: `foo` has a bad type.
961:   foo="nope"
962:   bar={2}
963: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `foo` is incompatible:
    961:   foo="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                           ^^^^^^ number

Error: test.js:964
     v--------------------------------------------------------------
964: <EnhancedFunction_OptionalProps // Error: `bar` has a bad type.
965:   foo={4}
966:   bar="nope"
967: />;
     -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_OptionalProps
  Property `bar` is incompatible:
    966:   bar="nope"
               ^^^^^^ string. This type is incompatible with
    772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                         ^^^^^^ number

Error: test.js:994
     v------------------------------------------------------------------------
994: <Legacy_DefaultProps // Error: It is missing a required non-default prop.
995:   foo={1}
996: />;
     -^ props. This type is incompatible with
                  v
979:   propTypes: {
980:     foo: React.PropTypes.number.isRequired,
981:     bar: React.PropTypes.number.isRequired,
982:   },
       ^ propTypes of React component
  Property `bar` is incompatible:
                      v
    979:   propTypes: {
    980:     foo: React.PropTypes.number.isRequired,
    981:     bar: React.PropTypes.number.isRequired,
    982:   },
           ^ property `bar`. Property not found in
         v------------------------------------------------------------------------
    994: <Legacy_DefaultProps // Error: It is missing a required non-default prop.
    995:   foo={1}
    996: />;
         -^ props

Error: test.js:1010
      v-----------------------------------------------------------------------
1010: <Class_DefaultProps // Error: It is missing a required non-default prop.
1011:   foo={1}
1012: />;
      -^ props. This type is incompatible with
998: class Class_DefaultProps extends React.Component<Props_DefaultProps> {
                                                      ^^^^^^^^^^^^^^^^^^ Props_DefaultProps
  Property `bar` is incompatible:
    998: class Class_DefaultProps extends React.Component<Props_DefaultProps> {
                                                          ^^^^^^^^^^^^^^^^^^ property `bar`. Property not found in
          v-----------------------------------------------------------------------
    1010: <Class_DefaultProps // Error: It is missing a required non-default prop.
    1011:   foo={1}
    1012: />;
          -^ props

Error: test.js:1027
      v----------------------------------------------------------------------------
1027: <ClassExact_DefaultProps // Error: It is missing a required non-default prop.
1028:   foo={1}
1029: />;
      -^ props. This type is incompatible with
1015:   extends React.Component<$Exact<Props_DefaultProps>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_DefaultProps
  Property `bar` is incompatible:
    1015:   extends React.Component<$Exact<Props_DefaultProps>> {
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ property `bar`. Property not found in
          v----------------------------------------------------------------------------
    1027: <ClassExact_DefaultProps // Error: It is missing a required non-default prop.
    1028:   foo={1}
    1029: />;
          -^ props

Error: test.js:1043
      v---------------------------------------------------------------------------
1043: <ClassPure_DefaultProps // Error: It is missing a required non-default prop.
1044:   foo={1}
1045: />;
      -^ props. This type is incompatible with
1031: class ClassPure_DefaultProps extends React.PureComponent<Props_DefaultProps> {
                                                               ^^^^^^^^^^^^^^^^^^ Props_DefaultProps
  Property `bar` is incompatible:
    1031: class ClassPure_DefaultProps extends React.PureComponent<Props_DefaultProps> {
                                                                   ^^^^^^^^^^^^^^^^^^ property `bar`. Property not found in
          v---------------------------------------------------------------------------
    1043: <ClassPure_DefaultProps // Error: It is missing a required non-default prop.
    1044:   foo={1}
    1045: />;
          -^ props

Error: test.js:1060
      v--------------------------------------------------------------------------
1060: <Function_DefaultProps // Error: It is missing a required non-default prop.
1061:   foo={1}
1062: />;
      -^ props. This type is incompatible with
1047: function Function_DefaultProps(props: Props_DefaultProps) {
                                            ^^^^^^^^^^^^^^^^^^ Props_DefaultProps
  Property `bar` is incompatible:
    1047: function Function_DefaultProps(props: Props_DefaultProps) {
                                                ^^^^^^^^^^^^^^^^^^ property `bar`. Property not found in
          v--------------------------------------------------------------------------
    1060: <Function_DefaultProps // Error: It is missing a required non-default prop.
    1061:   foo={1}
    1062: />;
          -^ props

Error: test.js:1077
      v-------------------------------------------------------------------------------
1077: <FunctionExact_DefaultProps // Error: It is missing a required non-default prop.
1078:   foo={1}
1079: />;
      -^ props. This type is incompatible with
1064: function FunctionExact_DefaultProps(props: $Exact<Props_DefaultProps>) {
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_DefaultProps
  Property `bar` is incompatible:
    1064: function FunctionExact_DefaultProps(props: $Exact<Props_DefaultProps>) {
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^ property `bar`. Property not found in
          v-------------------------------------------------------------------------------
    1077: <FunctionExact_DefaultProps // Error: It is missing a required non-default prop.
    1078:   foo={1}
    1079: />;
          -^ props

Error: test.js:1089
      v-----------------------------------------------------------------------------
1089: <Member_DefaultProps.prop // Error: It is missing a required non-default prop.
1090:   foo={1}
1091: />;
      -^ props. This type is incompatible with
998: class Class_DefaultProps extends React.Component<Props_DefaultProps> {
                                                      ^^^^^^^^^^^^^^^^^^ Props_DefaultProps
  Property `bar` is incompatible:
    998: class Class_DefaultProps extends React.Component<Props_DefaultProps> {
                                                          ^^^^^^^^^^^^^^^^^^ property `bar`. Property not found in
          v-----------------------------------------------------------------------------
    1089: <Member_DefaultProps.prop // Error: It is missing a required non-default prop.
    1090:   foo={1}
    1091: />;
          -^ props

Error: test.js:1101
      v-------------------------------------------------------------------------------
1101: <EnhancedClass_DefaultProps // Error: It is missing a required non-default prop.
1102:   foo={1}
1103: />;
      -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_DefaultProps
  Property `bar` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `bar`. Property not found in
          v-------------------------------------------------------------------------------
    1101: <EnhancedClass_DefaultProps // Error: It is missing a required non-default prop.
    1102:   foo={1}
    1103: />;
          -^ props

Error: test.js:1113
      v----------------------------------------------------------------------------------
1113: <EnhancedFunction_DefaultProps // Error: It is missing a required non-default prop.
1114:   foo={1}
1115: />;
      -^ props. This type is incompatible with
 11: ): React.ComponentType<React.ElementConfig<Component>> {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Props_DefaultProps
  Property `bar` is incompatible:
     11: ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ property `bar`. Property not found in
          v----------------------------------------------------------------------------------
    1113: <EnhancedFunction_DefaultProps // Error: It is missing a required non-default prop.
    1114:   foo={1}
    1115: />;
          -^ props


Found 216 errors
