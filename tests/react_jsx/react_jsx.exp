Error ----------------------------------------------------------------------------------------------------- test.js:31:2

Error: test.js:31
 31: <ClassExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
      ^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_NoProps` element because property `foo` is missing in `Props_NoProps` [1] but exists in props [2].
  References:
   29: class ClassExact_NoProps extends React.Component<$Exact<Props_NoProps>> {}
                                                               ^^^^^^^^^^^^^ [1]: `Props_NoProps`
   31: <ClassExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: props

Error ----------------------------------------------------------------------------------------------------- test.js:43:2

Error: test.js:43
 43: <FunctionExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
      ^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_NoProps` element because property `foo` is missing in `Props_NoProps` [1] but exists in props [2].
  References:
   41: const FunctionExact_NoProps = (props: $Exact<Props_NoProps>) => any;
                                                    ^^^^^^^^^^^^^ [1]: `Props_NoProps`
   43: <FunctionExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: props

Error ----------------------------------------------------------------------------------------------------- test.js:51:2

Error: test.js:51
 51: <AbstractExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
      ^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_NoProps` element because property `foo` is missing in `Props_NoProps` [1] but exists in props [2].
  References:
   49: const AbstractExact_NoProps: React.ComponentType<$Exact<Props_NoProps>> = any;
                                                               ^^^^^^^^^^^^^ [1]: `Props_NoProps`
   51: <AbstractExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: props

Error ----------------------------------------------------------------------------------------------------- test.js:86:2

Error: test.js:86
 86: <Legacy_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^ Cannot create `Legacy_ManyProps` element because property `boolean1` is missing in props [1] but exists in propTypes of React component [2].
  References:
   86: <Legacy_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^ [1]: props
                    v
   78:   propTypes: {
   79:     string1: React.PropTypes.string.isRequired,
   80:     string2: React.PropTypes.string.isRequired,
  ...:
   84:   },
         ^ [2]: propTypes of React component

Error ----------------------------------------------------------------------------------------------------- test.js:86:2

Error: test.js:86
 86: <Legacy_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^ Cannot create `Legacy_ManyProps` element because property `boolean2` is missing in props [1] but exists in propTypes of React component [2].
  References:
   86: <Legacy_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^ [1]: props
                    v
   78:   propTypes: {
   79:     string1: React.PropTypes.string.isRequired,
   80:     string2: React.PropTypes.string.isRequired,
  ...:
   84:   },
         ^ [2]: propTypes of React component

Error ----------------------------------------------------------------------------------------------------- test.js:86:2

Error: test.js:86
 86: <Legacy_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^ Cannot create `Legacy_ManyProps` element because property `number` is missing in props [1] but exists in propTypes of React component [2].
  References:
   86: <Legacy_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^ [1]: props
                    v
   78:   propTypes: {
   79:     string1: React.PropTypes.string.isRequired,
   80:     string2: React.PropTypes.string.isRequired,
  ...:
   84:   },
         ^ [2]: propTypes of React component

Error ----------------------------------------------------------------------------------------------------- test.js:86:2

Error: test.js:86
 86: <Legacy_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^ Cannot create `Legacy_ManyProps` element because property `string1` is missing in props [1] but exists in propTypes of React component [2].
  References:
   86: <Legacy_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^ [1]: props
                    v
   78:   propTypes: {
   79:     string1: React.PropTypes.string.isRequired,
   80:     string2: React.PropTypes.string.isRequired,
  ...:
   84:   },
         ^ [2]: propTypes of React component

Error ----------------------------------------------------------------------------------------------------- test.js:86:2

Error: test.js:86
 86: <Legacy_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^ Cannot create `Legacy_ManyProps` element because property `string2` is missing in props [1] but exists in propTypes of React component [2].
  References:
   86: <Legacy_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^ [1]: props
                    v
   78:   propTypes: {
   79:     string1: React.PropTypes.string.isRequired,
   80:     string2: React.PropTypes.string.isRequired,
  ...:
   84:   },
         ^ [2]: propTypes of React component

Error --------------------------------------------------------------------------------------------------- test.js:105:12

Error: test.js:105
105:   string1={null}
                ^^^^ Cannot create `Legacy_ManyProps` element because in property `string1`, null [1] is incompatible with string [2].
  References:
  105:   string1={null}
                  ^^^^ [1]: null
  296:   string: React$PropType$Primitive<string>;
                                          ^^^^^^ [2]: string. See lib: <BUILTINS>/react.js:296

Error --------------------------------------------------------------------------------------------------- test.js:106:12

Error: test.js:106
106:   string2={null}
                ^^^^ Cannot create `Legacy_ManyProps` element because in property `string2`, null [1] is incompatible with string [2].
  References:
  106:   string2={null}
                  ^^^^ [1]: null
  296:   string: React$PropType$Primitive<string>;
                                          ^^^^^^ [2]: string. See lib: <BUILTINS>/react.js:296

Error --------------------------------------------------------------------------------------------------- test.js:107:13

Error: test.js:107
107:   boolean1={null}
                 ^^^^ Cannot create `Legacy_ManyProps` element because in property `boolean1`, null [1] is incompatible with boolean [2].
  References:
  107:   boolean1={null}
                   ^^^^ [1]: null
  292:   bool: React$PropType$Primitive<boolean>;
                                        ^^^^^^^ [2]: boolean. See lib: <BUILTINS>/react.js:292

Error --------------------------------------------------------------------------------------------------- test.js:108:13

Error: test.js:108
108:   boolean2={null}
                 ^^^^ Cannot create `Legacy_ManyProps` element because in property `boolean2`, null [1] is incompatible with boolean [2].
  References:
  108:   boolean2={null}
                   ^^^^ [1]: null
  292:   bool: React$PropType$Primitive<boolean>;
                                        ^^^^^^^ [2]: boolean. See lib: <BUILTINS>/react.js:292

Error --------------------------------------------------------------------------------------------------- test.js:109:11

Error: test.js:109
109:   number={null}
               ^^^^ Cannot create `Legacy_ManyProps` element because in property `number`, null [1] is incompatible with number [2].
  References:
  109:   number={null}
                 ^^^^ [1]: null
  294:   number: React$PropType$Primitive<number>;
                                          ^^^^^^ [2]: number. See lib: <BUILTINS>/react.js:294

Error ---------------------------------------------------------------------------------------------------- test.js:123:2

Error: test.js:123
123: <Legacy_ManyProps // Error: Missing `number`.
      ^^^^^^^^^^^^^^^^ Cannot create `Legacy_ManyProps` element because property `number` is missing in props [1] but exists in propTypes of React component [2].
  References:
       v--------------------------------------------
  123: <Legacy_ManyProps // Error: Missing `number`.
  124:   {...{string1: 'foo', string2: 'bar'}}
  125:   {...{boolean1: true, boolean2: false}}
  126: />;
       -^ [1]: props
                    v
   78:   propTypes: {
   79:     string1: React.PropTypes.string.isRequired,
   80:     string2: React.PropTypes.string.isRequired,
  ...:
   84:   },
         ^ [2]: propTypes of React component

Error --------------------------------------------------------------------------------------------------- test.js:135:54

Error: test.js:135
135:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ Cannot create `Legacy_ManyProps` element because in property `number`, null or undefined [1] is incompatible with number [2].
  References:
  135:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
  294:   number: React$PropType$Primitive<number>;
                                          ^^^^^^ [2]: number. See lib: <BUILTINS>/react.js:294

Error --------------------------------------------------------------------------------------------------- test.js:144:54

Error: test.js:144
144:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined [1] is incompatible with number [2].
  References:
  144:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
  143:   number={42}
                 ^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:148:2

Error: test.js:148
148: <Class_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^ Cannot create `Class_ManyProps` element because property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  148: <Class_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^ [1]: props
  147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:148:2

Error: test.js:148
148: <Class_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^ Cannot create `Class_ManyProps` element because property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  148: <Class_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^ [1]: props
  147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:148:2

Error: test.js:148
148: <Class_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^ Cannot create `Class_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  148: <Class_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^ [1]: props
  147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:148:2

Error: test.js:148
148: <Class_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^ Cannot create `Class_ManyProps` element because property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  148: <Class_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^ [1]: props
  147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:148:2

Error: test.js:148
148: <Class_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^ Cannot create `Class_ManyProps` element because property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  148: <Class_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^ [1]: props
  147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:167:12

Error: test.js:167
167:   string1={null}
                ^^^^ Cannot create `Class_ManyProps` element because in property `string1`, null [1] is incompatible with string [2].
  References:
  167:   string1={null}
                  ^^^^ [1]: null
   70:   string1: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:168:12

Error: test.js:168
168:   string2={null}
                ^^^^ Cannot create `Class_ManyProps` element because in property `string2`, null [1] is incompatible with string [2].
  References:
  168:   string2={null}
                  ^^^^ [1]: null
   71:   string2: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:169:13

Error: test.js:169
169:   boolean1={null}
                 ^^^^ Cannot create `Class_ManyProps` element because in property `boolean1`, null [1] is incompatible with boolean [2].
  References:
  169:   boolean1={null}
                   ^^^^ [1]: null
   72:   boolean1: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:170:13

Error: test.js:170
170:   boolean2={null}
                 ^^^^ Cannot create `Class_ManyProps` element because in property `boolean2`, null [1] is incompatible with boolean [2].
  References:
  170:   boolean2={null}
                   ^^^^ [1]: null
   73:   boolean2: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:171:11

Error: test.js:171
171:   number={null}
               ^^^^ Cannot create `Class_ManyProps` element because in property `number`, null [1] is incompatible with number [2].
  References:
  171:   number={null}
                 ^^^^ [1]: null
   74:   number: number,
                 ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:185:2

Error: test.js:185
185: <Class_ManyProps // Error: Missing `number`.
      ^^^^^^^^^^^^^^^ Cannot create `Class_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
       v-------------------------------------------
  185: <Class_ManyProps // Error: Missing `number`.
  186:   {...{string1: 'foo', string2: 'bar'}}
  187:   {...{boolean1: true, boolean2: false}}
  188: />;
       -^ [1]: props
  147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:197:54

Error: test.js:197
197:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ Cannot create `Class_ManyProps` element because in property `number`, null or undefined [1] is incompatible with number [2].
  References:
  197:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
   74:   number: number,
                 ^^^^^^ [2]: number

Error --------------------------------------------------------------------------------------------------- test.js:206:54

Error: test.js:206
206:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined [1] is incompatible with number [2].
  References:
  206:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
  205:   number={42}
                 ^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:210:2

Error: test.js:210
210: <ClassExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  210: <ClassExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                 ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:210:2

Error: test.js:210
210: <ClassExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  210: <ClassExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                 ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:210:2

Error: test.js:210
210: <ClassExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  210: <ClassExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                 ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:210:2

Error: test.js:210
210: <ClassExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  210: <ClassExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                 ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:210:2

Error: test.js:210
210: <ClassExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  210: <ClassExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                 ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:218:2

Error: test.js:218
218: <ClassExact_ManyProps // Error: Extra props are not allowed.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because property `a` is missing in `Props_ManyProps` [1] but exists in props [2].
  References:
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                 ^^^^^^^^^^^^^^^ [1]: `Props_ManyProps`
       v-----------------------------------------------------------
  218: <ClassExact_ManyProps // Error: Extra props are not allowed.
  219:   string1="foo"
  220:   string2={'bar'}
  ...:
  227: />;
       -^ [2]: props

Error ---------------------------------------------------------------------------------------------------- test.js:218:2

Error: test.js:218
218: <ClassExact_ManyProps // Error: Extra props are not allowed.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because property `b` is missing in `Props_ManyProps` [1] but exists in props [2].
  References:
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                 ^^^^^^^^^^^^^^^ [1]: `Props_ManyProps`
       v-----------------------------------------------------------
  218: <ClassExact_ManyProps // Error: Extra props are not allowed.
  219:   string1="foo"
  220:   string2={'bar'}
  ...:
  227: />;
       -^ [2]: props

Error ---------------------------------------------------------------------------------------------------- test.js:218:2

Error: test.js:218
218: <ClassExact_ManyProps // Error: Extra props are not allowed.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because property `c` is missing in `Props_ManyProps` [1] but exists in props [2].
  References:
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                 ^^^^^^^^^^^^^^^ [1]: `Props_ManyProps`
       v-----------------------------------------------------------
  218: <ClassExact_ManyProps // Error: Extra props are not allowed.
  219:   string1="foo"
  220:   string2={'bar'}
  ...:
  227: />;
       -^ [2]: props

Error --------------------------------------------------------------------------------------------------- test.js:229:12

Error: test.js:229
229:   string1={null}
                ^^^^ Cannot create `ClassExact_ManyProps` element because in property `string1`, null [1] is incompatible with string [2].
  References:
  229:   string1={null}
                  ^^^^ [1]: null
   70:   string1: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:230:12

Error: test.js:230
230:   string2={null}
                ^^^^ Cannot create `ClassExact_ManyProps` element because in property `string2`, null [1] is incompatible with string [2].
  References:
  230:   string2={null}
                  ^^^^ [1]: null
   71:   string2: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:231:13

Error: test.js:231
231:   boolean1={null}
                 ^^^^ Cannot create `ClassExact_ManyProps` element because in property `boolean1`, null [1] is incompatible with boolean [2].
  References:
  231:   boolean1={null}
                   ^^^^ [1]: null
   72:   boolean1: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:232:13

Error: test.js:232
232:   boolean2={null}
                 ^^^^ Cannot create `ClassExact_ManyProps` element because in property `boolean2`, null [1] is incompatible with boolean [2].
  References:
  232:   boolean2={null}
                   ^^^^ [1]: null
   73:   boolean2: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:233:11

Error: test.js:233
233:   number={null}
               ^^^^ Cannot create `ClassExact_ManyProps` element because in property `number`, null [1] is incompatible with number [2].
  References:
  233:   number={null}
                 ^^^^ [1]: null
   74:   number: number,
                 ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:235:2

Error: test.js:235
235: <ClassExact_ManyProps // OK: All props are defined. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v-------------------------------------------------------------------------
  235: <ClassExact_ManyProps // OK: All props are defined. Error for exact types.
  236:   string1="foo"
  237:   string2={'bar'}
  ...:
  241: />;
       -^ [1]: props
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                          ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:242:2

Error: test.js:242
242: <ClassExact_ManyProps // OK: All props are defined. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v-------------------------------------------------------------------------
  242: <ClassExact_ManyProps // OK: All props are defined. Error for exact types.
  243:   {...{string1: 'foo', string2: 'bar'}}
  244:   {...{boolean1: true, boolean2: false}}
  245:   {...{number: 42}}
  246: />;
       -^ [1]: props
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                          ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:247:2

Error: test.js:247
247: <ClassExact_ManyProps // Error: Missing `number`.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v------------------------------------------------
  247: <ClassExact_ManyProps // Error: Missing `number`.
  248:   {...{string1: 'foo', string2: 'bar'}}
  249:   {...{boolean1: true, boolean2: false}}
  250: />;
       -^ [1]: props
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                          ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:247:2

Error: test.js:247
247: <ClassExact_ManyProps // Error: Missing `number`.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
       v------------------------------------------------
  247: <ClassExact_ManyProps // Error: Missing `number`.
  248:   {...{string1: 'foo', string2: 'bar'}}
  249:   {...{boolean1: true, boolean2: false}}
  250: />;
       -^ [1]: props
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                 ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:251:2

Error: test.js:251
251: <ClassExact_ManyProps // OK: Extra props are allowed. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v---------------------------------------------------------------------------
  251: <ClassExact_ManyProps // OK: Extra props are allowed. Error for exact types.
  252:   string1="foo"
  253:   string2={'bar'}
  ...:
  257: />;
       -^ [1]: props
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                          ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:258:2

Error: test.js:258
258: <ClassExact_ManyProps // OK: `number` is overwritten at the end of the element. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v-----------------------------------------------------------------------------------------------------
  258: <ClassExact_ManyProps // OK: `number` is overwritten at the end of the element. Error for exact types.
  259:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
  260:   boolean1
  ...:
  263: />;
       -^ [1]: props
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                          ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:259:54

Error: test.js:259
259:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ Cannot create `ClassExact_ManyProps` element because in property `number`, null or undefined [1] is incompatible with number [2].
  References:
  259:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
   74:   number: number,
                 ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:264:2

Error: test.js:264
264: <ClassExact_ManyProps // Error: `number` cannot be null. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v------------------------------------------------------------------------------
  264: <ClassExact_ManyProps // Error: `number` cannot be null. Error for exact types.
  265:   boolean1
  266:   boolean2={false}
  ...:
  269: />;
       -^ [1]: props
  209: class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                          ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:268:54

Error: test.js:268
268:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined [1] is incompatible with number [2].
  References:
  268:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
  267:   number={42}
                 ^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:272:2

Error: test.js:272
272: <ClassPure_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^ Cannot create `ClassPure_ManyProps` element because property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  272: <ClassPure_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                             ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:272:2

Error: test.js:272
272: <ClassPure_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^ Cannot create `ClassPure_ManyProps` element because property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  272: <ClassPure_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                             ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:272:2

Error: test.js:272
272: <ClassPure_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^ Cannot create `ClassPure_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  272: <ClassPure_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                             ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:272:2

Error: test.js:272
272: <ClassPure_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^ Cannot create `ClassPure_ManyProps` element because property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  272: <ClassPure_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                             ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:272:2

Error: test.js:272
272: <ClassPure_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^ Cannot create `ClassPure_ManyProps` element because property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  272: <ClassPure_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                             ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:291:12

Error: test.js:291
291:   string1={null}
                ^^^^ Cannot create `ClassPure_ManyProps` element because in property `string1`, null [1] is incompatible with string [2].
  References:
  291:   string1={null}
                  ^^^^ [1]: null
   70:   string1: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:292:12

Error: test.js:292
292:   string2={null}
                ^^^^ Cannot create `ClassPure_ManyProps` element because in property `string2`, null [1] is incompatible with string [2].
  References:
  292:   string2={null}
                  ^^^^ [1]: null
   71:   string2: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:293:13

Error: test.js:293
293:   boolean1={null}
                 ^^^^ Cannot create `ClassPure_ManyProps` element because in property `boolean1`, null [1] is incompatible with boolean [2].
  References:
  293:   boolean1={null}
                   ^^^^ [1]: null
   72:   boolean1: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:294:13

Error: test.js:294
294:   boolean2={null}
                 ^^^^ Cannot create `ClassPure_ManyProps` element because in property `boolean2`, null [1] is incompatible with boolean [2].
  References:
  294:   boolean2={null}
                   ^^^^ [1]: null
   73:   boolean2: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:295:11

Error: test.js:295
295:   number={null}
               ^^^^ Cannot create `ClassPure_ManyProps` element because in property `number`, null [1] is incompatible with number [2].
  References:
  295:   number={null}
                 ^^^^ [1]: null
   74:   number: number,
                 ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:309:2

Error: test.js:309
309: <ClassPure_ManyProps // Error: Missing `number`.
      ^^^^^^^^^^^^^^^^^^^ Cannot create `ClassPure_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
       v-----------------------------------------------
  309: <ClassPure_ManyProps // Error: Missing `number`.
  310:   {...{string1: 'foo', string2: 'bar'}}
  311:   {...{boolean1: true, boolean2: false}}
  312: />;
       -^ [1]: props
  271: class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                             ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:321:54

Error: test.js:321
321:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ Cannot create `ClassPure_ManyProps` element because in property `number`, null or undefined [1] is incompatible with number [2].
  References:
  321:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
   74:   number: number,
                 ^^^^^^ [2]: number

Error --------------------------------------------------------------------------------------------------- test.js:330:54

Error: test.js:330
330:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined [1] is incompatible with number [2].
  References:
  330:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
  329:   number={42}
                 ^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:334:2

Error: test.js:334
334: <Function_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^ Cannot create `Function_ManyProps` element because property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  334: <Function_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                          ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:334:2

Error: test.js:334
334: <Function_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^ Cannot create `Function_ManyProps` element because property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  334: <Function_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                          ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:334:2

Error: test.js:334
334: <Function_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^ Cannot create `Function_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  334: <Function_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                          ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:334:2

Error: test.js:334
334: <Function_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^ Cannot create `Function_ManyProps` element because property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  334: <Function_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                          ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:334:2

Error: test.js:334
334: <Function_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^ Cannot create `Function_ManyProps` element because property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  334: <Function_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                          ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:353:12

Error: test.js:353
353:   string1={null}
                ^^^^ Cannot create `Function_ManyProps` element because in property `string1`, null [1] is incompatible with string [2].
  References:
  353:   string1={null}
                  ^^^^ [1]: null
   70:   string1: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:354:12

Error: test.js:354
354:   string2={null}
                ^^^^ Cannot create `Function_ManyProps` element because in property `string2`, null [1] is incompatible with string [2].
  References:
  354:   string2={null}
                  ^^^^ [1]: null
   71:   string2: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:355:13

Error: test.js:355
355:   boolean1={null}
                 ^^^^ Cannot create `Function_ManyProps` element because in property `boolean1`, null [1] is incompatible with boolean [2].
  References:
  355:   boolean1={null}
                   ^^^^ [1]: null
   72:   boolean1: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:356:13

Error: test.js:356
356:   boolean2={null}
                 ^^^^ Cannot create `Function_ManyProps` element because in property `boolean2`, null [1] is incompatible with boolean [2].
  References:
  356:   boolean2={null}
                   ^^^^ [1]: null
   73:   boolean2: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:357:11

Error: test.js:357
357:   number={null}
               ^^^^ Cannot create `Function_ManyProps` element because in property `number`, null [1] is incompatible with number [2].
  References:
  357:   number={null}
                 ^^^^ [1]: null
   74:   number: number,
                 ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:371:2

Error: test.js:371
371: <Function_ManyProps // Error: Missing `number`.
      ^^^^^^^^^^^^^^^^^^ Cannot create `Function_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
       v----------------------------------------------
  371: <Function_ManyProps // Error: Missing `number`.
  372:   {...{string1: 'foo', string2: 'bar'}}
  373:   {...{boolean1: true, boolean2: false}}
  374: />;
       -^ [1]: props
  333: const Function_ManyProps = (props: Props_ManyProps) => any;
                                          ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:383:54

Error: test.js:383
383:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ Cannot create `Function_ManyProps` element because in property `number`, null or undefined [1] is incompatible with number [2].
  References:
  383:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
   74:   number: number,
                 ^^^^^^ [2]: number

Error --------------------------------------------------------------------------------------------------- test.js:392:54

Error: test.js:392
392:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined [1] is incompatible with number [2].
  References:
  392:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
  391:   number={42}
                 ^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:396:2

Error: test.js:396
396: <FunctionExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  396: <FunctionExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                      ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:396:2

Error: test.js:396
396: <FunctionExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  396: <FunctionExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                      ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:396:2

Error: test.js:396
396: <FunctionExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  396: <FunctionExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                      ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:396:2

Error: test.js:396
396: <FunctionExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  396: <FunctionExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                      ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:396:2

Error: test.js:396
396: <FunctionExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  396: <FunctionExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                      ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:404:2

Error: test.js:404
404: <FunctionExact_ManyProps // OK: Other props are allowed.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because property `a` is missing in `Props_ManyProps` [1] but exists in props [2].
  References:
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                      ^^^^^^^^^^^^^^^ [1]: `Props_ManyProps`
       v-------------------------------------------------------
  404: <FunctionExact_ManyProps // OK: Other props are allowed.
  405:   string1="foo"
  406:   string2={'bar'}
  ...:
  413: />;
       -^ [2]: props

Error ---------------------------------------------------------------------------------------------------- test.js:404:2

Error: test.js:404
404: <FunctionExact_ManyProps // OK: Other props are allowed.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because property `b` is missing in `Props_ManyProps` [1] but exists in props [2].
  References:
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                      ^^^^^^^^^^^^^^^ [1]: `Props_ManyProps`
       v-------------------------------------------------------
  404: <FunctionExact_ManyProps // OK: Other props are allowed.
  405:   string1="foo"
  406:   string2={'bar'}
  ...:
  413: />;
       -^ [2]: props

Error ---------------------------------------------------------------------------------------------------- test.js:404:2

Error: test.js:404
404: <FunctionExact_ManyProps // OK: Other props are allowed.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because property `c` is missing in `Props_ManyProps` [1] but exists in props [2].
  References:
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                      ^^^^^^^^^^^^^^^ [1]: `Props_ManyProps`
       v-------------------------------------------------------
  404: <FunctionExact_ManyProps // OK: Other props are allowed.
  405:   string1="foo"
  406:   string2={'bar'}
  ...:
  413: />;
       -^ [2]: props

Error --------------------------------------------------------------------------------------------------- test.js:415:12

Error: test.js:415
415:   string1={null}
                ^^^^ Cannot create `FunctionExact_ManyProps` element because in property `string1`, null [1] is incompatible with string [2].
  References:
  415:   string1={null}
                  ^^^^ [1]: null
   70:   string1: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:416:12

Error: test.js:416
416:   string2={null}
                ^^^^ Cannot create `FunctionExact_ManyProps` element because in property `string2`, null [1] is incompatible with string [2].
  References:
  416:   string2={null}
                  ^^^^ [1]: null
   71:   string2: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:417:13

Error: test.js:417
417:   boolean1={null}
                 ^^^^ Cannot create `FunctionExact_ManyProps` element because in property `boolean1`, null [1] is incompatible with boolean [2].
  References:
  417:   boolean1={null}
                   ^^^^ [1]: null
   72:   boolean1: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:418:13

Error: test.js:418
418:   boolean2={null}
                 ^^^^ Cannot create `FunctionExact_ManyProps` element because in property `boolean2`, null [1] is incompatible with boolean [2].
  References:
  418:   boolean2={null}
                   ^^^^ [1]: null
   73:   boolean2: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:419:11

Error: test.js:419
419:   number={null}
               ^^^^ Cannot create `FunctionExact_ManyProps` element because in property `number`, null [1] is incompatible with number [2].
  References:
  419:   number={null}
                 ^^^^ [1]: null
   74:   number: number,
                 ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:421:2

Error: test.js:421
421: <FunctionExact_ManyProps // OK: All props are defined. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v----------------------------------------------------------------------------
  421: <FunctionExact_ManyProps // OK: All props are defined. Error for exact types.
  422:   string1="foo"
  423:   string2={'bar'}
  ...:
  427: />;
       -^ [1]: props
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                               ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:428:2

Error: test.js:428
428: <FunctionExact_ManyProps // OK: All props are defined. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v----------------------------------------------------------------------------
  428: <FunctionExact_ManyProps // OK: All props are defined. Error for exact types.
  429:   {...{string1: 'foo', string2: 'bar'}}
  430:   {...{boolean1: true, boolean2: false}}
  431:   {...{number: 42}}
  432: />;
       -^ [1]: props
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                               ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:433:2

Error: test.js:433
433: <FunctionExact_ManyProps // Error: Missing `number`. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v--------------------------------------------------------------------------
  433: <FunctionExact_ManyProps // Error: Missing `number`. Error for exact types.
  434:   {...{string1: 'foo', string2: 'bar'}}
  435:   {...{boolean1: true, boolean2: false}}
  436: />;
       -^ [1]: props
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                               ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:433:2

Error: test.js:433
433: <FunctionExact_ManyProps // Error: Missing `number`. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
       v--------------------------------------------------------------------------
  433: <FunctionExact_ManyProps // Error: Missing `number`. Error for exact types.
  434:   {...{string1: 'foo', string2: 'bar'}}
  435:   {...{boolean1: true, boolean2: false}}
  436: />;
       -^ [1]: props
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                      ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:437:2

Error: test.js:437
437: <FunctionExact_ManyProps // OK: Extra props are allowed. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v------------------------------------------------------------------------------
  437: <FunctionExact_ManyProps // OK: Extra props are allowed. Error for exact types.
  438:   string1="foo"
  439:   string2={'bar'}
  ...:
  443: />;
       -^ [1]: props
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                               ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:444:2

Error: test.js:444
444: <FunctionExact_ManyProps // OK: `number` is overwritten. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v------------------------------------------------------------------------------
  444: <FunctionExact_ManyProps // OK: `number` is overwritten. Error for exact types.
  445:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
  446:   boolean1
  ...:
  449: />;
       -^ [1]: props
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                               ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:445:54

Error: test.js:445
445:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ Cannot create `FunctionExact_ManyProps` element because in property `number`, null or undefined [1] is incompatible with number [2].
  References:
  445:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
   74:   number: number,
                 ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:450:2

Error: test.js:450
450: <FunctionExact_ManyProps // Error: `number` cannot be null. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v---------------------------------------------------------------------------------
  450: <FunctionExact_ManyProps // Error: `number` cannot be null. Error for exact types.
  451:   boolean1
  452:   boolean2={false}
  ...:
  455: />;
       -^ [1]: props
  395: const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                               ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:454:54

Error: test.js:454
454:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined [1] is incompatible with number [2].
  References:
  454:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
  453:   number={42}
                 ^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:458:2

Error: test.js:458
458: <Abstract_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^ Cannot create `Abstract_ManyProps` element because property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  458: <Abstract_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:458:2

Error: test.js:458
458: <Abstract_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^ Cannot create `Abstract_ManyProps` element because property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  458: <Abstract_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:458:2

Error: test.js:458
458: <Abstract_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^ Cannot create `Abstract_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  458: <Abstract_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:458:2

Error: test.js:458
458: <Abstract_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^ Cannot create `Abstract_ManyProps` element because property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  458: <Abstract_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:458:2

Error: test.js:458
458: <Abstract_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^ Cannot create `Abstract_ManyProps` element because property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  458: <Abstract_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:477:12

Error: test.js:477
477:   string1={null}
                ^^^^ Cannot create `Abstract_ManyProps` element because in property `string1`, null [1] is incompatible with string [2].
  References:
  477:   string1={null}
                  ^^^^ [1]: null
   70:   string1: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:478:12

Error: test.js:478
478:   string2={null}
                ^^^^ Cannot create `Abstract_ManyProps` element because in property `string2`, null [1] is incompatible with string [2].
  References:
  478:   string2={null}
                  ^^^^ [1]: null
   71:   string2: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:479:13

Error: test.js:479
479:   boolean1={null}
                 ^^^^ Cannot create `Abstract_ManyProps` element because in property `boolean1`, null [1] is incompatible with boolean [2].
  References:
  479:   boolean1={null}
                   ^^^^ [1]: null
   72:   boolean1: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:480:13

Error: test.js:480
480:   boolean2={null}
                 ^^^^ Cannot create `Abstract_ManyProps` element because in property `boolean2`, null [1] is incompatible with boolean [2].
  References:
  480:   boolean2={null}
                   ^^^^ [1]: null
   73:   boolean2: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:481:11

Error: test.js:481
481:   number={null}
               ^^^^ Cannot create `Abstract_ManyProps` element because in property `number`, null [1] is incompatible with number [2].
  References:
  481:   number={null}
                 ^^^^ [1]: null
   74:   number: number,
                 ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:495:2

Error: test.js:495
495: <Abstract_ManyProps // Error: Missing `number`.
      ^^^^^^^^^^^^^^^^^^ Cannot create `Abstract_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
       v----------------------------------------------
  495: <Abstract_ManyProps // Error: Missing `number`.
  496:   {...{string1: 'foo', string2: 'bar'}}
  497:   {...{boolean1: true, boolean2: false}}
  498: />;
       -^ [1]: props
  457: const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:507:54

Error: test.js:507
507:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ Cannot create `Abstract_ManyProps` element because in property `number`, null or undefined [1] is incompatible with number [2].
  References:
  507:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
   74:   number: number,
                 ^^^^^^ [2]: number

Error --------------------------------------------------------------------------------------------------- test.js:516:54

Error: test.js:516
516:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined [1] is incompatible with number [2].
  References:
  516:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
  515:   number={42}
                 ^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:521:2

Error: test.js:521
521: <AbstractExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  521: <AbstractExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                 ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:521:2

Error: test.js:521
521: <AbstractExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  521: <AbstractExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                 ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:521:2

Error: test.js:521
521: <AbstractExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  521: <AbstractExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                 ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:521:2

Error: test.js:521
521: <AbstractExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  521: <AbstractExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                 ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:521:2

Error: test.js:521
521: <AbstractExact_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  521: <AbstractExact_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                 ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:529:2

Error: test.js:529
529: <AbstractExact_ManyProps // Error: Other props are not allowed.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because property `a` is missing in `Props_ManyProps` [1] but exists in props [2].
  References:
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                 ^^^^^^^^^^^^^^^ [1]: `Props_ManyProps`
       v--------------------------------------------------------------
  529: <AbstractExact_ManyProps // Error: Other props are not allowed.
  530:   string1="foo"
  531:   string2={'bar'}
  ...:
  538: />;
       -^ [2]: props

Error ---------------------------------------------------------------------------------------------------- test.js:529:2

Error: test.js:529
529: <AbstractExact_ManyProps // Error: Other props are not allowed.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because property `b` is missing in `Props_ManyProps` [1] but exists in props [2].
  References:
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                 ^^^^^^^^^^^^^^^ [1]: `Props_ManyProps`
       v--------------------------------------------------------------
  529: <AbstractExact_ManyProps // Error: Other props are not allowed.
  530:   string1="foo"
  531:   string2={'bar'}
  ...:
  538: />;
       -^ [2]: props

Error ---------------------------------------------------------------------------------------------------- test.js:529:2

Error: test.js:529
529: <AbstractExact_ManyProps // Error: Other props are not allowed.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because property `c` is missing in `Props_ManyProps` [1] but exists in props [2].
  References:
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                 ^^^^^^^^^^^^^^^ [1]: `Props_ManyProps`
       v--------------------------------------------------------------
  529: <AbstractExact_ManyProps // Error: Other props are not allowed.
  530:   string1="foo"
  531:   string2={'bar'}
  ...:
  538: />;
       -^ [2]: props

Error --------------------------------------------------------------------------------------------------- test.js:540:12

Error: test.js:540
540:   string1={null}
                ^^^^ Cannot create `AbstractExact_ManyProps` element because in property `string1`, null [1] is incompatible with string [2].
  References:
  540:   string1={null}
                  ^^^^ [1]: null
   70:   string1: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:541:12

Error: test.js:541
541:   string2={null}
                ^^^^ Cannot create `AbstractExact_ManyProps` element because in property `string2`, null [1] is incompatible with string [2].
  References:
  541:   string2={null}
                  ^^^^ [1]: null
   71:   string2: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:542:13

Error: test.js:542
542:   boolean1={null}
                 ^^^^ Cannot create `AbstractExact_ManyProps` element because in property `boolean1`, null [1] is incompatible with boolean [2].
  References:
  542:   boolean1={null}
                   ^^^^ [1]: null
   72:   boolean1: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:543:13

Error: test.js:543
543:   boolean2={null}
                 ^^^^ Cannot create `AbstractExact_ManyProps` element because in property `boolean2`, null [1] is incompatible with boolean [2].
  References:
  543:   boolean2={null}
                   ^^^^ [1]: null
   73:   boolean2: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:544:11

Error: test.js:544
544:   number={null}
               ^^^^ Cannot create `AbstractExact_ManyProps` element because in property `number`, null [1] is incompatible with number [2].
  References:
  544:   number={null}
                 ^^^^ [1]: null
   74:   number: number,
                 ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:546:2

Error: test.js:546
546: <AbstractExact_ManyProps // OK: All props are defined. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v----------------------------------------------------------------------------
  546: <AbstractExact_ManyProps // OK: All props are defined. Error for exact types.
  547:   string1="foo"
  548:   string2={'bar'}
  ...:
  552: />;
       -^ [1]: props
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                          ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:553:2

Error: test.js:553
553: <AbstractExact_ManyProps // OK: All props are defined. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v----------------------------------------------------------------------------
  553: <AbstractExact_ManyProps // OK: All props are defined. Error for exact types.
  554:   {...{string1: 'foo', string2: 'bar'}}
  555:   {...{boolean1: true, boolean2: false}}
  556:   {...{number: 42}}
  557: />;
       -^ [1]: props
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                          ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:558:2

Error: test.js:558
558: <AbstractExact_ManyProps // Error: Missing `number`.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v---------------------------------------------------
  558: <AbstractExact_ManyProps // Error: Missing `number`.
  559:   {...{string1: 'foo', string2: 'bar'}}
  560:   {...{boolean1: true, boolean2: false}}
  561: />;
       -^ [1]: props
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                          ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:558:2

Error: test.js:558
558: <AbstractExact_ManyProps // Error: Missing `number`.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
       v---------------------------------------------------
  558: <AbstractExact_ManyProps // Error: Missing `number`.
  559:   {...{string1: 'foo', string2: 'bar'}}
  560:   {...{boolean1: true, boolean2: false}}
  561: />;
       -^ [1]: props
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                 ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:562:2

Error: test.js:562
562: <AbstractExact_ManyProps // OK: Extra props are allowed. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v------------------------------------------------------------------------------
  562: <AbstractExact_ManyProps // OK: Extra props are allowed. Error for exact types.
  563:   string1="foo"
  564:   string2={'bar'}
  ...:
  568: />;
       -^ [1]: props
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                          ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:569:2

Error: test.js:569
569: <AbstractExact_ManyProps // OK: `number` is overwritten. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v------------------------------------------------------------------------------
  569: <AbstractExact_ManyProps // OK: `number` is overwritten. Error for exact types.
  570:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
  571:   boolean1
  ...:
  574: />;
       -^ [1]: props
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                          ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:570:54

Error: test.js:570
570:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ Cannot create `AbstractExact_ManyProps` element because in property `number`, null or undefined [1] is incompatible with number [2].
  References:
  570:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
   74:   number: number,
                 ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:575:2

Error: test.js:575
575: <AbstractExact_ManyProps // Error: `number` cannot be null. Error for exact types.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].
  References:
       v---------------------------------------------------------------------------------
  575: <AbstractExact_ManyProps // Error: `number` cannot be null. Error for exact types.
  576:   boolean1
  577:   boolean2={false}
  ...:
  580: />;
       -^ [1]: props
  519: const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                          ^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:579:54

Error: test.js:579
579:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined [1] is incompatible with number [2].
  References:
  579:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
  578:   number={42}
                 ^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:583:2

Error: test.js:583
583: <Member_ManyProps.prop />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^ Cannot create `Member_ManyProps.prop` element because property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  583: <Member_ManyProps.prop />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:583:2

Error: test.js:583
583: <Member_ManyProps.prop />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^ Cannot create `Member_ManyProps.prop` element because property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  583: <Member_ManyProps.prop />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:583:2

Error: test.js:583
583: <Member_ManyProps.prop />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^ Cannot create `Member_ManyProps.prop` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  583: <Member_ManyProps.prop />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:583:2

Error: test.js:583
583: <Member_ManyProps.prop />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^ Cannot create `Member_ManyProps.prop` element because property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  583: <Member_ManyProps.prop />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:583:2

Error: test.js:583
583: <Member_ManyProps.prop />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^ Cannot create `Member_ManyProps.prop` element because property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  583: <Member_ManyProps.prop />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:602:12

Error: test.js:602
602:   string1={null}
                ^^^^ Cannot create `Member_ManyProps.prop` element because in property `string1`, null [1] is incompatible with string [2].
  References:
  602:   string1={null}
                  ^^^^ [1]: null
   70:   string1: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:603:12

Error: test.js:603
603:   string2={null}
                ^^^^ Cannot create `Member_ManyProps.prop` element because in property `string2`, null [1] is incompatible with string [2].
  References:
  603:   string2={null}
                  ^^^^ [1]: null
   71:   string2: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:604:13

Error: test.js:604
604:   boolean1={null}
                 ^^^^ Cannot create `Member_ManyProps.prop` element because in property `boolean1`, null [1] is incompatible with boolean [2].
  References:
  604:   boolean1={null}
                   ^^^^ [1]: null
   72:   boolean1: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:605:13

Error: test.js:605
605:   boolean2={null}
                 ^^^^ Cannot create `Member_ManyProps.prop` element because in property `boolean2`, null [1] is incompatible with boolean [2].
  References:
  605:   boolean2={null}
                   ^^^^ [1]: null
   73:   boolean2: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:606:11

Error: test.js:606
606:   number={null}
               ^^^^ Cannot create `Member_ManyProps.prop` element because in property `number`, null [1] is incompatible with number [2].
  References:
  606:   number={null}
                 ^^^^ [1]: null
   74:   number: number,
                 ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:620:2

Error: test.js:620
620: <Member_ManyProps.prop // Error: Missing `number`.
      ^^^^^^^^^^^^^^^^^^^^^ Cannot create `Member_ManyProps.prop` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
       v-------------------------------------------------
  620: <Member_ManyProps.prop // Error: Missing `number`.
  621:   {...{string1: 'foo', string2: 'bar'}}
  622:   {...{boolean1: true, boolean2: false}}
  623: />;
       -^ [1]: props
  147: class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                     ^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:632:54

Error: test.js:632
632:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ Cannot create `Member_ManyProps.prop` element because in property `number`, null or undefined [1] is incompatible with number [2].
  References:
  632:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
   74:   number: number,
                 ^^^^^^ [2]: number

Error --------------------------------------------------------------------------------------------------- test.js:641:54

Error: test.js:641
641:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined [1] is incompatible with number [2].
  References:
  641:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
  640:   number={42}
                 ^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:645:2

Error: test.js:645
645: <EnhancedClass_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedClass_ManyProps` element because property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  645: <EnhancedClass_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:645:2

Error: test.js:645
645: <EnhancedClass_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedClass_ManyProps` element because property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  645: <EnhancedClass_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:645:2

Error: test.js:645
645: <EnhancedClass_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedClass_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  645: <EnhancedClass_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:645:2

Error: test.js:645
645: <EnhancedClass_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedClass_ManyProps` element because property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  645: <EnhancedClass_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:645:2

Error: test.js:645
645: <EnhancedClass_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedClass_ManyProps` element because property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  645: <EnhancedClass_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:664:12

Error: test.js:664
664:   string1={null}
                ^^^^ Cannot create `EnhancedClass_ManyProps` element because in property `string1`, null [1] is incompatible with string [2].
  References:
  664:   string1={null}
                  ^^^^ [1]: null
   70:   string1: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:665:12

Error: test.js:665
665:   string2={null}
                ^^^^ Cannot create `EnhancedClass_ManyProps` element because in property `string2`, null [1] is incompatible with string [2].
  References:
  665:   string2={null}
                  ^^^^ [1]: null
   71:   string2: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:666:13

Error: test.js:666
666:   boolean1={null}
                 ^^^^ Cannot create `EnhancedClass_ManyProps` element because in property `boolean1`, null [1] is incompatible with boolean [2].
  References:
  666:   boolean1={null}
                   ^^^^ [1]: null
   72:   boolean1: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:667:13

Error: test.js:667
667:   boolean2={null}
                 ^^^^ Cannot create `EnhancedClass_ManyProps` element because in property `boolean2`, null [1] is incompatible with boolean [2].
  References:
  667:   boolean2={null}
                   ^^^^ [1]: null
   73:   boolean2: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:668:11

Error: test.js:668
668:   number={null}
               ^^^^ Cannot create `EnhancedClass_ManyProps` element because in property `number`, null [1] is incompatible with number [2].
  References:
  668:   number={null}
                 ^^^^ [1]: null
   74:   number: number,
                 ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:682:2

Error: test.js:682
682: <EnhancedClass_ManyProps // Error: Missing `number`.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedClass_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
       v---------------------------------------------------
  682: <EnhancedClass_ManyProps // Error: Missing `number`.
  683:   {...{string1: 'foo', string2: 'bar'}}
  684:   {...{boolean1: true, boolean2: false}}
  685: />;
       -^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:694:54

Error: test.js:694
694:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ Cannot create `EnhancedClass_ManyProps` element because in property `number`, null or undefined [1] is incompatible with number [2].
  References:
  694:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
   74:   number: number,
                 ^^^^^^ [2]: number

Error --------------------------------------------------------------------------------------------------- test.js:703:54

Error: test.js:703
703:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined [1] is incompatible with number [2].
  References:
  703:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
  702:   number={42}
                 ^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:707:2

Error: test.js:707
707: <EnhancedFunction_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedFunction_ManyProps` element because property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  707: <EnhancedFunction_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:707:2

Error: test.js:707
707: <EnhancedFunction_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedFunction_ManyProps` element because property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  707: <EnhancedFunction_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:707:2

Error: test.js:707
707: <EnhancedFunction_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedFunction_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  707: <EnhancedFunction_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:707:2

Error: test.js:707
707: <EnhancedFunction_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedFunction_ManyProps` element because property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  707: <EnhancedFunction_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error ---------------------------------------------------------------------------------------------------- test.js:707:2

Error: test.js:707
707: <EnhancedFunction_ManyProps />; // Error: There are no props.
      ^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedFunction_ManyProps` element because property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
  707: <EnhancedFunction_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:726:12

Error: test.js:726
726:   string1={null}
                ^^^^ Cannot create `EnhancedFunction_ManyProps` element because in property `string1`, null [1] is incompatible with string [2].
  References:
  726:   string1={null}
                  ^^^^ [1]: null
   70:   string1: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:727:12

Error: test.js:727
727:   string2={null}
                ^^^^ Cannot create `EnhancedFunction_ManyProps` element because in property `string2`, null [1] is incompatible with string [2].
  References:
  727:   string2={null}
                  ^^^^ [1]: null
   71:   string2: string,
                  ^^^^^^ [2]: string

Error --------------------------------------------------------------------------------------------------- test.js:728:13

Error: test.js:728
728:   boolean1={null}
                 ^^^^ Cannot create `EnhancedFunction_ManyProps` element because in property `boolean1`, null [1] is incompatible with boolean [2].
  References:
  728:   boolean1={null}
                   ^^^^ [1]: null
   72:   boolean1: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:729:13

Error: test.js:729
729:   boolean2={null}
                 ^^^^ Cannot create `EnhancedFunction_ManyProps` element because in property `boolean2`, null [1] is incompatible with boolean [2].
  References:
  729:   boolean2={null}
                   ^^^^ [1]: null
   73:   boolean2: boolean,
                   ^^^^^^^ [2]: boolean

Error --------------------------------------------------------------------------------------------------- test.js:730:11

Error: test.js:730
730:   number={null}
               ^^^^ Cannot create `EnhancedFunction_ManyProps` element because in property `number`, null [1] is incompatible with number [2].
  References:
  730:   number={null}
                 ^^^^ [1]: null
   74:   number: number,
                 ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:744:2

Error: test.js:744
744: <EnhancedFunction_ManyProps // Error: Missing `number`.
      ^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedFunction_ManyProps` element because property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
  References:
       v------------------------------------------------------
  744: <EnhancedFunction_ManyProps // Error: Missing `number`.
  745:   {...{string1: 'foo', string2: 'bar'}}
  746:   {...{boolean1: true, boolean2: false}}
  747: />;
       -^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_ManyProps`

Error --------------------------------------------------------------------------------------------------- test.js:756:54

Error: test.js:756
756:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ Cannot create `EnhancedFunction_ManyProps` element because in property `number`, null or undefined [1] is incompatible with number [2].
  References:
  756:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
   74:   number: number,
                 ^^^^^^ [2]: number

Error --------------------------------------------------------------------------------------------------- test.js:765:54

Error: test.js:765
765:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                          ^^^^^^^ null or undefined [1] is incompatible with number [2].
  References:
  765:   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                            ^^^^^^^ [1]: null or undefined
  764:   number={42}
                 ^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:780:2

Error: test.js:780
780: <Legacy_OptionalProps />; // Error: `foo` is required.
      ^^^^^^^^^^^^^^^^^^^^ Cannot create `Legacy_OptionalProps` element because property `foo` is missing in props [1] but exists in propTypes of React component [2].
  References:
  780: <Legacy_OptionalProps />; // Error: `foo` is required.
       ^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
                    v
  775:   propTypes: {
  776:     foo: React.PropTypes.number.isRequired,
  777:     bar: React.PropTypes.number,
  778:   },
         ^ [2]: propTypes of React component

Error --------------------------------------------------------------------------------------------------- test.js:782:28

Error: test.js:782
782: <Legacy_OptionalProps foo={undefined} />; // Error: No ?number proptype.
                                ^^^^^^^^^ Cannot create `Legacy_OptionalProps` element because in property `foo`, undefined [1] is incompatible with number [2].
  References:
   13: declare var undefined: void;
                              ^^^^ [1]: undefined. See lib: <BUILTINS>/core.js:13
  294:   number: React$PropType$Primitive<number>;
                                          ^^^^^^ [2]: number. See lib: <BUILTINS>/react.js:294

Error ---------------------------------------------------------------------------------------------------- test.js:788:7

Error: test.js:788
788:   foo="nope"
           ^^^^^^ Cannot create `Legacy_OptionalProps` element because in property `foo`, string [1] is incompatible with number [2].
  References:
  788:   foo="nope"
             ^^^^^^ [1]: string
  294:   number: React$PropType$Primitive<number>;
                                          ^^^^^^ [2]: number. See lib: <BUILTINS>/react.js:294

Error ---------------------------------------------------------------------------------------------------- test.js:793:7

Error: test.js:793
793:   bar="nope"
           ^^^^^^ Cannot create `Legacy_OptionalProps` element because in property `bar`, string [1] is incompatible with number [2].
  References:
  793:   bar="nope"
             ^^^^^^ [1]: string
  294:   number: React$PropType$Primitive<number>;
                                          ^^^^^^ [2]: number. See lib: <BUILTINS>/react.js:294

Error ---------------------------------------------------------------------------------------------------- test.js:797:2

Error: test.js:797
797: <Class_OptionalProps />; // Error: `foo` is required.
      ^^^^^^^^^^^^^^^^^^^ Cannot create `Class_OptionalProps` element because property `foo` is missing in props [1] but exists in `Props_OptionalProps` [2].
  References:
  797: <Class_OptionalProps />; // Error: `foo` is required.
       ^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  796: class Class_OptionalProps extends React.Component<Props_OptionalProps> {}
                                                         ^^^^^^^^^^^^^^^^^^^ [2]: `Props_OptionalProps`

Error ---------------------------------------------------------------------------------------------------- test.js:805:7

Error: test.js:805
805:   foo="nope"
           ^^^^^^ Cannot create `Class_OptionalProps` element because in property `foo`, string [1] is incompatible with number [2].
  References:
  805:   foo="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                         ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:810:7

Error: test.js:810
810:   bar="nope"
           ^^^^^^ Cannot create `Class_OptionalProps` element because in property `bar`, string [1] is incompatible with number [2].
  References:
  810:   bar="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                       ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:815:2

Error: test.js:815
815: <ClassExact_OptionalProps />; // Error: `foo` is required.
      ^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_OptionalProps` element because property `foo` is missing in props [1] but exists in `Props_OptionalProps` [2].
  References:
  815: <ClassExact_OptionalProps />; // Error: `foo` is required.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  814:   extends React.Component<$Exact<Props_OptionalProps>> {}
                                        ^^^^^^^^^^^^^^^^^^^ [2]: `Props_OptionalProps`

Error ---------------------------------------------------------------------------------------------------- test.js:823:7

Error: test.js:823
823:   foo="nope"
           ^^^^^^ Cannot create `ClassExact_OptionalProps` element because in property `foo`, string [1] is incompatible with number [2].
  References:
  823:   foo="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                         ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:828:7

Error: test.js:828
828:   bar="nope"
           ^^^^^^ Cannot create `ClassExact_OptionalProps` element because in property `bar`, string [1] is incompatible with number [2].
  References:
  828:   bar="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                       ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:833:2

Error: test.js:833
833: <ClassPure_OptionalProps />; // Error: `foo` is required.
      ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassPure_OptionalProps` element because property `foo` is missing in props [1] but exists in `Props_OptionalProps` [2].
  References:
  833: <ClassPure_OptionalProps />; // Error: `foo` is required.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  832:   extends React.PureComponent<Props_OptionalProps> {}
                                     ^^^^^^^^^^^^^^^^^^^ [2]: `Props_OptionalProps`

Error ---------------------------------------------------------------------------------------------------- test.js:841:7

Error: test.js:841
841:   foo="nope"
           ^^^^^^ Cannot create `ClassPure_OptionalProps` element because in property `foo`, string [1] is incompatible with number [2].
  References:
  841:   foo="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                         ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:846:7

Error: test.js:846
846:   bar="nope"
           ^^^^^^ Cannot create `ClassPure_OptionalProps` element because in property `bar`, string [1] is incompatible with number [2].
  References:
  846:   bar="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                       ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:850:2

Error: test.js:850
850: <Function_OptionalProps />; // Error: `foo` is required.
      ^^^^^^^^^^^^^^^^^^^^^^ Cannot create `Function_OptionalProps` element because property `foo` is missing in props [1] but exists in `Props_OptionalProps` [2].
  References:
  850: <Function_OptionalProps />; // Error: `foo` is required.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  849: const Function_OptionalProps = (props: Props_OptionalProps) => any;
                                              ^^^^^^^^^^^^^^^^^^^ [2]: `Props_OptionalProps`

Error ---------------------------------------------------------------------------------------------------- test.js:858:7

Error: test.js:858
858:   foo="nope"
           ^^^^^^ Cannot create `Function_OptionalProps` element because in property `foo`, string [1] is incompatible with number [2].
  References:
  858:   foo="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                         ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:863:7

Error: test.js:863
863:   bar="nope"
           ^^^^^^ Cannot create `Function_OptionalProps` element because in property `bar`, string [1] is incompatible with number [2].
  References:
  863:   bar="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                       ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:867:2

Error: test.js:867
867: <FunctionExact_OptionalProps />; // Error: `foo` is required.
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_OptionalProps` element because property `foo` is missing in props [1] but exists in `Props_OptionalProps` [2].
  References:
  867: <FunctionExact_OptionalProps />; // Error: `foo` is required.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  866: const FunctionExact_OptionalProps = (props: $Exact<Props_OptionalProps>) => any;
                                                          ^^^^^^^^^^^^^^^^^^^ [2]: `Props_OptionalProps`

Error ---------------------------------------------------------------------------------------------------- test.js:875:7

Error: test.js:875
875:   foo="nope"
           ^^^^^^ Cannot create `FunctionExact_OptionalProps` element because in property `foo`, string [1] is incompatible with number [2].
  References:
  875:   foo="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                         ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:880:7

Error: test.js:880
880:   bar="nope"
           ^^^^^^ Cannot create `FunctionExact_OptionalProps` element because in property `bar`, string [1] is incompatible with number [2].
  References:
  880:   bar="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                       ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:884:2

Error: test.js:884
884: <Abstract_OptionalProps />; // Error: `foo` is required.
      ^^^^^^^^^^^^^^^^^^^^^^ Cannot create `Abstract_OptionalProps` element because property `foo` is missing in props [1] but exists in `Props_OptionalProps` [2].
  References:
  884: <Abstract_OptionalProps />; // Error: `foo` is required.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  883: const Abstract_OptionalProps: React.ComponentType<Props_OptionalProps> = any;
                                                         ^^^^^^^^^^^^^^^^^^^ [2]: `Props_OptionalProps`

Error ---------------------------------------------------------------------------------------------------- test.js:892:7

Error: test.js:892
892:   foo="nope"
           ^^^^^^ Cannot create `Abstract_OptionalProps` element because in property `foo`, string [1] is incompatible with number [2].
  References:
  892:   foo="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                         ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:897:7

Error: test.js:897
897:   bar="nope"
           ^^^^^^ Cannot create `Abstract_OptionalProps` element because in property `bar`, string [1] is incompatible with number [2].
  References:
  897:   bar="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                       ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:902:2

Error: test.js:902
902: <AbstractExact_OptionalProps />; // Error: `foo` is required.
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `AbstractExact_OptionalProps` element because property `foo` is missing in props [1] but exists in `Props_OptionalProps` [2].
  References:
  902: <AbstractExact_OptionalProps />; // Error: `foo` is required.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  901:   React.ComponentType<$Exact<Props_OptionalProps>> = any;
                                    ^^^^^^^^^^^^^^^^^^^ [2]: `Props_OptionalProps`

Error ---------------------------------------------------------------------------------------------------- test.js:910:7

Error: test.js:910
910:   foo="nope"
           ^^^^^^ Cannot create `AbstractExact_OptionalProps` element because in property `foo`, string [1] is incompatible with number [2].
  References:
  910:   foo="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                         ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:915:7

Error: test.js:915
915:   bar="nope"
           ^^^^^^ Cannot create `AbstractExact_OptionalProps` element because in property `bar`, string [1] is incompatible with number [2].
  References:
  915:   bar="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                       ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:919:2

Error: test.js:919
919: <Member_OptionalProps.prop />; // Error: `foo` is required.
      ^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `Member_OptionalProps.prop` element because property `foo` is missing in props [1] but exists in `Props_OptionalProps` [2].
  References:
  919: <Member_OptionalProps.prop />; // Error: `foo` is required.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
  796: class Class_OptionalProps extends React.Component<Props_OptionalProps> {}
                                                         ^^^^^^^^^^^^^^^^^^^ [2]: `Props_OptionalProps`

Error ---------------------------------------------------------------------------------------------------- test.js:927:7

Error: test.js:927
927:   foo="nope"
           ^^^^^^ Cannot create `Member_OptionalProps.prop` element because in property `foo`, string [1] is incompatible with number [2].
  References:
  927:   foo="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                         ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:932:7

Error: test.js:932
932:   bar="nope"
           ^^^^^^ Cannot create `Member_OptionalProps.prop` element because in property `bar`, string [1] is incompatible with number [2].
  References:
  932:   bar="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                       ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:936:2

Error: test.js:936
936: <EnhancedClass_OptionalProps />; // Error: `foo` is required.
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedClass_OptionalProps` element because property `foo` is missing in props [1] but exists in `Props_OptionalProps` [2].
  References:
  936: <EnhancedClass_OptionalProps />; // Error: `foo` is required.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_OptionalProps`

Error ---------------------------------------------------------------------------------------------------- test.js:944:7

Error: test.js:944
944:   foo="nope"
           ^^^^^^ Cannot create `EnhancedClass_OptionalProps` element because in property `foo`, string [1] is incompatible with number [2].
  References:
  944:   foo="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                         ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:949:7

Error: test.js:949
949:   bar="nope"
           ^^^^^^ Cannot create `EnhancedClass_OptionalProps` element because in property `bar`, string [1] is incompatible with number [2].
  References:
  949:   bar="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                       ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:953:2

Error: test.js:953
953: <EnhancedFunction_OptionalProps />; // Error: `foo` is required.
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedFunction_OptionalProps` element because property `foo` is missing in props [1] but exists in `Props_OptionalProps` [2].
  References:
  953: <EnhancedFunction_OptionalProps />; // Error: `foo` is required.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_OptionalProps`

Error ---------------------------------------------------------------------------------------------------- test.js:961:7

Error: test.js:961
961:   foo="nope"
           ^^^^^^ Cannot create `EnhancedFunction_OptionalProps` element because in property `foo`, string [1] is incompatible with number [2].
  References:
  961:   foo="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                         ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:966:7

Error: test.js:966
966:   bar="nope"
           ^^^^^^ Cannot create `EnhancedFunction_OptionalProps` element because in property `bar`, string [1] is incompatible with number [2].
  References:
  966:   bar="nope"
             ^^^^^^ [1]: string
  772: type Props_OptionalProps = {foo: ?number, bar?: number};
                                                       ^^^^^^ [2]: number

Error ---------------------------------------------------------------------------------------------------- test.js:994:2

Error: test.js:994
994: <Legacy_DefaultProps // Error: It is missing a required non-default prop.
      ^^^^^^^^^^^^^^^^^^^ Cannot create `Legacy_DefaultProps` element because property `bar` is missing in props [1] but exists in propTypes of React component [2].
  References:
       v------------------------------------------------------------------------
  994: <Legacy_DefaultProps // Error: It is missing a required non-default prop.
  995:   foo={1}
  996: />;
       -^ [1]: props
                    v
  979:   propTypes: {
  980:     foo: React.PropTypes.number.isRequired,
  981:     bar: React.PropTypes.number.isRequired,
  982:   },
         ^ [2]: propTypes of React component

Error --------------------------------------------------------------------------------------------------- test.js:1010:2

Error: test.js:1010
1010: <Class_DefaultProps // Error: It is missing a required non-default prop.
       ^^^^^^^^^^^^^^^^^^ Cannot create `Class_DefaultProps` element because property `bar` is missing in props [1] but exists in `Props_DefaultProps` [2].
  References:
        v-----------------------------------------------------------------------
  1010: <Class_DefaultProps // Error: It is missing a required non-default prop.
  1011:   foo={1}
  1012: />;
        -^ [1]: props
  998: class Class_DefaultProps extends React.Component<Props_DefaultProps> {
                                                        ^^^^^^^^^^^^^^^^^^ [2]: `Props_DefaultProps`

Error --------------------------------------------------------------------------------------------------- test.js:1027:2

Error: test.js:1027
1027: <ClassExact_DefaultProps // Error: It is missing a required non-default prop.
       ^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassExact_DefaultProps` element because property `bar` is missing in props [1] but exists in `Props_DefaultProps` [2].
  References:
        v----------------------------------------------------------------------------
  1027: <ClassExact_DefaultProps // Error: It is missing a required non-default prop.
  1028:   foo={1}
  1029: />;
        -^ [1]: props
  1015:   extends React.Component<$Exact<Props_DefaultProps>> {
                                         ^^^^^^^^^^^^^^^^^^ [2]: `Props_DefaultProps`

Error --------------------------------------------------------------------------------------------------- test.js:1043:2

Error: test.js:1043
1043: <ClassPure_DefaultProps // Error: It is missing a required non-default prop.
       ^^^^^^^^^^^^^^^^^^^^^^ Cannot create `ClassPure_DefaultProps` element because property `bar` is missing in props [1] but exists in `Props_DefaultProps` [2].
  References:
        v---------------------------------------------------------------------------
  1043: <ClassPure_DefaultProps // Error: It is missing a required non-default prop.
  1044:   foo={1}
  1045: />;
        -^ [1]: props
  1031: class ClassPure_DefaultProps extends React.PureComponent<Props_DefaultProps> {
                                                                 ^^^^^^^^^^^^^^^^^^ [2]: `Props_DefaultProps`

Error --------------------------------------------------------------------------------------------------- test.js:1060:2

Error: test.js:1060
1060: <Function_DefaultProps // Error: It is missing a required non-default prop.
       ^^^^^^^^^^^^^^^^^^^^^ Cannot create `Function_DefaultProps` element because property `bar` is missing in props [1] but exists in `Props_DefaultProps` [2].
  References:
        v--------------------------------------------------------------------------
  1060: <Function_DefaultProps // Error: It is missing a required non-default prop.
  1061:   foo={1}
  1062: />;
        -^ [1]: props
  1047: function Function_DefaultProps(props: Props_DefaultProps) {
                                              ^^^^^^^^^^^^^^^^^^ [2]: `Props_DefaultProps`

Error --------------------------------------------------------------------------------------------------- test.js:1077:2

Error: test.js:1077
1077: <FunctionExact_DefaultProps // Error: It is missing a required non-default prop.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `FunctionExact_DefaultProps` element because property `bar` is missing in props [1] but exists in `Props_DefaultProps` [2].
  References:
        v-------------------------------------------------------------------------------
  1077: <FunctionExact_DefaultProps // Error: It is missing a required non-default prop.
  1078:   foo={1}
  1079: />;
        -^ [1]: props
  1064: function FunctionExact_DefaultProps(props: $Exact<Props_DefaultProps>) {
                                                          ^^^^^^^^^^^^^^^^^^ [2]: `Props_DefaultProps`

Error --------------------------------------------------------------------------------------------------- test.js:1089:2

Error: test.js:1089
1089: <Member_DefaultProps.prop // Error: It is missing a required non-default prop.
       ^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `Member_DefaultProps.prop` element because property `bar` is missing in props [1] but exists in `Props_DefaultProps` [2].
  References:
        v-----------------------------------------------------------------------------
  1089: <Member_DefaultProps.prop // Error: It is missing a required non-default prop.
  1090:   foo={1}
  1091: />;
        -^ [1]: props
  998: class Class_DefaultProps extends React.Component<Props_DefaultProps> {
                                                        ^^^^^^^^^^^^^^^^^^ [2]: `Props_DefaultProps`

Error --------------------------------------------------------------------------------------------------- test.js:1101:2

Error: test.js:1101
1101: <EnhancedClass_DefaultProps // Error: It is missing a required non-default prop.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedClass_DefaultProps` element because property `bar` is missing in props [1] but exists in `Props_DefaultProps` [2].
  References:
        v-------------------------------------------------------------------------------
  1101: <EnhancedClass_DefaultProps // Error: It is missing a required non-default prop.
  1102:   foo={1}
  1103: />;
        -^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_DefaultProps`

Error --------------------------------------------------------------------------------------------------- test.js:1113:2

Error: test.js:1113
1113: <EnhancedFunction_DefaultProps // Error: It is missing a required non-default prop.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Cannot create `EnhancedFunction_DefaultProps` element because property `bar` is missing in props [1] but exists in `Props_DefaultProps` [2].
  References:
        v----------------------------------------------------------------------------------
  1113: <EnhancedFunction_DefaultProps // Error: It is missing a required non-default prop.
  1114:   foo={1}
  1115: />;
        -^ [1]: props
   11: ): React.ComponentType<React.ElementConfig<Component>> {
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]: `Props_DefaultProps`


Found 216 errors
