Error --------------------------------------------------------- identity.js:19:2

Cannot cast object literal to `Foo` because:
 - in property `a`, string [1] is incompatible with number [2].
 - in property `b`, string [3] is incompatible with number [4].


Error --------------------------------------------------------- identity.js:24:3

Cannot cast `any` to `Foo` because:
 - in property `a`, string [1] is incompatible with number [2].
 - in property `b`, string [3] is incompatible with number [4].


Error --------------------------------------------------------- identity.js:29:2

Cannot cast object literal to `Foo` because:
 - property `a` is missing in object literal [1] but exists in object type [2].
 - property `b` is missing in object literal [1] but exists in object type [2].


Error --------------------------------------------------------- identity.js:31:3

Cannot cast `any` to `Foo` because:
 - property `a` is missing in object type [1] but exists in object type [2].
 - property `b` is missing in object type [1] but exists in object type [2].


Error --------------------------------------------------------- identity.js:38:2

Cannot cast `foo` to object type because:
 - in property `a`, number [1] is incompatible with string [2].
 - in property `b`, number [3] is incompatible with string [4].


Error --------------------------------------------------------- identity.js:43:2

Cannot cast `foo.a` to empty because number [1] is incompatible with empty [2].


Error: identity.js:61
      v
 61: ({
 62:   foo: true, // Error: boolean ~> number | string
 63: }: $ObjMap<
     ^ object literal. This type is incompatible with
        v-------
 63: }: $ObjMap<
 64:   {
 65:     foo: number | string,
...:
 68: >);
     ^ object type
  Property `foo` is incompatible:
     62:   foo: true, // Error: boolean ~> number | string
                ^^^^ boolean. This type is incompatible with
            v-------
     63: }: $ObjMap<
     64:   {
     65:     foo: number | string,
    ...:
     68: >);
         ^ union: number | string
      Member 1:
              v-------
       63: }: $ObjMap<
       64:   {
       65:     foo: number | string,
      ...:
       68: >);
           ^ number
      Error:
       62:   foo: true, // Error: boolean ~> number | string
                  ^^^^ boolean. This type is incompatible with
              v-------
       63: }: $ObjMap<
       64:   {
       65:     foo: number | string,
      ...:
       68: >);
           ^ number
      Member 2:
              v-------
       63: }: $ObjMap<
       64:   {
       65:     foo: number | string,
      ...:
       68: >);
           ^ string
      Error:
       62:   foo: true, // Error: boolean ~> number | string
                  ^^^^ boolean. This type is incompatible with
              v-------
       63: }: $ObjMap<
       64:   {
       65:     foo: number | string,
      ...:
       68: >);
           ^ string

Error: identity.js:70
      v
 70: ({
 71:   foo: true, // Error: boolean ~> number | string
 72: }: $ObjMap<
     ^ object literal. This type is incompatible with
        v-------
 72: }: $ObjMap<
 73:   ({ foo: number } | { foo: string }),
 74:   <T>(T) => T,
 75: >);
     ^ union: `$ObjMap`(s)
  Member 1:
          v-------
   72: }: $ObjMap<
   73:   ({ foo: number } | { foo: string }),
   74:   <T>(T) => T,
   75: >);
       ^ $ObjMap
  Error:
        v
   70: ({
   71:   foo: true, // Error: boolean ~> number | string
   72: }: $ObjMap<
       ^ object literal. This type is incompatible with
          v-------
   72: }: $ObjMap<
   73:   ({ foo: number } | { foo: string }),
   74:   <T>(T) => T,
   75: >);
       ^ object type
    Property `foo` is incompatible:
       71:   foo: true, // Error: boolean ~> number | string
                  ^^^^ boolean. This type is incompatible with
              v-------
       72: }: $ObjMap<
       73:   ({ foo: number } | { foo: string }),
       74:   <T>(T) => T,
       75: >);
           ^ number
  Member 2:
          v-------
   72: }: $ObjMap<
   73:   ({ foo: number } | { foo: string }),
   74:   <T>(T) => T,
   75: >);
       ^ $ObjMap
  Error:
        v
   70: ({
   71:   foo: true, // Error: boolean ~> number | string
   72: }: $ObjMap<
       ^ object literal. This type is incompatible with
          v-------
   72: }: $ObjMap<
   73:   ({ foo: number } | { foo: string }),
   74:   <T>(T) => T,
   75: >);
       ^ object type
    Property `foo` is incompatible:
       71:   foo: true, // Error: boolean ~> number | string
                  ^^^^ boolean. This type is incompatible with
              v-------
       72: }: $ObjMap<
       73:   ({ foo: number } | { foo: string }),
       74:   <T>(T) => T,
       75: >);
           ^ string

Error -------------------------------------------------------- issue-2674.js:7:2

Cannot cast `a.FOO` to string literal `BAR` because string literal `FOO` [1] is
incompatible with string literal `BAR` [2].


Error -------------------------------------------------------- issue-2674.js:8:9

Cannot assign `'BAR'` to `a.FOO` because string [1] is incompatible with string
literal `FOO` [2].


Error ------------------------------------------------------- issue-2674.js:14:2

Cannot cast `b.FOO` to string literal `BAR` because string literal `FOO` [1] is
incompatible with string literal `BAR` [2].


Error ------------------------------------------------------- issue-2674.js:15:9

Cannot assign `'BAR'` to `b.FOO` because string [1] is incompatible with string
literal `FOO` [2].


Error ------------------------------------------------------- issue-2674.js:21:2

Cannot cast `c[0]` to string literal `BAR` because string literal `FOO` [1] is
incompatible with string literal `BAR` [2].


Error ------------------------------------------------------- issue-2674.js:22:8

Cannot assign `'BAR'` to `c[0]` because string [1] is incompatible with string
literal `FOO` [2].


Error ----------------------------------------------------------- objmap.js:10:2

Cannot cast `o.FOO` to string literal `BAR` because string literal `FOO` [1] is
incompatible with string literal `BAR` [2].


Error ----------------------------------------------------------- objmap.js:16:4

Cannot cast `o.foo` to string because number [1] is incompatible with
string [2].


Error --------------------------------------------------------- optional.js:13:2

Cannot cast `o3.b` to array type because undefined [1] is incompatible with
array type [2].


Error --------------------------------------------------------- optional.js:17:2

Cannot cast `o6.b` to array type because undefined [1] is incompatible with
array type [2].



Found 23 errors
