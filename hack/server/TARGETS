ocaml_library(
  name='server',
  srcs=[
    'argumentInfoService.ml',
    'autocompleteService.ml',
    'fileOutline.ml',
    'find.ml',
    'find.mli',
    'findRefsService.ml',
    'methodJumps.ml',
    'serverArgs.ml',
    'serverArgs.mli',
    'serverArgumentInfo.ml',
    'serverAutoComplete.ml',
    'serverColorFile.ml',
    'serverConvert.ml',
    'serverCoverageMetric.ml',
    'serverDfind.ml',
    'serverDfind.mli',
    'serverEnv.ml',
    'serverEnvBuild.ml',
    'serverEnvBuild.mli',
    'serverError.ml',
    'serverFileOutline.ml',
    'serverFindRefs.ml',
    'serverHealth.ml',
    'serverIdeUtils.ml',
    'serverIdentifyFunction.ml',
    'serverInferType.ml',
    'serverInit.ml',
    'serverInit.mli',
    'serverMethodJumps.ml',
    'serverMsg.ml',
    'serverPeriodical.ml',
    'serverPeriodical.mli',
    'serverRefactor.ml',
    'serverSearch.ml',
    'serverSign.ml',
    'serverSign.mli',
    'serverTypeCheck.ml',
    'serverTypeCheck.mli',
  ],
  deps=[
    '@/hphp/hack/src/deps',
    '@/hphp/hack/src/dfind',
    '@/hphp/hack/src/globals',
    '@/hphp/hack/src/heap',
    '@/hphp/hack/src/hhi',
    '@/hphp/hack/src/naming',
    '@/hphp/hack/src/parsing',
    '@/hphp/hack/src/procs',
    '@/hphp/hack/src/search',
    '@/hphp/hack/src/typing',
    '@/hphp/hack/src/utils',
  ],
  external_deps=[
    ('ocaml', None, 'str'),
    ('ocaml', None, 'unix')
  ],
  warnings_flags='-27-32',
)

ocaml_library(
  name='server_functors',
  srcs=[
    'hackProgram.ml',
    'serverFunctors.ml',
  ],
  deps=[
    ':server',
    '@/hphp/hack/src/deps',
    '@/hphp/hack/src/facebook/build',
    '@/hphp/hack/src/facebook/logging',
    '@/hphp/hack/src/facebook/prolog',
    '@/hphp/hack/src/heap',
    '@/hphp/hack/src/hhi',
    '@/hphp/hack/src/naming',
    '@/hphp/hack/src/procs',
    '@/hphp/hack/src/search',
    '@/hphp/hack/src/socket',
    '@/hphp/hack/src/typing',
    '@/hphp/hack/src/utils',
  ],
  external_deps=[
    ('ocaml', None, 'unix'),
  ],
)
